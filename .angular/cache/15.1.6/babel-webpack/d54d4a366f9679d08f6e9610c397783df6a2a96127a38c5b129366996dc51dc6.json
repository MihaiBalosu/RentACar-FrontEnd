{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Car } from 'src/app/model/Car';\nimport { CarTypeEnum } from 'src/app/model/CarTypeEnum';\nimport { FuelTypeEnum } from 'src/app/model/FuelTypeEnum';\nlet CarEditorComponent = class CarEditorComponent {\n  constructor(formBuilder, carHttpService, dialogRef, data) {\n    this.formBuilder = formBuilder;\n    this.carHttpService = carHttpService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.car = new Car();\n    this.saveCar = new EventEmitter();\n    this.carTypes = Object.values(CarTypeEnum).filter(carType => isNaN(Number(carType)));\n    this.fuelTypes = Object.values(FuelTypeEnum).filter(fuelType => isNaN(Number(fuelType)));\n    this.selectedPhoto = null;\n    this.photoPreviewUrl = null;\n    this.carForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: [0, Validators.required],\n      numberOfPassengers: [0, Validators.required],\n      numberOfBags: [0, Validators.required],\n      minimumAgeWithoutFee: [0, Validators.required],\n      automaker: ['', Validators.required],\n      photoPath: [''],\n      automatic: [false],\n      discountApplicable: [false],\n      carDealer: ['', Validators.required],\n      carType: [CarTypeEnum.SEDAN, Validators.required],\n      fuelType: [FuelTypeEnum.GASOLINE, Validators.required] // Set default enum value\n    });\n  }\n\n  ngOnInit() {\n    this.carForm.patchValue(this.car);\n  }\n  onSaveCar() {\n    console.log(\"save\");\n    // if (this.carForm.valid) {\n    this.car.name = this.carForm.controls['name'].value;\n    this.car.automaker = this.carForm.controls['automaker'].value;\n    this.car.price = this.carForm.controls['price'].value;\n    this.car.numberOfPassengers = this.carForm.controls['numberOfPassengers'].value;\n    this.car.numberOfBags = this.carForm.controls['numberOfBags'].value;\n    this.car.minimumAgeWithoutFee = this.carForm.controls['minimumAgeWithoutFee'].value;\n    this.car.photoPath = this.photoPreviewUrl;\n    this.car.automatic = this.carForm.controls['automatic'].value;\n    // this.car.carDealer = this.carForm.controls['carDealer'].value;\n    // this.car.carType = this.carForm.controls['carType'].value;\n    // this.car.fuelType = this.carForm.controls['fuelType'].value;\n    console.log(this.car);\n    console.log(\"save call\");\n    this.carHttpService.save(this.car).subscribe({\n      next: car => {\n        this.dialogRef.close(car);\n        console.log(\"Success\");\n      },\n      error: () => console.log(\"Error\")\n    });\n    // }\n  }\n\n  onPhotoSelected(event) {\n    const inputElement = event.target;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedPhoto = inputElement.files[0];\n      // Read the selected file and display the preview\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.photoPreviewUrl = reader.result;\n      };\n      reader.readAsDataURL(this.selectedPhoto);\n    }\n  }\n};\n__decorate([Input()], CarEditorComponent.prototype, \"car\", void 0);\n__decorate([Output()], CarEditorComponent.prototype, \"saveCar\", void 0);\nCarEditorComponent = __decorate([Component({\n  selector: 'app-car-editor',\n  templateUrl: './car-editor.component.html',\n  styleUrls: ['./car-editor.component.css']\n}), __param(3, Inject(MAT_DIALOG_DATA))], CarEditorComponent);\nexport { CarEditorComponent };","map":{"version":3,"mappings":"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","names":["Component","Input","Output","EventEmitter","Validators","Car","CarTypeEnum","FuelTypeEnum","CarEditorComponent","constructor","formBuilder","carHttpService","dialogRef","data","Object","values","filter","carType","isNaN","Number","fuelType","carForm","group","name","required","price","numberOfPassengers","numberOfBags","minimumAgeWithoutFee","automaker","photoPath","automatic","discountApplicable","carDealer","SEDAN","GASOLINE","ngOnInit","patchValue","car","onSaveCar","console","log","controls","value","photoPreviewUrl","save","subscribe","next","close","error","onPhotoSelected","event","inputElement","target","files","length","selectedPhoto","reader","FileReader","onload","result","readAsDataURL","__decorate","selector","templateUrl","styleUrls","__param","MAT_DIALOG_DATA"],"sourceRoot":"","sources":["/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/car/car-editor/car-editor.component.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { CarHttpService } from 'src/app/http-service/car-http.service';\nimport { Car } from 'src/app/model/Car';\nimport { CarTypeEnum } from 'src/app/model/CarTypeEnum';\nimport { FuelTypeEnum } from 'src/app/model/FuelTypeEnum';\n\n@Component({\n  selector: 'app-car-editor',\n  templateUrl: './car-editor.component.html',\n  styleUrls: ['./car-editor.component.css'],\n})\nexport class CarEditorComponent {\n  @Input() car: Car = new Car();\n  @Output() saveCar = new EventEmitter<Car>();\n\n  carTypes = Object.values(CarTypeEnum).filter(carType => isNaN(Number(carType)));\n  fuelTypes = Object.values(FuelTypeEnum).filter(fuelType => isNaN(Number(fuelType)));\n\n  carForm: FormGroup;\n  selectedPhoto: File | null = null;\n  photoPreviewUrl: string | ArrayBuffer | null = null;\n  \n  constructor(private formBuilder: FormBuilder,\n    private readonly carHttpService: CarHttpService,\n    public dialogRef: MatDialogRef<CarEditorComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) {\n    this.carForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: [0, Validators.required],\n      numberOfPassengers: [0, Validators.required],\n      numberOfBags: [0, Validators.required],\n      minimumAgeWithoutFee: [0, Validators.required],\n      automaker: ['', Validators.required],\n      photoPath: [''],\n      automatic: [false],\n      discountApplicable: [false],\n      carDealer: ['', Validators.required],\n      carType: [CarTypeEnum.SEDAN, Validators.required], // Set default enum value\n      fuelType: [FuelTypeEnum.GASOLINE, Validators.required], // Set default enum value\n    });\n  }\n\n  ngOnInit(): void {\n    this.carForm.patchValue(this.car);\n  }\n\n  onSaveCar(): void {\n    console.log(\"save\")\n    // if (this.carForm.valid) {\n      this.car.name = this.carForm.controls['name'].value;\n      this.car.automaker = this.carForm.controls['automaker'].value;\n      this.car.price = this.carForm.controls['price'].value;\n      this.car.numberOfPassengers = this.carForm.controls['numberOfPassengers'].value;\n      this.car.numberOfBags = this.carForm.controls['numberOfBags'].value;\n      this.car.minimumAgeWithoutFee = this.carForm.controls['minimumAgeWithoutFee'].value;\n      this.car.photoPath = this.photoPreviewUrl as string;\n      this.car.automatic = this.carForm.controls['automatic'].value;\n      // this.car.carDealer = this.carForm.controls['carDealer'].value;\n      // this.car.carType = this.carForm.controls['carType'].value;\n      // this.car.fuelType = this.carForm.controls['fuelType'].value;\n\n\n      console.log(this.car)\n      console.log(\"save call\")\n      this.carHttpService.save(this.car).subscribe({\n        next: car => {\n          this.dialogRef.close(car);\n          console.log(\"Success\");\n        },\n        error: () => console.log(\"Error\")\n      });\n    // }\n  }\n  onPhotoSelected(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedPhoto = inputElement.files[0];\n\n      // Read the selected file and display the preview\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.photoPreviewUrl = reader.result;\n      };\n      reader.readAsDataURL(this.selectedPhoto);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}