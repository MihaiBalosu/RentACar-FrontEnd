{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Car } from 'src/app/model/Car';\nimport { CarTypeEnum } from 'src/app/model/CarTypeEnum';\nimport { FuelTypeEnum } from 'src/app/model/FuelTypeEnum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/http-service/car-http.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"src/app/model/Car\";\nfunction CarEditorComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r3);\n  }\n}\nfunction CarEditorComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r4);\n  }\n}\nfunction CarEditorComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r2.photoPreviewUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nexport let CarEditorComponent = /*#__PURE__*/(() => {\n  class CarEditorComponent {\n    constructor(formBuilder, carHttpService, dialogRef, data) {\n      this.formBuilder = formBuilder;\n      this.carHttpService = carHttpService;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.car = new Car();\n      this.saveCar = new EventEmitter();\n      this.carTypes = Object.values(CarTypeEnum).filter(carType => isNaN(Number(carType)));\n      this.fuelTypes = Object.values(FuelTypeEnum).filter(fuelType => isNaN(Number(fuelType)));\n      this.selectedPhoto = null;\n      this.photoPreviewUrl = null;\n      this.carForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        price: [0, Validators.required],\n        numberOfPassengers: [0, Validators.required],\n        numberOfBags: [0, Validators.required],\n        minimumAgeWithoutFee: [0, Validators.required],\n        automaker: ['', Validators.required],\n        photoPath: [''],\n        automatic: [false],\n        discountApplicable: [false],\n        carDealer: ['', Validators.required],\n        carType: [CarTypeEnum.SEDAN, Validators.required],\n        fuelType: [FuelTypeEnum.GASOLINE, Validators.required] // Set default enum value\n      });\n    }\n\n    ngOnInit() {\n      if (this.data.name) {\n        this.loadCar(this.data);\n      }\n    }\n    loadCar(car) {\n      this.carForm.controls['name'].setValue(car.name);\n      this.carForm.controls['automaker'].setValue(car.automaker);\n      this.carForm.controls['price'].setValue(car.price);\n      this.carForm.controls['numberOfPassengers'].setValue(car.numberOfPassengers);\n      this.carForm.controls['numberOfBags'].setValue(car.numberOfBags);\n      this.carForm.controls['name'].setValue(car.name);\n      this.carForm.controls['name'].setValue(car.name);\n    }\n    onSaveCar() {\n      console.log(\"save\");\n      // if (this.carForm.valid) {\n      this.car.name = this.carForm.controls['name'].value;\n      this.car.automaker = this.carForm.controls['automaker'].value;\n      this.car.price = this.carForm.controls['price'].value;\n      this.car.numberOfPassengers = this.carForm.controls['numberOfPassengers'].value;\n      this.car.numberOfBags = this.carForm.controls['numberOfBags'].value;\n      this.car.minimumAgeWithoutFee = this.carForm.controls['minimumAgeWithoutFee'].value;\n      this.car.photoPath = this.photoPreviewUrl;\n      this.car.automatic = this.carForm.controls['automatic'].value;\n      // this.car.carDealer = this.carForm.controls['carDealer'].value;\n      // this.car.carType = this.carForm.controls['carType'].value;\n      // this.car.fuelType = this.carForm.controls['fuelType'].value;\n      console.log(this.car);\n      console.log(\"save call\");\n      this.carHttpService.save(this.car).subscribe({\n        next: car => {\n          this.dialogRef.close(car);\n          console.log(\"Success\");\n        },\n        error: () => console.log(\"Error\")\n      });\n      // }\n    }\n\n    onPhotoSelected(event) {\n      const inputElement = event.target;\n      if (inputElement.files && inputElement.files.length > 0) {\n        this.selectedPhoto = inputElement.files[0];\n        // Read the selected file and display the preview\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.photoPreviewUrl = reader.result;\n        };\n        reader.readAsDataURL(this.selectedPhoto);\n      }\n    }\n  }\n  CarEditorComponent.ɵfac = function CarEditorComponent_Factory(t) {\n    return new (t || CarEditorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CarHttpService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  CarEditorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CarEditorComponent,\n    selectors: [[\"app-car-editor\"]],\n    inputs: {\n      car: \"car\"\n    },\n    outputs: {\n      saveCar: \"saveCar\"\n    },\n    decls: 33,\n    vars: 7,\n    consts: [[3, \"formGroup\"], [\"for\", \"carName\"], [\"id\", \"carName\", \"type\", \"text\", \"formControlName\", \"name\"], [\"for\", \"carDealer\"], [\"id\", \"carDealer\", \"formControlName\", \"carDealer\"], [\"value\", \"dealer1\"], [\"value\", \"dealer2\"], [\"for\", \"carType\"], [\"id\", \"carType\", \"formControlName\", \"carType\"], [\"disabled\", \"\", 3, \"ngValue\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"fuelType\"], [\"id\", \"fuelType\", \"formControlName\", \"fuelType\"], [1, \"photo-container\"], [\"for\", \"photoInput\", 1, \"photo-label\"], [\"type\", \"file\", \"id\", \"photoInput\", \"accept\", \"image/*\", 3, \"change\"], [1, \"photo-filename\"], [4, \"ngIf\"], [3, \"click\"], [3, \"value\"], [\"alt\", \"Photo Preview\", 1, \"photo-preview\", 3, \"src\"]],\n    template: function CarEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Car Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementStart(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Car Dealer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 4)(8, \"option\", 5);\n        i0.ɵɵtext(9, \"Dealer 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"option\", 6);\n        i0.ɵɵtext(11, \"Dealer 2\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"label\", 7);\n        i0.ɵɵtext(13, \"Car Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"select\", 8)(15, \"option\", 9);\n        i0.ɵɵtext(16, \"Select Car Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, CarEditorComponent_option_17_Template, 2, 2, \"option\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"label\", 11);\n        i0.ɵɵtext(19, \"Fuel Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"select\", 12)(21, \"option\", 9);\n        i0.ɵɵtext(22, \"Select Fuel Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, CarEditorComponent_option_23_Template, 2, 2, \"option\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 13)(25, \"label\", 14);\n        i0.ɵɵtext(26, \"Attach Photo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"input\", 15);\n        i0.ɵɵlistener(\"change\", function CarEditorComponent_Template_input_change_27_listener($event) {\n          return ctx.onPhotoSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"span\", 16);\n        i0.ɵɵtext(29);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(30, CarEditorComponent_div_30_Template, 2, 1, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function CarEditorComponent_Template_button_click_31_listener() {\n          return ctx.onSaveCar();\n        });\n        i0.ɵɵtext(32, \"Save\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.carForm);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngValue\", null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.carTypes);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngValue\", null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.fuelTypes);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.selectedPhoto == null ? null : ctx.selectedPhoto.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.photoPreviewUrl);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    max-width: 400px;\\n    margin: 0 auto;\\n    padding: 20px;\\n    border: 1px solid #ddd;\\n    border-radius: 5px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  \\n  label[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n    font-weight: bold;\\n  }\\n  \\n  input[_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\n    margin-bottom: 15px;\\n    padding: 8px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    width: 100%;\\n  }\\n  \\n  \\n  #photoInput[_ngcontent-%COMP%] {\\n    display: none; \\n  }\\n  \\n  .photo-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n  }\\n  \\n  .photo-label[_ngcontent-%COMP%] {\\n    cursor: pointer;\\n    padding: 8px 12px;\\n    background-color: #4caf50;\\n    color: white;\\n    border-radius: 5px;\\n  }\\n  \\n  .photo-filename[_ngcontent-%COMP%] {\\n    margin-left: 10px;\\n  }\\n  \\n  \\n  button[_ngcontent-%COMP%] {\\n    padding: 10px 20px;\\n    background-color: #4caf50;\\n    color: white;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  button[_ngcontent-%COMP%]:hover {\\n    background-color: #45a049;\\n  }\\n  \\n  \\n  div[_ngcontent-%COMP%]:not(:last-child) {\\n    margin-bottom: 20px;\\n  }\\n\\n  \\n\\n\\n#photoInput[_ngcontent-%COMP%] {\\n    display: none; \\n  }\\n  \\n  .photo-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n  }\\n  \\n  .photo-label[_ngcontent-%COMP%] {\\n    cursor: pointer;\\n    padding: 8px 12px;\\n    background-color: #4caf50;\\n    color: white;\\n    border-radius: 5px;\\n  }\\n  \\n  .photo-filename[_ngcontent-%COMP%] {\\n    margin-left: 10px;\\n  }\\n  \\n  \\n  .photo-preview[_ngcontent-%COMP%] {\\n    max-width: 100%;\\n    margin-top: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FyL2Nhci1lZGl0b3IvY2FyLWVkaXRvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZCQUE2Qjs7QUFFN0IsNkJBQTZCO0FBQzdCO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLHdDQUF3QztFQUMxQzs7RUFFQSxpQ0FBaUM7RUFDakM7SUFDRSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0VBQ25COztFQUVBOztJQUVFLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixXQUFXO0VBQ2I7O0VBRUEsa0NBQWtDO0VBQ2xDO0lBQ0UsYUFBYSxFQUFFLDhCQUE4QjtFQUMvQzs7RUFFQTtJQUNFLGFBQWE7SUFDYixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsaUJBQWlCO0VBQ25COztFQUVBLDRCQUE0QjtFQUM1QjtJQUNFLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQSxzQ0FBc0M7RUFDdEM7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUEsNkJBQTZCOztBQUUvQixrQ0FBa0M7QUFDbEM7SUFDSSxhQUFhLEVBQUUsOEJBQThCO0VBQy9DOztFQUVBO0lBQ0UsYUFBYTtJQUNiLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGVBQWU7SUFDZixpQkFBaUI7SUFDakIseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUEsNEJBQTRCO0VBQzVCO0lBQ0UsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLHdDQUF3QztFQUMxQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGNhci1lZGl0b3IuY29tcG9uZW50LmNzcyAqL1xuXG4vKiBTdHlsZSB0aGUgZm9ybSBjb250YWluZXIgKi9cbmZvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgfVxuICBcbiAgLyogU3R5bGUgZm9ybSBmaWVsZHMgYW5kIGxhYmVscyAqL1xuICBsYWJlbCB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuICBcbiAgaW5wdXQsXG4gIHNlbGVjdCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIC8qIFN0eWxlIHRoZSBwaG90byBpbnB1dCBzZWN0aW9uICovXG4gICNwaG90b0lucHV0IHtcbiAgICBkaXNwbGF5OiBub25lOyAvKiBIaWRlIHRoZSBpbnB1dCBieSBkZWZhdWx0ICovXG4gIH1cbiAgXG4gIC5waG90by1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuICBcbiAgLnBob3RvLWxhYmVsIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcGFkZGluZzogOHB4IDEycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB9XG4gIFxuICAucGhvdG8tZmlsZW5hbWUge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB9XG4gIFxuICAvKiBTdHlsZSB0aGUgc3VibWl0IGJ1dHRvbiAqL1xuICBidXR0b24ge1xuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGNhZjUwO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICBcbiAgYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDVhMDQ5O1xuICB9XG4gIFxuICAvKiBBZGQgc3BhY2luZyBiZXR3ZWVuIGZvcm0gc2VjdGlvbnMgKi9cbiAgZGl2Om5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cblxuICAvKiBjYXItZWRpdG9yLmNvbXBvbmVudC5jc3MgKi9cblxuLyogU3R5bGUgdGhlIHBob3RvIGlucHV0IHNlY3Rpb24gKi9cbiNwaG90b0lucHV0IHtcbiAgICBkaXNwbGF5OiBub25lOyAvKiBIaWRlIHRoZSBpbnB1dCBieSBkZWZhdWx0ICovXG4gIH1cbiAgXG4gIC5waG90by1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuICBcbiAgLnBob3RvLWxhYmVsIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcGFkZGluZzogOHB4IDEycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB9XG4gIFxuICAucGhvdG8tZmlsZW5hbWUge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB9XG4gIFxuICAvKiBTdHlsZSB0aGUgcGhvdG8gcHJldmlldyAqL1xuICAucGhvdG8tcHJldmlldyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgfVxuICBcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return CarEditorComponent;\n})();","map":{"version":3,"mappings":"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","names":["EventEmitter","Validators","MAT_DIALOG_DATA","Car","CarTypeEnum","FuelTypeEnum","i0","CarEditorComponent","constructor","formBuilder","carHttpService","dialogRef","data","Object","values","filter","carType","isNaN","Number","fuelType","carForm","group","name","required","price","numberOfPassengers","numberOfBags","minimumAgeWithoutFee","automaker","photoPath","automatic","discountApplicable","carDealer","SEDAN","GASOLINE","ngOnInit","loadCar","car","controls","setValue","onSaveCar","console","log","value","photoPreviewUrl","save","subscribe","next","close","error","onPhotoSelected","event","inputElement","target","files","length","selectedPhoto","reader","FileReader","onload","result","readAsDataURL","selectors","inputs","outputs","saveCar","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/car/car-editor/car-editor.component.ts","/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/car/car-editor/car-editor.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CarHttpService } from 'src/app/http-service/car-http.service';\nimport { Car } from 'src/app/model/Car';\nimport { CarTypeEnum } from 'src/app/model/CarTypeEnum';\nimport { FuelTypeEnum } from 'src/app/model/FuelTypeEnum';\n\n@Component({\n  selector: 'app-car-editor',\n  templateUrl: './car-editor.component.html',\n  styleUrls: ['./car-editor.component.css'],\n})\nexport class CarEditorComponent {\n  @Input() car: Car = new Car();\n  @Output() saveCar = new EventEmitter<Car>();\n\n  carTypes = Object.values(CarTypeEnum).filter(carType => isNaN(Number(carType)));\n  fuelTypes = Object.values(FuelTypeEnum).filter(fuelType => isNaN(Number(fuelType)));\n\n  carForm: FormGroup;\n  selectedPhoto: File | null = null;\n  photoPreviewUrl: string | ArrayBuffer | null = null;\n  \n  constructor(private formBuilder: FormBuilder,\n    private readonly carHttpService: CarHttpService,\n    public dialogRef: MatDialogRef<CarEditorComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Car\n    ) {\n    this.carForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: [0, Validators.required],\n      numberOfPassengers: [0, Validators.required],\n      numberOfBags: [0, Validators.required],\n      minimumAgeWithoutFee: [0, Validators.required],\n      automaker: ['', Validators.required],\n      photoPath: [''],\n      automatic: [false],\n      discountApplicable: [false],\n      carDealer: ['', Validators.required],\n      carType: [CarTypeEnum.SEDAN, Validators.required], // Set default enum value\n      fuelType: [FuelTypeEnum.GASOLINE, Validators.required], // Set default enum value\n    });\n  }\n\n  ngOnInit(): void {\n    if(this.data.name){\n      this.loadCar(this.data);\n    }\n  }\n\n  loadCar(car: Car): void {\n    this.carForm.controls['name'].setValue(car.name);\n    this.carForm.controls['automaker'].setValue(car.automaker);\n    this.carForm.controls['price'].setValue(car.price);\n    this.carForm.controls['numberOfPassengers'].setValue(car.numberOfPassengers);\n    this.carForm.controls['numberOfBags'].setValue(car.numberOfBags);\n    this.carForm.controls['name'].setValue(car.name);\n    this.carForm.controls['name'].setValue(car.name);\n\n    }\n\n  onSaveCar(): void {\n    console.log(\"save\")\n    // if (this.carForm.valid) {\n      this.car.name = this.carForm.controls['name'].value;\n      this.car.automaker = this.carForm.controls['automaker'].value;\n      this.car.price = this.carForm.controls['price'].value;\n      this.car.numberOfPassengers = this.carForm.controls['numberOfPassengers'].value;\n      this.car.numberOfBags = this.carForm.controls['numberOfBags'].value;\n      this.car.minimumAgeWithoutFee = this.carForm.controls['minimumAgeWithoutFee'].value;\n      this.car.photoPath = this.photoPreviewUrl as string;\n      this.car.automatic = this.carForm.controls['automatic'].value;\n      // this.car.carDealer = this.carForm.controls['carDealer'].value;\n      // this.car.carType = this.carForm.controls['carType'].value;\n      // this.car.fuelType = this.carForm.controls['fuelType'].value;\n\n\n      console.log(this.car)\n      console.log(\"save call\")\n      this.carHttpService.save(this.car).subscribe({\n        next: car => {\n          this.dialogRef.close(car);\n          console.log(\"Success\");\n        },\n        error: () => console.log(\"Error\")\n      });\n    // }\n  }\n  onPhotoSelected(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedPhoto = inputElement.files[0];\n\n      // Read the selected file and display the preview\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.photoPreviewUrl = reader.result;\n      };\n      reader.readAsDataURL(this.selectedPhoto);\n    }\n  }\n}\n","<form [formGroup]=\"carForm\">\n    <div>\n      <label for=\"carName\">Car Name</label>\n      <input id=\"carName\" type=\"text\" formControlName=\"name\" />\n  \n      <!-- Add more input fields for other properties (price, numberOfPassengers, numberOfBags, etc.) -->\n  \n      <label for=\"carDealer\">Car Dealer</label>\n      <select id=\"carDealer\" formControlName=\"carDealer\">\n        <!-- Populate this dropdown with data from your car dealers list -->\n        <option value=\"dealer1\">Dealer 1</option>\n        <option value=\"dealer2\">Dealer 2</option>\n        <!-- Add more options as needed -->\n      </select>\n  \n      <label for=\"carType\">Car Type</label>\n      <select id=\"carType\" formControlName=\"carType\">\n        <option [ngValue]=\"null\" disabled>Select Car Type</option>\n        <option *ngFor=\"let type of carTypes\" [value]=\"type\">{{ type }}</option>\n      </select>\n  \n      <label for=\"fuelType\">Fuel Type</label>\n      <select id=\"fuelType\" formControlName=\"fuelType\">\n        <option [ngValue]=\"null\" disabled>Select Fuel Type</option>\n        <option *ngFor=\"let type of fuelTypes\" [value]=\"type\">{{ type }}</option>\n      </select>\n  \n      <div class=\"photo-container\">\n        <label for=\"photoInput\" class=\"photo-label\">Attach Photo</label>\n        <input\n          type=\"file\"\n          id=\"photoInput\"\n          (change)=\"onPhotoSelected($event)\"\n          accept=\"image/*\"\n        />\n        <span class=\"photo-filename\">{{ selectedPhoto?.name }}</span>\n      </div>\n    \n      <div *ngIf=\"photoPreviewUrl\">\n        <img [src]=\"photoPreviewUrl\" alt=\"Photo Preview\" class=\"photo-preview\" />\n      </div>\n    </div>\n  \n    <button (click)=\"onSaveCar()\">Save</button>\n  </form>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}