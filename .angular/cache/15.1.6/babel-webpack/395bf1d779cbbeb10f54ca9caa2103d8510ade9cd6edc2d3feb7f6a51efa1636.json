{"ast":null,"code":"import { CarDealer } from 'src/app/model/CarDealer';\nimport { DealerEditorComponent } from '../dealer-editor/dealer-editor.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/http-service/car-dealer-http.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nfunction CarDealerListComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function CarDealerListComponent_tr_11_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const dealer_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onEditCarDealer(dealer_r1));\n    });\n    i0.ɵɵtext(7, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function CarDealerListComponent_tr_11_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const dealer_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onRemoveCarDealer(dealer_r1));\n    });\n    i0.ɵɵtext(9, \"Remove\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const dealer_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dealer_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", dealer_r1.location.city, \", \", dealer_r1.location.country, \"\");\n  }\n}\nexport let CarDealerListComponent = /*#__PURE__*/(() => {\n  class CarDealerListComponent {\n    constructor(dialog, carHttpService) {\n      this.dialog = dialog;\n      this.carHttpService = carHttpService;\n      this.dealersList = []; // Populate this array with the list of car dealers\n    }\n\n    ngOnInit() {\n      this.getCars();\n    }\n    getCars() {\n      this.carHttpService.getAllCarDealer().subscribe({\n        next: dealersList => {\n          this.dealersList = dealersList;\n          console.log(\"Success\");\n        },\n        error: () => console.log(\"Error\")\n      });\n    }\n    // Add methods for edit and remove functionalities\n    onEditCarDealer(car) {\n      const dialogRef = this.dialog.open(DealerEditorComponent, {\n        width: '600px',\n        data: {\n          car\n        } // Pass the car object to the CarEditorComponent through data\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        // The result contains the edited car or undefined if the dialog was closed without saving\n        if (result) {\n          // Update the car data in the list or perform any other action with the edited car\n          console.log('Edited Car:', result);\n        }\n      });\n    }\n    onCreateCarDealer() {\n      const dialogRef = this.dialog.open(DealerEditorComponent, {\n        width: '600px',\n        data: {\n          car: new CarDealer()\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.dealersList.push(result);\n          console.log('Created Car:', result);\n        }\n      });\n    }\n    onRemoveCarDealer(car) {\n      this.carHttpService.removeCarDealer(car.id).subscribe({\n        next: () => {\n          console.log(\"Car removed\");\n          this.getCars();\n        },\n        error: () => console.log(\"Error\")\n      });\n    }\n  }\n  CarDealerListComponent.ɵfac = function CarDealerListComponent_Factory(t) {\n    return new (t || CarDealerListComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.CarDealerHttpService));\n  };\n  CarDealerListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CarDealerListComponent,\n    selectors: [[\"app-car-dealer-list\"]],\n    decls: 12,\n    vars: 1,\n    consts: [[1, \"button-container\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"car-table\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function CarDealerListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CarDealerListComponent_Template_button_click_1_listener() {\n          return ctx.onCreateCarDealer();\n        });\n        i0.ɵɵtext(2, \"Create Car\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"table\", 2)(4, \"tr\")(5, \"th\");\n        i0.ɵɵtext(6, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\");\n        i0.ɵɵtext(8, \"Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Actions\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, CarDealerListComponent_tr_11_Template, 10, 3, \"tr\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dealersList);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.MatButton],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  return CarDealerListComponent;\n})();","map":{"version":3,"mappings":"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","names":["CarDealer","DealerEditorComponent","i0","CarDealerListComponent","constructor","dialog","carHttpService","ngOnInit","getCars","getAllCarDealer","subscribe","next","dealersList","console","log","error","onEditCarDealer","car","dialogRef","open","width","data","afterClosed","result","onCreateCarDealer","push","onRemoveCarDealer","removeCarDealer","id","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/car-dealer/car-dealer-list/car-dealer-list.component.ts","/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/car-dealer/car-dealer-list/car-dealer-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CarDealer } from 'src/app/model/CarDealer';\nimport { DealerEditorComponent } from '../dealer-editor/dealer-editor.component';\nimport { CarDealerHttpService } from 'src/app/http-service/car-dealer-http.service';\n\n@Component({\n  selector: 'app-car-dealer-list',\n  templateUrl: './car-dealer-list.component.html',\n  styleUrls: ['./car-dealer-list.component.css']\n})\nexport class CarDealerListComponent {\n\n  dealersList: CarDealer[] = []; // Populate this array with the list of car dealers\n\n  constructor(private dialog: MatDialog,\n    private readonly carHttpService: CarDealerHttpService,\n    ) {}\n\n  ngOnInit(): void {\n    this.getCars();\n  }\n\n  getCars() {\n    this.carHttpService.getAllCarDealer().subscribe({\n      next: dealersList => {\n        this.dealersList = dealersList;\n        console.log(\"Success\");\n      },\n      error: () => console.log(\"Error\")\n    });\n  }\n\n  // Add methods for edit and remove functionalities\n  onEditCarDealer(car: CarDealer): void {\n    const dialogRef = this.dialog.open(DealerEditorComponent, {\n      width: '600px',\n      data: { car }, // Pass the car object to the CarEditorComponent through data\n    });\n\n    dialogRef.afterClosed().subscribe((result: CarDealer) => {\n      // The result contains the edited car or undefined if the dialog was closed without saving\n      if (result) {\n        // Update the car data in the list or perform any other action with the edited car\n        console.log('Edited Car:', result);\n      }\n    });\n  }\n\n  onCreateCarDealer(): void {\n    const dialogRef = this.dialog.open(DealerEditorComponent, {\n      width: '600px',\n      data: { car: new CarDealer() },\n    });\n\n    dialogRef.afterClosed().subscribe((result: CarDealer) => {\n      if (result) {\n        this.dealersList.push(result);\n        console.log('Created Car:', result);\n      }\n    });\n  }\n\n  onRemoveCarDealer(car: CarDealer): void {\n    this.carHttpService.removeCarDealer(car.id).subscribe({\n      next: () => {\n        console.log(\"Car removed\")\n        this.getCars();\n      },\n      error: () => console.log(\"Error\")\n    });\n  }\n}\n","<div class=\"button-container\">\n    <button mat-raised-button color=\"primary\" (click)=\"onCreateCarDealer()\">Create Car</button>\n</div>\n<table class=\"car-table\">\n    <tr>\n      <th>Name</th>\n      <th>Location</th>\n      <!-- Add other dealer properties as needed -->\n      <th>Actions</th>\n    </tr>\n    <tr *ngFor=\"let dealer of dealersList\">\n      <td>{{ dealer.name }}</td>\n      <td>{{ dealer.location.city }}, {{ dealer.location.country }}</td>\n      <!-- Display other dealer properties as needed -->\n      <td>\n        <button (click)=\"onEditCarDealer(dealer)\">Edit</button>\n        <button (click)=\"onRemoveCarDealer(dealer)\">Remove</button>\n      </td>\n    </tr>\n  </table>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}