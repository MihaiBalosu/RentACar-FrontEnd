{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, Inject, LOCALE_ID, Directive, Input, EventEmitter, Output, Self, Component, ElementRef, PLATFORM_ID, ContentChildren, QueryList, forwardRef, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, ReplaySubject, bindCallback, of, throwError, fromEventPattern, merge, Subject } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, multicast, startWith, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nconst _c0 = [\"*\"];\nlet MapsAPILoader = /*#__PURE__*/(() => {\n  class MapsAPILoader {}\n  MapsAPILoader.ɵfac = function MapsAPILoader_Factory(t) {\n    return new (t || MapsAPILoader)();\n  };\n  MapsAPILoader.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: MapsAPILoader,\n    factory: MapsAPILoader.ɵfac\n  });\n  return MapsAPILoader;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nlet GoogleMapsAPIWrapper = /*#__PURE__*/(() => {\n  class GoogleMapsAPIWrapper {\n    constructor(_loader, _zone) {\n      this._loader = _loader;\n      this._zone = _zone;\n      this._map = new Promise(resolve => {\n        this._mapResolver = resolve;\n      });\n    }\n    createMap(el, mapOptions) {\n      return this._zone.runOutsideAngular(() => {\n        return this._loader.load().then(() => {\n          const map = new google.maps.Map(el, mapOptions);\n          this._mapResolver(map);\n          return;\n        });\n      });\n    }\n    setMapOptions(options) {\n      return this._zone.runOutsideAngular(() => {\n        this._map.then(m => {\n          m.setOptions(options);\n        });\n      });\n    }\n    /**\n     * Creates a google map marker with the map context\n     */\n    createMarker(options = {}, addToMap = true) {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => {\n          if (addToMap) {\n            options.map = map;\n          }\n          return new google.maps.Marker(options);\n        });\n      });\n    }\n    createInfoWindow(options) {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(() => new google.maps.InfoWindow(options));\n      });\n    }\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    createCircle(options) {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => {\n          options.map = map;\n          return new google.maps.Circle(options);\n        });\n      });\n    }\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n    createRectangle(options) {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => {\n          options.map = map;\n          return new google.maps.Rectangle(options);\n        });\n      });\n    }\n    createPolyline(options) {\n      return this._zone.runOutsideAngular(() => {\n        return this.getNativeMap().then(map => {\n          const line = new google.maps.Polyline(options);\n          line.setMap(map);\n          return line;\n        });\n      });\n    }\n    createPolygon(options) {\n      return this._zone.runOutsideAngular(() => {\n        return this.getNativeMap().then(map => {\n          const polygon = new google.maps.Polygon(options);\n          polygon.setMap(map);\n          return polygon;\n        });\n      });\n    }\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n    createDataLayer(options) {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(m => {\n          const data = new google.maps.Data(options);\n          data.setMap(m);\n          return data;\n        });\n      });\n    }\n    /**\n     * Creates a TransitLayer instance for a map\n     * @returns a new transit layer object\n     */\n    createTransitLayer() {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => {\n          const newLayer = new google.maps.TransitLayer();\n          newLayer.setMap(map);\n          return newLayer;\n        });\n      });\n    }\n    /**\n     * Creates a BicyclingLayer instance for a map\n     * @returns a new bicycling layer object\n     */\n    createBicyclingLayer() {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => {\n          const newLayer = new google.maps.BicyclingLayer();\n          newLayer.setMap(map);\n          return newLayer;\n        });\n      });\n    }\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    containsLocation(latLng, polygon) {\n      return this._map.then(() => google.maps.geometry.poly.containsLocation(latLng, polygon));\n    }\n    subscribeToMapEvent(eventName) {\n      return new Observable(observer => {\n        this._map.then(m => m.addListener(eventName, () => this._zone.run(() => observer.next(arguments[0]))));\n      });\n    }\n    clearInstanceListeners() {\n      return this._zone.runOutsideAngular(() => {\n        this._map.then(map => {\n          google.maps.event.clearInstanceListeners(map);\n        });\n      });\n    }\n    setCenter(latLng) {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => map.setCenter(latLng));\n      });\n    }\n    getZoom() {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => map.getZoom());\n      });\n    }\n    getBounds() {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => map.getBounds());\n      });\n    }\n    getMapTypeId() {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => map.getMapTypeId());\n      });\n    }\n    setZoom(zoom) {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => map.setZoom(zoom));\n      });\n    }\n    getCenter() {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => map.getCenter());\n      });\n    }\n    panTo(latLng) {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => map.panTo(latLng));\n      });\n    }\n    panBy(x, y) {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => map.panBy(x, y));\n      });\n    }\n    fitBounds(latLng, padding) {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => map.fitBounds(latLng, padding));\n      });\n    }\n    panToBounds(latLng, padding) {\n      return this._zone.runOutsideAngular(() => {\n        return this._map.then(map => map.panToBounds(latLng, padding));\n      });\n    }\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    getNativeMap() {\n      return this._map;\n    }\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    triggerMapEvent(eventName) {\n      return this._map.then(m => google.maps.event.trigger(m, eventName));\n    }\n  }\n  GoogleMapsAPIWrapper.ɵfac = function GoogleMapsAPIWrapper_Factory(t) {\n    return new (t || GoogleMapsAPIWrapper)(ɵngcc0.ɵɵinject(MapsAPILoader), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n  GoogleMapsAPIWrapper.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: GoogleMapsAPIWrapper,\n    factory: GoogleMapsAPIWrapper.ɵfac\n  });\n  return GoogleMapsAPIWrapper;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet CircleManager = /*#__PURE__*/(() => {\n  class CircleManager {\n    constructor(_apiWrapper, _zone) {\n      this._apiWrapper = _apiWrapper;\n      this._zone = _zone;\n      this._circles = new Map();\n    }\n    addCircle(circle) {\n      this._apiWrapper.getNativeMap().then(() => this._circles.set(circle, this._apiWrapper.createCircle({\n        center: {\n          lat: circle.latitude,\n          lng: circle.longitude\n        },\n        clickable: circle.clickable,\n        draggable: circle.draggable,\n        editable: circle.editable,\n        fillColor: circle.fillColor,\n        fillOpacity: circle.fillOpacity,\n        radius: circle.radius,\n        strokeColor: circle.strokeColor,\n        strokeOpacity: circle.strokeOpacity,\n        strokePosition: google.maps.StrokePosition[circle.strokePosition],\n        strokeWeight: circle.strokeWeight,\n        visible: circle.visible,\n        zIndex: circle.zIndex\n      })));\n    }\n    /**\n     * Removes the given circle from the map.\n     */\n    removeCircle(circle) {\n      return this._circles.get(circle).then(c => {\n        c.setMap(null);\n        this._circles.delete(circle);\n      });\n    }\n    setOptions(circle, options) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return this._circles.get(circle).then(c => {\n          const actualParam = options.strokePosition;\n          options.strokePosition = google.maps.StrokePosition[actualParam];\n          c.setOptions(options);\n        });\n      });\n    }\n    getBounds(circle) {\n      return this._circles.get(circle).then(c => c.getBounds());\n    }\n    getCenter(circle) {\n      return this._circles.get(circle).then(c => c.getCenter());\n    }\n    getRadius(circle) {\n      return this._circles.get(circle).then(c => c.getRadius());\n    }\n    setCenter(circle) {\n      return this._circles.get(circle).then(c => c.setCenter({\n        lat: circle.latitude,\n        lng: circle.longitude\n      }));\n    }\n    setEditable(circle) {\n      return this._circles.get(circle).then(c => c.setEditable(circle.editable));\n    }\n    setDraggable(circle) {\n      return this._circles.get(circle).then(c => c.setDraggable(circle.draggable));\n    }\n    setVisible(circle) {\n      return this._circles.get(circle).then(c => c.setVisible(circle.visible));\n    }\n    setRadius(circle) {\n      return this._circles.get(circle).then(c => c.setRadius(circle.radius));\n    }\n    getNativeCircle(circle) {\n      return this._circles.get(circle);\n    }\n    createEventObservable(eventName, circle) {\n      return new Observable(observer => {\n        let listener = null;\n        this._circles.get(circle).then(c => {\n          listener = c.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n        });\n        return () => {\n          if (listener !== null) {\n            listener.remove();\n          }\n        };\n      });\n    }\n  }\n  CircleManager.ɵfac = function CircleManager_Factory(t) {\n    return new (t || CircleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n  CircleManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: CircleManager,\n    factory: CircleManager.ɵfac\n  });\n  return CircleManager;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nlet DataLayerManager = /*#__PURE__*/(() => {\n  class DataLayerManager {\n    constructor(_wrapper, _zone) {\n      this._wrapper = _wrapper;\n      this._zone = _zone;\n      this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    addDataLayer(layer) {\n      const newLayer = this._wrapper.createDataLayer({\n        style: layer.style\n      }).then(d => {\n        if (layer.geoJson) {\n          // NOTE: accessing \"features\" on google.maps.Data is undocumented\n          this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n        }\n        return d;\n      });\n      this._layers.set(layer, newLayer);\n    }\n    deleteDataLayer(layer) {\n      this._layers.get(layer).then(l => {\n        l.setMap(null);\n        this._layers.delete(layer);\n      });\n    }\n    updateGeoJson(layer, geoJson) {\n      this._layers.get(layer).then(l => {\n        l.forEach(feature => {\n          l.remove(feature);\n          // NOTE: accessing \"features\" on google.maps.Data is undocumented\n          const index = l.features.indexOf(feature, 0);\n          if (index > -1) {\n            l.features.splice(index, 1);\n          }\n        });\n        this.getDataFeatures(l, geoJson).then(features => l.features = features);\n      });\n    }\n    setDataOptions(layer, options) {\n      this._layers.get(layer).then(l => {\n        l.setControlPosition(options.controlPosition);\n        l.setControls(options.controls);\n        l.setDrawingMode(options.drawingMode);\n        l.setStyle(options.style);\n      });\n    }\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n      return new Observable(observer => {\n        this._layers.get(layer).then(d => {\n          d.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n        });\n      });\n    }\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n    getDataFeatures(d, geoJson) {\n      return new Promise((resolve, reject) => {\n        if (typeof geoJson === 'object') {\n          try {\n            const features = d.addGeoJson(geoJson);\n            resolve(features);\n          } catch (e) {\n            reject(e);\n          }\n        } else if (typeof geoJson === 'string') {\n          d.loadGeoJson(geoJson, null, resolve);\n        } else {\n          reject(`Impossible to extract features from geoJson: wrong argument type`);\n        }\n      });\n    }\n  }\n  DataLayerManager.ɵfac = function DataLayerManager_Factory(t) {\n    return new (t || DataLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n  DataLayerManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: DataLayerManager,\n    factory: DataLayerManager.ɵfac\n  });\n  return DataLayerManager;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nclass FitBoundsAccessor {}\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nlet FitBoundsService = /*#__PURE__*/(() => {\n  class FitBoundsService {\n    constructor(loader) {\n      this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n      this._includeInBounds$ = new BehaviorSubject(new Map());\n      this.bounds$ = from(loader.load()).pipe(flatMap(() => this._includeInBounds$), sample(this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time)))), map(includeInBounds => this._generateBounds(includeInBounds)), shareReplay(1));\n    }\n    _generateBounds(includeInBounds) {\n      const bounds = new google.maps.LatLngBounds();\n      includeInBounds.forEach(b => bounds.extend(b));\n      return bounds;\n    }\n    addToBounds(latLng) {\n      const id = this._createIdentifier(latLng);\n      if (this._includeInBounds$.value.has(id)) {\n        return;\n      }\n      const boundsMap = this._includeInBounds$.value;\n      boundsMap.set(id, latLng);\n      this._includeInBounds$.next(boundsMap);\n    }\n    removeFromBounds(latLng) {\n      const boundsMap = this._includeInBounds$.value;\n      boundsMap.delete(this._createIdentifier(latLng));\n      this._includeInBounds$.next(boundsMap);\n    }\n    changeFitBoundsChangeSampleTime(timeMs) {\n      this._boundsChangeSampleTime$.next(timeMs);\n    }\n    getBounds$() {\n      return this.bounds$;\n    }\n    _createIdentifier(latLng) {\n      return `${latLng.lat}+${latLng.lng}`;\n    }\n  }\n  FitBoundsService.ɵfac = function FitBoundsService_Factory(t) {\n    return new (t || FitBoundsService)(ɵngcc0.ɵɵinject(MapsAPILoader));\n  };\n  FitBoundsService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FitBoundsService,\n    factory: FitBoundsService.ɵfac\n  });\n  return FitBoundsService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgmGeocoder = /*#__PURE__*/(() => {\n  class AgmGeocoder {\n    constructor(loader) {\n      const connectableGeocoder$ = new Observable(subscriber => {\n        loader.load().then(() => subscriber.next());\n      }).pipe(map(() => this._createGeocoder()), multicast(new ReplaySubject(1)));\n      connectableGeocoder$.connect(); // ignore the subscription\n      // since we will remain subscribed till application exits\n      this.geocoder$ = connectableGeocoder$;\n    }\n    geocode(request) {\n      return this.geocoder$.pipe(switchMap(geocoder => this._getGoogleResults(geocoder, request)));\n    }\n    _getGoogleResults(geocoder, request) {\n      const geocodeObservable = bindCallback(geocoder.geocode);\n      return geocodeObservable(request).pipe(switchMap(([results, status]) => {\n        if (status === google.maps.GeocoderStatus.OK) {\n          return of(results);\n        }\n        return throwError(status);\n      }));\n    }\n    _createGeocoder() {\n      return new google.maps.Geocoder();\n    }\n  }\n  AgmGeocoder.ɵfac = function AgmGeocoder_Factory(t) {\n    return new (t || AgmGeocoder)(ɵngcc0.ɵɵinject(MapsAPILoader));\n  };\n  AgmGeocoder.ɵprov = ɵɵdefineInjectable({\n    factory: function AgmGeocoder_Factory() {\n      return new AgmGeocoder(ɵɵinject(MapsAPILoader));\n    },\n    token: AgmGeocoder,\n    providedIn: \"root\"\n  });\n  return AgmGeocoder;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass WindowRef {\n  getNativeWindow() {\n    return window;\n  }\n}\nclass DocumentRef {\n  getNativeDocument() {\n    return document;\n  }\n}\nconst BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\nvar GoogleMapsScriptProtocol = /*#__PURE__*/(() => {\n  (function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n  })(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n  return GoogleMapsScriptProtocol;\n})();\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nconst LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nlet LazyMapsAPILoader = /*#__PURE__*/(() => {\n  class LazyMapsAPILoader extends MapsAPILoader {\n    constructor(config = null, w, d, localeId) {\n      super();\n      this.localeId = localeId;\n      this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n      this.callbackName = `agmLazyMapsAPILoader`;\n      this._config = config || {};\n      this._windowRef = w;\n      this._documentRef = d;\n    }\n    load() {\n      const window = this._windowRef.getNativeWindow();\n      if (window.google && window.google.maps) {\n        // Google maps already loaded on the page.\n        return Promise.resolve();\n      }\n      if (this._scriptLoadingPromise) {\n        return this._scriptLoadingPromise;\n      }\n      // this can happen in HMR situations or Stackblitz.io editors.\n      const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n      if (scriptOnPage) {\n        this._assignScriptLoadingPromise(scriptOnPage);\n        return this._scriptLoadingPromise;\n      }\n      const script = this._documentRef.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.id = this._SCRIPT_ID;\n      script.src = this._getScriptSrc(this.callbackName);\n      this._assignScriptLoadingPromise(script);\n      this._documentRef.getNativeDocument().body.appendChild(script);\n      return this._scriptLoadingPromise;\n    }\n    _assignScriptLoadingPromise(scriptElem) {\n      this._scriptLoadingPromise = new Promise((resolve, reject) => {\n        this._windowRef.getNativeWindow()[this.callbackName] = () => {\n          resolve();\n        };\n        scriptElem.onerror = error => {\n          reject(error);\n        };\n      });\n    }\n    _getScriptSrc(callbackName) {\n      const protocolType = this._config && this._config.protocol || GoogleMapsScriptProtocol.HTTPS;\n      let protocol;\n      switch (protocolType) {\n        case GoogleMapsScriptProtocol.AUTO:\n          protocol = '';\n          break;\n        case GoogleMapsScriptProtocol.HTTP:\n          protocol = 'http:';\n          break;\n        case GoogleMapsScriptProtocol.HTTPS:\n          protocol = 'https:';\n          break;\n      }\n      const hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n      const queryParams = {\n        v: this._config.apiVersion || 'quarterly',\n        callback: callbackName,\n        key: this._config.apiKey,\n        client: this._config.clientId,\n        channel: this._config.channel,\n        libraries: this._config.libraries,\n        region: this._config.region,\n        language: this._config.language || (this.localeId !== 'en-US' ? this.localeId : null)\n      };\n      const params = Object.keys(queryParams).filter(k => queryParams[k] != null).filter(k => {\n        // remove empty arrays\n        return !Array.isArray(queryParams[k]) || Array.isArray(queryParams[k]) && queryParams[k].length > 0;\n      }).map(k => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return {\n            key: k,\n            value: i.join(',')\n          };\n        }\n        return {\n          key: k,\n          value: queryParams[k]\n        };\n      }).map(entry => {\n        return `${entry.key}=${entry.value}`;\n      }).join('&');\n      return `${protocol}//${hostAndPath}?${params}`;\n    }\n  }\n  LazyMapsAPILoader.ɵfac = function LazyMapsAPILoader_Factory(t) {\n    return new (t || LazyMapsAPILoader)(ɵngcc0.ɵɵinject(LAZY_MAPS_API_CONFIG, 8), ɵngcc0.ɵɵinject(WindowRef), ɵngcc0.ɵɵinject(DocumentRef), ɵngcc0.ɵɵinject(LOCALE_ID));\n  };\n  LazyMapsAPILoader.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: LazyMapsAPILoader,\n    factory: LazyMapsAPILoader.ɵfac\n  });\n  return LazyMapsAPILoader;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MarkerManager = /*#__PURE__*/(() => {\n  class MarkerManager {\n    constructor(_mapsWrapper, _zone) {\n      this._mapsWrapper = _mapsWrapper;\n      this._zone = _zone;\n      this._markers = new Map();\n    }\n    convertAnimation(uiAnim) {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (uiAnim === null) {\n          return null;\n        } else {\n          return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n        }\n      });\n    }\n    deleteMarker(markerDirective) {\n      const markerPromise = this._markers.get(markerDirective);\n      if (markerPromise == null) {\n        // marker already deleted\n        return Promise.resolve();\n      }\n      return markerPromise.then(marker => {\n        return this._zone.run(() => {\n          marker.setMap(null);\n          this._markers.delete(markerDirective);\n        });\n      });\n    }\n    updateMarkerPosition(marker) {\n      return this._markers.get(marker).then(m => m.setPosition({\n        lat: marker.latitude,\n        lng: marker.longitude\n      }));\n    }\n    updateTitle(marker) {\n      return this._markers.get(marker).then(m => m.setTitle(marker.title));\n    }\n    updateLabel(marker) {\n      return this._markers.get(marker).then(m => {\n        m.setLabel(marker.label);\n      });\n    }\n    updateDraggable(marker) {\n      return this._markers.get(marker).then(m => m.setDraggable(marker.draggable));\n    }\n    updateIcon(marker) {\n      return this._markers.get(marker).then(m => m.setIcon(marker.iconUrl));\n    }\n    updateOpacity(marker) {\n      return this._markers.get(marker).then(m => m.setOpacity(marker.opacity));\n    }\n    updateVisible(marker) {\n      return this._markers.get(marker).then(m => m.setVisible(marker.visible));\n    }\n    updateZIndex(marker) {\n      return this._markers.get(marker).then(m => m.setZIndex(marker.zIndex));\n    }\n    updateClickable(marker) {\n      return this._markers.get(marker).then(m => m.setClickable(marker.clickable));\n    }\n    updateAnimation(marker) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const m = yield this._markers.get(marker);\n        m.setAnimation(yield this.convertAnimation(marker.animation));\n      });\n    }\n    addMarker(marker) {\n      const markerPromise = new Promise(resolve => __awaiter(this, void 0, void 0, function* () {\n        return this._mapsWrapper.createMarker({\n          position: {\n            lat: marker.latitude,\n            lng: marker.longitude\n          },\n          label: marker.label,\n          draggable: marker.draggable,\n          icon: marker.iconUrl,\n          opacity: marker.opacity,\n          visible: marker.visible,\n          zIndex: marker.zIndex,\n          title: marker.title,\n          clickable: marker.clickable,\n          animation: yield this.convertAnimation(marker.animation)\n        }).then(resolve);\n      }));\n      this._markers.set(marker, markerPromise);\n    }\n    getNativeMarker(marker) {\n      return this._markers.get(marker);\n    }\n    createEventObservable(eventName, marker) {\n      return new Observable(observer => {\n        this._markers.get(marker).then(m => m.addListener(eventName, e => this._zone.run(() => observer.next(e))));\n      });\n    }\n  }\n  MarkerManager.ɵfac = function MarkerManager_Factory(t) {\n    return new (t || MarkerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n  MarkerManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: MarkerManager,\n    factory: MarkerManager.ɵfac\n  });\n  return MarkerManager;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet InfoWindowManager = /*#__PURE__*/(() => {\n  class InfoWindowManager {\n    constructor(_mapsWrapper, _zone, _markerManager) {\n      this._mapsWrapper = _mapsWrapper;\n      this._zone = _zone;\n      this._markerManager = _markerManager;\n      this._infoWindows = new Map();\n    }\n    deleteInfoWindow(infoWindow) {\n      const iWindow = this._infoWindows.get(infoWindow);\n      if (iWindow == null) {\n        // info window already deleted\n        return Promise.resolve();\n      }\n      return iWindow.then(i => {\n        return this._zone.run(() => {\n          i.close();\n          this._infoWindows.delete(infoWindow);\n        });\n      });\n    }\n    setPosition(infoWindow) {\n      return this._infoWindows.get(infoWindow).then(i => i.setPosition({\n        lat: infoWindow.latitude,\n        lng: infoWindow.longitude\n      }));\n    }\n    setZIndex(infoWindow) {\n      return this._infoWindows.get(infoWindow).then(i => i.setZIndex(infoWindow.zIndex));\n    }\n    open(infoWindow) {\n      return this._infoWindows.get(infoWindow).then(w => {\n        if (infoWindow.hostMarker != null) {\n          return this._markerManager.getNativeMarker(infoWindow.hostMarker).then(marker => {\n            return this._mapsWrapper.getNativeMap().then(map => w.open(map, marker));\n          });\n        }\n        return this._mapsWrapper.getNativeMap().then(map => w.open(map));\n      });\n    }\n    close(infoWindow) {\n      return this._infoWindows.get(infoWindow).then(w => w.close());\n    }\n    setOptions(infoWindow, options) {\n      return this._infoWindows.get(infoWindow).then(i => i.setOptions(options));\n    }\n    addInfoWindow(infoWindow) {\n      const options = {\n        content: infoWindow.content,\n        maxWidth: infoWindow.maxWidth,\n        zIndex: infoWindow.zIndex,\n        disableAutoPan: infoWindow.disableAutoPan\n      };\n      if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n        options.position = {\n          lat: infoWindow.latitude,\n          lng: infoWindow.longitude\n        };\n      }\n      const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n      this._infoWindows.set(infoWindow, infoWindowPromise);\n    }\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    createEventObservable(eventName, infoWindow) {\n      return new Observable(observer => {\n        this._infoWindows.get(infoWindow).then(i => {\n          i.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n        });\n      });\n    }\n  }\n  InfoWindowManager.ɵfac = function InfoWindowManager_Factory(t) {\n    return new (t || InfoWindowManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(MarkerManager));\n  };\n  InfoWindowManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: InfoWindowManager,\n    factory: InfoWindowManager.ɵfac\n  });\n  return InfoWindowManager;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nlet KmlLayerManager = /*#__PURE__*/(() => {\n  class KmlLayerManager {\n    constructor(_wrapper, _zone) {\n      this._wrapper = _wrapper;\n      this._zone = _zone;\n      this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    addKmlLayer(layer) {\n      const newLayer = this._wrapper.getNativeMap().then(m => {\n        return new google.maps.KmlLayer({\n          clickable: layer.clickable,\n          map: m,\n          preserveViewport: layer.preserveViewport,\n          screenOverlays: layer.screenOverlays,\n          suppressInfoWindows: layer.suppressInfoWindows,\n          url: layer.url,\n          zIndex: layer.zIndex\n        });\n      });\n      this._layers.set(layer, newLayer);\n    }\n    setOptions(layer, options) {\n      this._layers.get(layer).then(l => l.setOptions(options));\n    }\n    deleteKmlLayer(layer) {\n      this._layers.get(layer).then(l => {\n        l.setMap(null);\n        this._layers.delete(layer);\n      });\n    }\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n      return new Observable(observer => {\n        this._layers.get(layer).then(m => {\n          m.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n        });\n      });\n    }\n  }\n  KmlLayerManager.ɵfac = function KmlLayerManager_Factory(t) {\n    return new (t || KmlLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n  KmlLayerManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: KmlLayerManager,\n    factory: KmlLayerManager.ɵfac\n  });\n  return KmlLayerManager;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\nlet LayerManager = /*#__PURE__*/(() => {\n  class LayerManager {\n    constructor(_wrapper) {\n      this._wrapper = _wrapper;\n      this._layers = new Map();\n    }\n    /**\n     * Adds a transit layer to a map instance.\n     * @param layer - a TransitLayer object\n     * @param _options - TransitLayerOptions options\n     * @returns void\n     */\n    addTransitLayer(layer) {\n      const newLayer = this._wrapper.createTransitLayer();\n      this._layers.set(layer, newLayer);\n    }\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param layer - a bicycling layer object\n     * @param _options - BicyclingLayer options\n     * @returns void\n     */\n    addBicyclingLayer(layer) {\n      const newLayer = this._wrapper.createBicyclingLayer();\n      this._layers.set(layer, newLayer);\n    }\n    /**\n     * Deletes a map layer\n     * @param layer - the layer to delete\n     */\n    deleteLayer(layer) {\n      return this._layers.get(layer).then(currentLayer => {\n        currentLayer.setMap(null);\n        this._layers.delete(layer);\n      });\n    }\n  }\n  LayerManager.ɵfac = function LayerManager_Factory(t) {\n    return new (t || LayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper));\n  };\n  LayerManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: LayerManager,\n    factory: LayerManager.ɵfac\n  });\n  return LayerManager;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nclass NoOpMapsAPILoader {\n  load() {\n    if (!window.google || !window.google.maps) {\n      throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n    }\n    return Promise.resolve();\n  }\n}\nfunction createMVCEventObservable(array) {\n  const eventNames = ['insert_at', 'remove_at', 'set_at'];\n  return fromEventPattern(handler => eventNames.map(eventName => array.addListener(eventName, (index, previous) => handler.apply(array, [{\n    newArr: array.getArray(),\n    eventName,\n    index,\n    previous\n  }]))), (_handler, evListeners) => evListeners.forEach(evListener => evListener.remove()));\n}\nclass MvcArrayMock {\n  constructor() {\n    this.vals = [];\n    this.listeners = {\n      remove_at: [],\n      insert_at: [],\n      set_at: []\n    };\n  }\n  clear() {\n    for (let i = this.vals.length - 1; i >= 0; i--) {\n      this.removeAt(i);\n    }\n  }\n  getArray() {\n    return [...this.vals];\n  }\n  getAt(i) {\n    return this.vals[i];\n  }\n  getLength() {\n    return this.vals.length;\n  }\n  insertAt(i, elem) {\n    this.vals.splice(i, 0, elem);\n    this.listeners.insert_at.forEach(listener => listener(i));\n  }\n  pop() {\n    const deleted = this.vals.pop();\n    this.listeners.remove_at.forEach(listener => listener(this.vals.length, deleted));\n    return deleted;\n  }\n  push(elem) {\n    this.vals.push(elem);\n    this.listeners.insert_at.forEach(listener => listener(this.vals.length - 1));\n    return this.vals.length;\n  }\n  removeAt(i) {\n    const deleted = this.vals.splice(i, 1)[0];\n    this.listeners.remove_at.forEach(listener => listener(i, deleted));\n    return deleted;\n  }\n  setAt(i, elem) {\n    const deleted = this.vals[i];\n    this.vals[i] = elem;\n    this.listeners.set_at.forEach(listener => listener(i, deleted));\n  }\n  forEach(callback) {\n    this.vals.forEach(callback);\n  }\n  addListener(eventName, handler) {\n    const listenerArr = this.listeners[eventName];\n    listenerArr.push(handler);\n    return {\n      remove: () => {\n        listenerArr.splice(listenerArr.indexOf(handler), 1);\n      }\n    };\n  }\n  bindTo() {\n    throw new Error('Not implemented');\n  }\n  changed() {\n    throw new Error('Not implemented');\n  }\n  get() {\n    throw new Error('Not implemented');\n  }\n  notify() {\n    throw new Error('Not implemented');\n  }\n  set() {\n    throw new Error('Not implemented');\n  }\n  setValues() {\n    throw new Error('Not implemented');\n  }\n  unbind() {\n    throw new Error('Not implemented');\n  }\n  unbindAll() {\n    throw new Error('Not implemented');\n  }\n}\nlet PolygonManager = /*#__PURE__*/(() => {\n  class PolygonManager {\n    constructor(_mapsWrapper, _zone) {\n      this._mapsWrapper = _mapsWrapper;\n      this._zone = _zone;\n      this._polygons = new Map();\n    }\n    addPolygon(path) {\n      const polygonPromise = this._mapsWrapper.createPolygon({\n        clickable: path.clickable,\n        draggable: path.draggable,\n        editable: path.editable,\n        fillColor: path.fillColor,\n        fillOpacity: path.fillOpacity,\n        geodesic: path.geodesic,\n        paths: path.paths,\n        strokeColor: path.strokeColor,\n        strokeOpacity: path.strokeOpacity,\n        strokeWeight: path.strokeWeight,\n        visible: path.visible,\n        zIndex: path.zIndex\n      });\n      this._polygons.set(path, polygonPromise);\n    }\n    updatePolygon(polygon) {\n      const m = this._polygons.get(polygon);\n      if (m == null) {\n        return Promise.resolve();\n      }\n      return m.then(l => this._zone.run(() => {\n        l.setPaths(polygon.paths);\n      }));\n    }\n    setPolygonOptions(path, options) {\n      return this._polygons.get(path).then(l => {\n        l.setOptions(options);\n      });\n    }\n    deletePolygon(paths) {\n      const m = this._polygons.get(paths);\n      if (m == null) {\n        return Promise.resolve();\n      }\n      return m.then(l => {\n        return this._zone.run(() => {\n          l.setMap(null);\n          this._polygons.delete(paths);\n        });\n      });\n    }\n    getPath(polygonDirective) {\n      return this._polygons.get(polygonDirective).then(polygon => polygon.getPath().getArray());\n    }\n    getPaths(polygonDirective) {\n      return this._polygons.get(polygonDirective).then(polygon => polygon.getPaths().getArray().map(p => p.getArray()));\n    }\n    createEventObservable(eventName, path) {\n      return new Observable(observer => {\n        this._polygons.get(path).then(l => {\n          l.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n        });\n      });\n    }\n    createPathEventObservable(agmPolygon) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const polygon = yield this._polygons.get(agmPolygon);\n        const paths = polygon.getPaths();\n        const pathsChanges$ = createMVCEventObservable(paths);\n        return pathsChanges$.pipe(startWith({\n          newArr: paths.getArray()\n        }),\n        // in order to subscribe to them all\n        switchMap(parentMVEvent => merge(...\n        // rest parameter\n        parentMVEvent.newArr.map((chMVC, index) => createMVCEventObservable(chMVC).pipe(map(chMVCEvent => ({\n          parentMVEvent,\n          chMVCEvent,\n          pathIndex: index\n        }))))).pipe(\n        // start the merged ob with an event signinifing change to parent\n        startWith({\n          parentMVEvent,\n          chMVCEvent: null,\n          pathIndex: null\n        }))), skip(1),\n        // skip the manually added event\n        map(({\n          parentMVEvent,\n          chMVCEvent,\n          pathIndex\n        }) => {\n          let retVal;\n          if (!chMVCEvent) {\n            retVal = {\n              newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n              eventName: parentMVEvent.eventName,\n              index: parentMVEvent.index\n            };\n            if (parentMVEvent.previous) {\n              retVal.previous = parentMVEvent.previous.getArray();\n            }\n          } else {\n            retVal = {\n              newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n              pathIndex,\n              eventName: chMVCEvent.eventName,\n              index: chMVCEvent.index\n            };\n            if (chMVCEvent.previous) {\n              retVal.previous = chMVCEvent.previous;\n            }\n          }\n          return retVal;\n        }));\n      });\n    }\n  }\n  PolygonManager.ɵfac = function PolygonManager_Factory(t) {\n    return new (t || PolygonManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n  PolygonManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: PolygonManager,\n    factory: PolygonManager.ɵfac\n  });\n  return PolygonManager;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PolylineManager = /*#__PURE__*/(() => {\n  class PolylineManager {\n    constructor(_mapsWrapper, _zone) {\n      this._mapsWrapper = _mapsWrapper;\n      this._zone = _zone;\n      this._polylines = new Map();\n    }\n    static _convertPoints(line) {\n      const path = line._getPoints().map(point => {\n        return {\n          lat: point.latitude,\n          lng: point.longitude\n        };\n      });\n      return path;\n    }\n    static _convertPath(path) {\n      const symbolPath = google.maps.SymbolPath[path];\n      if (typeof symbolPath === 'number') {\n        return symbolPath;\n      } else {\n        return path;\n      }\n    }\n    static _convertIcons(line) {\n      const icons = line._getIcons().map(agmIcon => ({\n        fixedRotation: agmIcon.fixedRotation,\n        offset: agmIcon.offset,\n        repeat: agmIcon.repeat,\n        icon: {\n          anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n          fillColor: agmIcon.fillColor,\n          fillOpacity: agmIcon.fillOpacity,\n          path: PolylineManager._convertPath(agmIcon.path),\n          rotation: agmIcon.rotation,\n          scale: agmIcon.scale,\n          strokeColor: agmIcon.strokeColor,\n          strokeOpacity: agmIcon.strokeOpacity,\n          strokeWeight: agmIcon.strokeWeight\n        }\n      }));\n      // prune undefineds;\n      icons.forEach(icon => {\n        Object.entries(icon).forEach(([key, val]) => {\n          if (typeof val === 'undefined') {\n            delete icon[key];\n          }\n        });\n        if (typeof icon.icon.anchor.x === 'undefined' || typeof icon.icon.anchor.y === 'undefined') {\n          delete icon.icon.anchor;\n        }\n      });\n      return icons;\n    }\n    addPolyline(line) {\n      const polylinePromise = this._mapsWrapper.getNativeMap().then(() => [PolylineManager._convertPoints(line), PolylineManager._convertIcons(line)]).then(([path, icons]) => this._mapsWrapper.createPolyline({\n        clickable: line.clickable,\n        draggable: line.draggable,\n        editable: line.editable,\n        geodesic: line.geodesic,\n        strokeColor: line.strokeColor,\n        strokeOpacity: line.strokeOpacity,\n        strokeWeight: line.strokeWeight,\n        visible: line.visible,\n        zIndex: line.zIndex,\n        path,\n        icons\n      }));\n      this._polylines.set(line, polylinePromise);\n    }\n    updatePolylinePoints(line) {\n      const path = PolylineManager._convertPoints(line);\n      const m = this._polylines.get(line);\n      if (m == null) {\n        return Promise.resolve();\n      }\n      return m.then(l => this._zone.run(() => l.setPath(path)));\n    }\n    updateIconSequences(line) {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this._mapsWrapper.getNativeMap();\n        const icons = PolylineManager._convertIcons(line);\n        const m = this._polylines.get(line);\n        if (m == null) {\n          return;\n        }\n        return m.then(l => this._zone.run(() => l.setOptions({\n          icons\n        })));\n      });\n    }\n    setPolylineOptions(line, options) {\n      return this._polylines.get(line).then(l => {\n        l.setOptions(options);\n      });\n    }\n    deletePolyline(line) {\n      const m = this._polylines.get(line);\n      if (m == null) {\n        return Promise.resolve();\n      }\n      return m.then(l => {\n        return this._zone.run(() => {\n          l.setMap(null);\n          this._polylines.delete(line);\n        });\n      });\n    }\n    getMVCPath(agmPolyline) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const polyline = yield this._polylines.get(agmPolyline);\n        return polyline.getPath();\n      });\n    }\n    getPath(agmPolyline) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return (yield this.getMVCPath(agmPolyline)).getArray();\n      });\n    }\n    createEventObservable(eventName, line) {\n      return new Observable(observer => {\n        this._polylines.get(line).then(l => {\n          l.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n        });\n      });\n    }\n    createPathEventObservable(line) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const mvcPath = yield this.getMVCPath(line);\n        return createMVCEventObservable(mvcPath);\n      });\n    }\n  }\n  PolylineManager.ɵfac = function PolylineManager_Factory(t) {\n    return new (t || PolylineManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n  PolylineManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: PolylineManager,\n    factory: PolylineManager.ɵfac\n  });\n  return PolylineManager;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet RectangleManager = /*#__PURE__*/(() => {\n  class RectangleManager {\n    constructor(_apiWrapper, _zone) {\n      this._apiWrapper = _apiWrapper;\n      this._zone = _zone;\n      this._rectangles = new Map();\n    }\n    addRectangle(rectangle) {\n      this._apiWrapper.getNativeMap().then(() => this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n        bounds: {\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west\n        },\n        clickable: rectangle.clickable,\n        draggable: rectangle.draggable,\n        editable: rectangle.editable,\n        fillColor: rectangle.fillColor,\n        fillOpacity: rectangle.fillOpacity,\n        strokeColor: rectangle.strokeColor,\n        strokeOpacity: rectangle.strokeOpacity,\n        strokePosition: google.maps.StrokePosition[rectangle.strokePosition],\n        strokeWeight: rectangle.strokeWeight,\n        visible: rectangle.visible,\n        zIndex: rectangle.zIndex\n      })));\n    }\n    /**\n     * Removes the given rectangle from the map.\n     */\n    removeRectangle(rectangle) {\n      return this._rectangles.get(rectangle).then(r => {\n        r.setMap(null);\n        this._rectangles.delete(rectangle);\n      });\n    }\n    setOptions(rectangle, options) {\n      return this._rectangles.get(rectangle).then(r => {\n        const actualStrokePosition = options.strokePosition;\n        options.strokePosition = google.maps.StrokePosition[actualStrokePosition];\n        r.setOptions(options);\n      });\n    }\n    getBounds(rectangle) {\n      return this._rectangles.get(rectangle).then(r => r.getBounds());\n    }\n    setBounds(rectangle) {\n      return this._rectangles.get(rectangle).then(r => {\n        return r.setBounds({\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west\n        });\n      });\n    }\n    setEditable(rectangle) {\n      return this._rectangles.get(rectangle).then(r => {\n        return r.setEditable(rectangle.editable);\n      });\n    }\n    setDraggable(rectangle) {\n      return this._rectangles.get(rectangle).then(r => {\n        return r.setDraggable(rectangle.draggable);\n      });\n    }\n    setVisible(rectangle) {\n      return this._rectangles.get(rectangle).then(r => {\n        return r.setVisible(rectangle.visible);\n      });\n    }\n    createEventObservable(eventName, rectangle) {\n      return new Observable(subsrciber => {\n        let listener = null;\n        this._rectangles.get(rectangle).then(r => {\n          listener = r.addListener(eventName, e => this._zone.run(() => subsrciber.next(e)));\n        });\n        return () => {\n          if (listener !== null) {\n            listener.remove();\n          }\n        };\n      });\n    }\n  }\n  RectangleManager.ɵfac = function RectangleManager_Factory(t) {\n    return new (t || RectangleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n  RectangleManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RectangleManager,\n    factory: RectangleManager.ɵfac\n  });\n  return RectangleManager;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\nlet AgmBicyclingLayer = /*#__PURE__*/(() => {\n  class AgmBicyclingLayer {\n    constructor(_manager) {\n      this._manager = _manager;\n      this._addedToManager = false;\n      this._id = (layerId++).toString();\n      /**\n       * Hide/show bicycling layer\n       */\n      this.visible = true;\n    }\n    ngOnInit() {\n      if (this._addedToManager) {\n        return;\n      }\n      this._manager.addBicyclingLayer(this);\n      this._addedToManager = true;\n    }\n    /** @internal */\n    id() {\n      return this._id;\n    }\n    /** @internal */\n    toString() {\n      return `AgmBicyclingLayer-${this._id.toString()}`;\n    }\n    /** @internal */\n    ngOnDestroy() {\n      this._manager.deleteLayer(this);\n    }\n  }\n  AgmBicyclingLayer.ɵfac = function AgmBicyclingLayer_Factory(t) {\n    return new (t || AgmBicyclingLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager));\n  };\n  AgmBicyclingLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmBicyclingLayer,\n    selectors: [[\"agm-bicycling-layer\"]],\n    inputs: {\n      visible: \"visible\"\n    }\n  });\n  return AgmBicyclingLayer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgmCircle = /*#__PURE__*/(() => {\n  class AgmCircle {\n    constructor(_manager) {\n      this._manager = _manager;\n      /**\n       * Indicates whether this Circle handles mouse events. Defaults to true.\n       */\n      this.clickable = true;\n      /**\n       * If set to true, the user can drag this circle over the map. Defaults to false.\n       */\n      // tslint:disable-next-line:no-input-rename\n      this.draggable = false;\n      /**\n       * If set to true, the user can edit this circle by dragging the control points shown at\n       * the center and around the circumference of the circle. Defaults to false.\n       */\n      this.editable = false;\n      /**\n       * The radius in meters on the Earth's surface.\n       */\n      this.radius = 0;\n      /**\n       * The stroke position. Defaults to CENTER.\n       * This property is not supported on Internet Explorer 8 and earlier.\n       */\n      this.strokePosition = 'CENTER';\n      /**\n       * The stroke width in pixels.\n       */\n      this.strokeWeight = 0;\n      /**\n       * Whether this circle is visible on the map. Defaults to true.\n       */\n      this.visible = true;\n      /**\n       * This event is fired when the circle's center is changed.\n       */\n      this.centerChange = new EventEmitter();\n      /**\n       * This event emitter gets emitted when the user clicks on the circle.\n       */\n      this.circleClick = new EventEmitter();\n      /**\n       * This event emitter gets emitted when the user clicks on the circle.\n       */\n      this.circleDblClick = new EventEmitter();\n      /**\n       * This event is repeatedly fired while the user drags the circle.\n       */\n      // tslint:disable-next-line: no-output-native\n      this.drag = new EventEmitter();\n      /**\n       * This event is fired when the user stops dragging the circle.\n       */\n      this.dragEnd = new EventEmitter();\n      /**\n       * This event is fired when the user starts dragging the circle.\n       */\n      this.dragStart = new EventEmitter();\n      /**\n       * This event is fired when the DOM mousedown event is fired on the circle.\n       */\n      this.mouseDown = new EventEmitter();\n      /**\n       * This event is fired when the DOM mousemove event is fired on the circle.\n       */\n      this.mouseMove = new EventEmitter();\n      /**\n       * This event is fired on circle mouseout.\n       */\n      this.mouseOut = new EventEmitter();\n      /**\n       * This event is fired on circle mouseover.\n       */\n      this.mouseOver = new EventEmitter();\n      /**\n       * This event is fired when the DOM mouseup event is fired on the circle.\n       */\n      this.mouseUp = new EventEmitter();\n      /**\n       * This event is fired when the circle's radius is changed.\n       */\n      this.radiusChange = new EventEmitter();\n      /**\n       * This event is fired when the circle is right-clicked on.\n       */\n      this.rightClick = new EventEmitter();\n      this._circleAddedToManager = false;\n      this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n      this._manager.addCircle(this);\n      this._circleAddedToManager = true;\n      this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n      if (!this._circleAddedToManager) {\n        return;\n      }\n      // tslint:disable: no-string-literal\n      if (changes['latitude'] || changes['longitude']) {\n        this._manager.setCenter(this);\n      }\n      if (changes['editable']) {\n        this._manager.setEditable(this);\n      }\n      if (changes['draggable']) {\n        this._manager.setDraggable(this);\n      }\n      if (changes['visible']) {\n        this._manager.setVisible(this);\n      }\n      if (changes['radius']) {\n        this._manager.setRadius(this);\n      }\n      // tslint:enable: no-string-literal\n      this._updateCircleOptionsChanges(changes);\n    }\n    _updateCircleOptionsChanges(changes) {\n      const options = {};\n      const optionKeys = Object.keys(changes).filter(k => AgmCircle._mapOptions.indexOf(k) !== -1);\n      optionKeys.forEach(k => {\n        options[k] = changes[k].currentValue;\n      });\n      if (optionKeys.length > 0) {\n        this._manager.setOptions(this, options);\n      }\n    }\n    _registerEventListeners() {\n      const events = new Map();\n      events.set('center_changed', this.centerChange);\n      events.set('click', this.circleClick);\n      events.set('dblclick', this.circleDblClick);\n      events.set('drag', this.drag);\n      events.set('dragend', this.dragEnd);\n      events.set('dragstart', this.dragStart);\n      events.set('mousedown', this.mouseDown);\n      events.set('mousemove', this.mouseMove);\n      events.set('mouseout', this.mouseOut);\n      events.set('mouseover', this.mouseOver);\n      events.set('mouseup', this.mouseUp);\n      events.set('radius_changed', this.radiusChange);\n      events.set('rightclick', this.rightClick);\n      events.forEach((eventEmitter, eventName) => {\n        this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe(value => {\n          switch (eventName) {\n            case 'radius_changed':\n              this._manager.getRadius(this).then(radius => eventEmitter.emit(radius));\n              break;\n            case 'center_changed':\n              this._manager.getCenter(this).then(center => eventEmitter.emit({\n                lat: center.lat(),\n                lng: center.lng()\n              }));\n              break;\n            default:\n              eventEmitter.emit(value);\n          }\n        }));\n      });\n    }\n    /** @internal */\n    ngOnDestroy() {\n      this._eventSubscriptions.forEach(s => s.unsubscribe());\n      this._eventSubscriptions = null;\n      this._manager.removeCircle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    getBounds() {\n      return this._manager.getBounds(this);\n    }\n    getCenter() {\n      return this._manager.getCenter(this);\n    }\n  }\n  AgmCircle.ɵfac = function AgmCircle_Factory(t) {\n    return new (t || AgmCircle)(ɵngcc0.ɵɵdirectiveInject(CircleManager));\n  };\n  AgmCircle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmCircle,\n    selectors: [[\"agm-circle\"]],\n    inputs: {\n      clickable: \"clickable\",\n      draggable: [\"circleDraggable\", \"draggable\"],\n      editable: \"editable\",\n      radius: \"radius\",\n      strokePosition: \"strokePosition\",\n      strokeWeight: \"strokeWeight\",\n      visible: \"visible\",\n      latitude: \"latitude\",\n      longitude: \"longitude\",\n      fillColor: \"fillColor\",\n      fillOpacity: \"fillOpacity\",\n      strokeColor: \"strokeColor\",\n      strokeOpacity: \"strokeOpacity\",\n      zIndex: \"zIndex\"\n    },\n    outputs: {\n      centerChange: \"centerChange\",\n      circleClick: \"circleClick\",\n      circleDblClick: \"circleDblClick\",\n      drag: \"drag\",\n      dragEnd: \"dragEnd\",\n      dragStart: \"dragStart\",\n      mouseDown: \"mouseDown\",\n      mouseMove: \"mouseMove\",\n      mouseOut: \"mouseOut\",\n      mouseOver: \"mouseOver\",\n      mouseUp: \"mouseUp\",\n      radiusChange: \"radiusChange\",\n      rightClick: \"rightClick\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  AgmCircle._mapOptions = ['fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'clickable'];\n  return AgmCircle;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nlet AgmDataLayer = /*#__PURE__*/(() => {\n  class AgmDataLayer {\n    constructor(_manager) {\n      this._manager = _manager;\n      this._addedToManager = false;\n      this._id = (layerId$1++).toString();\n      this._subscriptions = [];\n      /**\n       * This event is fired when a feature in the layer is clicked.\n       */\n      this.layerClick = new EventEmitter();\n      /**\n       * The geoJson to be displayed\n       */\n      this.geoJson = null;\n    }\n    ngOnInit() {\n      if (this._addedToManager) {\n        return;\n      }\n      this._manager.addDataLayer(this);\n      this._addedToManager = true;\n      this._addEventListeners();\n    }\n    _addEventListeners() {\n      const listeners = [{\n        name: 'click',\n        handler: ev => this.layerClick.emit(ev)\n      }];\n      listeners.forEach(obj => {\n        const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n        this._subscriptions.push(os);\n      });\n    }\n    /** @internal */\n    id() {\n      return this._id;\n    }\n    /** @internal */\n    toString() {\n      return `AgmDataLayer-${this._id.toString()}`;\n    }\n    /** @internal */\n    ngOnDestroy() {\n      this._manager.deleteDataLayer(this);\n      // unsubscribe all registered observable subscriptions\n      this._subscriptions.forEach(s => s.unsubscribe());\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n      if (!this._addedToManager) {\n        return;\n      }\n      // tslint:disable-next-line: no-string-literal\n      const geoJsonChange = changes['geoJson'];\n      if (geoJsonChange) {\n        this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n      }\n      const dataOptions = AgmDataLayer._dataOptionsAttributes.reduce((options, k) => options[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : this[k], {});\n      this._manager.setDataOptions(this, dataOptions);\n    }\n  }\n  AgmDataLayer.ɵfac = function AgmDataLayer_Factory(t) {\n    return new (t || AgmDataLayer)(ɵngcc0.ɵɵdirectiveInject(DataLayerManager));\n  };\n  AgmDataLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmDataLayer,\n    selectors: [[\"agm-data-layer\"]],\n    inputs: {\n      geoJson: \"geoJson\",\n      style: \"style\"\n    },\n    outputs: {\n      layerClick: \"layerClick\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  AgmDataLayer._dataOptionsAttributes = ['style'];\n  return AgmDataLayer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nlet AgmFitBounds = /*#__PURE__*/(() => {\n  class AgmFitBounds {\n    constructor(_fitBoundsAccessor, _fitBoundsService) {\n      this._fitBoundsAccessor = _fitBoundsAccessor;\n      this._fitBoundsService = _fitBoundsService;\n      /**\n       * If the value is true, the element gets added to the bounds of the map.\n       * Default: true.\n       */\n      this.agmFitBounds = true;\n      this._destroyed$ = new Subject();\n      this._latestFitBoundsDetails = null;\n    }\n    /**\n     * @internal\n     */\n    ngOnChanges() {\n      this._updateBounds();\n    }\n    /**\n     * @internal\n     */\n    ngOnInit() {\n      this._fitBoundsAccessor.getFitBoundsDetails$().pipe(distinctUntilChanged((x, y) => x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng), takeUntil(this._destroyed$)).subscribe(details => this._updateBounds(details));\n    }\n    /*\n     Either the location changed, or visible status changed.\n     Possible state changes are\n     invisible -> visible\n     visible -> invisible\n     visible -> visible (new location)\n    */\n    _updateBounds(newFitBoundsDetails) {\n      // either visibility will change, or location, so remove the old one anyway\n      if (this._latestFitBoundsDetails) {\n        this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n        // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n        // true -> false -> true, in which case we still need old value cached here\n      }\n\n      if (newFitBoundsDetails) {\n        this._latestFitBoundsDetails = newFitBoundsDetails;\n      }\n      if (!this._latestFitBoundsDetails) {\n        return;\n      }\n      if (this.agmFitBounds === true) {\n        this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n      }\n    }\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n      this._destroyed$.next();\n      this._destroyed$.complete();\n      if (this._latestFitBoundsDetails !== null) {\n        this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n      }\n    }\n  }\n  AgmFitBounds.ɵfac = function AgmFitBounds_Factory(t) {\n    return new (t || AgmFitBounds)(ɵngcc0.ɵɵdirectiveInject(FitBoundsAccessor, 2), ɵngcc0.ɵɵdirectiveInject(FitBoundsService));\n  };\n  AgmFitBounds.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmFitBounds,\n    selectors: [[\"\", \"agmFitBounds\", \"\"]],\n    inputs: {\n      agmFitBounds: \"agmFitBounds\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return AgmFitBounds;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmInfoWindow = /*#__PURE__*/(() => {\n  class AgmInfoWindow {\n    constructor(_infoWindowManager, _el) {\n      this._infoWindowManager = _infoWindowManager;\n      this._el = _el;\n      /**\n       * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n       */\n      this.isOpen = false;\n      /**\n       * Emits an event when the info window is closed.\n       */\n      this.infoWindowClose = new EventEmitter();\n      this._infoWindowAddedToManager = false;\n      this._id = (infoWindowId++).toString();\n    }\n    ngOnInit() {\n      this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n      this._infoWindowManager.addInfoWindow(this);\n      this._infoWindowAddedToManager = true;\n      this._updateOpenState();\n      this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n      if (!this._infoWindowAddedToManager) {\n        return;\n      }\n      // tslint:disable: no-string-literal\n      if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' && typeof this.longitude === 'number') {\n        this._infoWindowManager.setPosition(this);\n      }\n      if (changes['zIndex']) {\n        this._infoWindowManager.setZIndex(this);\n      }\n      if (changes['isOpen']) {\n        this._updateOpenState();\n      }\n      this._setInfoWindowOptions(changes);\n    }\n    // tslint:enable: no-string-literal\n    _registerEventListeners() {\n      this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n        this.isOpen = false;\n        this.infoWindowClose.emit();\n      });\n    }\n    _updateOpenState() {\n      this.isOpen ? this.open() : this.close();\n    }\n    _setInfoWindowOptions(changes) {\n      const options = {};\n      const optionKeys = Object.keys(changes).filter(k => AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1);\n      optionKeys.forEach(k => {\n        options[k] = changes[k].currentValue;\n      });\n      this._infoWindowManager.setOptions(this, options);\n    }\n    /**\n     * Opens the info window.\n     */\n    open() {\n      return this._infoWindowManager.open(this);\n    }\n    /**\n     * Closes the info window.\n     */\n    close() {\n      return this._infoWindowManager.close(this).then(() => {\n        this.infoWindowClose.emit();\n      });\n    }\n    /** @internal */\n    id() {\n      return this._id;\n    }\n    /** @internal */\n    toString() {\n      return 'AgmInfoWindow-' + this._id.toString();\n    }\n    /** @internal */\n    ngOnDestroy() {\n      this._infoWindowManager.deleteInfoWindow(this);\n    }\n  }\n  AgmInfoWindow.ɵfac = function AgmInfoWindow_Factory(t) {\n    return new (t || AgmInfoWindow)(ɵngcc0.ɵɵdirectiveInject(InfoWindowManager), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n  AgmInfoWindow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: AgmInfoWindow,\n    selectors: [[\"agm-info-window\"]],\n    inputs: {\n      isOpen: \"isOpen\",\n      latitude: \"latitude\",\n      longitude: \"longitude\",\n      disableAutoPan: \"disableAutoPan\",\n      zIndex: \"zIndex\",\n      maxWidth: \"maxWidth\"\n    },\n    outputs: {\n      infoWindowClose: \"infoWindowClose\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"agm-info-window-content\"]],\n    template: function AgmInfoWindow_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  AgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\n  return AgmInfoWindow;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet layerId$2 = 0;\nlet AgmKmlLayer = /*#__PURE__*/(() => {\n  class AgmKmlLayer {\n    constructor(_manager) {\n      this._manager = _manager;\n      this._addedToManager = false;\n      this._id = (layerId$2++).toString();\n      this._subscriptions = [];\n      /**\n       * If true, the layer receives mouse events. Default value is true.\n       */\n      this.clickable = true;\n      /**\n       * By default, the input map is centered and zoomed to the bounding box of the contents of the\n       * layer.\n       * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n       * were never set.\n       */\n      this.preserveViewport = false;\n      /**\n       * Whether to render the screen overlays. Default true.\n       */\n      this.screenOverlays = true;\n      /**\n       * Suppress the rendering of info windows when layer features are clicked.\n       */\n      this.suppressInfoWindows = false;\n      /**\n       * The URL of the KML document to display.\n       */\n      this.url = null;\n      /**\n       * The z-index of the layer.\n       */\n      this.zIndex = null;\n      /**\n       * This event is fired when a feature in the layer is clicked.\n       */\n      this.layerClick = new EventEmitter();\n      /**\n       * This event is fired when the KML layers default viewport has changed.\n       */\n      this.defaultViewportChange = new EventEmitter();\n      /**\n       * This event is fired when the KML layer has finished loading.\n       * At this point it is safe to read the status property to determine if the layer loaded\n       * successfully.\n       */\n      this.statusChange = new EventEmitter();\n    }\n    ngOnInit() {\n      if (this._addedToManager) {\n        return;\n      }\n      this._manager.addKmlLayer(this);\n      this._addedToManager = true;\n      this._addEventListeners();\n    }\n    ngOnChanges(changes) {\n      if (!this._addedToManager) {\n        return;\n      }\n      this._updatePolygonOptions(changes);\n    }\n    _updatePolygonOptions(changes) {\n      const options = Object.keys(changes).filter(k => AgmKmlLayer._kmlLayerOptions.indexOf(k) !== -1).reduce((obj, k) => {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n      if (Object.keys(options).length > 0) {\n        this._manager.setOptions(this, options);\n      }\n    }\n    _addEventListeners() {\n      const listeners = [{\n        name: 'click',\n        handler: ev => this.layerClick.emit(ev)\n      }, {\n        name: 'defaultviewport_changed',\n        handler: () => this.defaultViewportChange.emit()\n      }, {\n        name: 'status_changed',\n        handler: () => this.statusChange.emit()\n      }];\n      listeners.forEach(obj => {\n        const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n        this._subscriptions.push(os);\n      });\n    }\n    /** @internal */\n    id() {\n      return this._id;\n    }\n    /** @internal */\n    toString() {\n      return `AgmKmlLayer-${this._id.toString()}`;\n    }\n    /** @internal */\n    ngOnDestroy() {\n      this._manager.deleteKmlLayer(this);\n      // unsubscribe all registered observable subscriptions\n      this._subscriptions.forEach(s => s.unsubscribe());\n    }\n  }\n  AgmKmlLayer.ɵfac = function AgmKmlLayer_Factory(t) {\n    return new (t || AgmKmlLayer)(ɵngcc0.ɵɵdirectiveInject(KmlLayerManager));\n  };\n  AgmKmlLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmKmlLayer,\n    selectors: [[\"agm-kml-layer\"]],\n    inputs: {\n      clickable: \"clickable\",\n      preserveViewport: \"preserveViewport\",\n      screenOverlays: \"screenOverlays\",\n      suppressInfoWindows: \"suppressInfoWindows\",\n      url: \"url\",\n      zIndex: \"zIndex\"\n    },\n    outputs: {\n      layerClick: \"layerClick\",\n      defaultViewportChange: \"defaultViewportChange\",\n      statusChange: \"statusChange\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  AgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\n  return AgmKmlLayer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgmMapControl = /*#__PURE__*/(() => {\n  class AgmMapControl {}\n  AgmMapControl.ɵfac = function AgmMapControl_Factory(t) {\n    return new (t || AgmMapControl)();\n  };\n  AgmMapControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmMapControl,\n    inputs: {\n      position: \"position\"\n    }\n  });\n  return AgmMapControl;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgmFullscreenControl = /*#__PURE__*/(() => {\n  class AgmFullscreenControl extends AgmMapControl {\n    getOptions() {\n      return {\n        fullscreenControl: true,\n        fullscreenControlOptions: {\n          position: this.position && google.maps.ControlPosition[this.position]\n        }\n      };\n    }\n  }\n  AgmFullscreenControl.ɵfac = /*@__PURE__*/function () {\n    let ɵAgmFullscreenControl_BaseFactory;\n    return function AgmFullscreenControl_Factory(t) {\n      return (ɵAgmFullscreenControl_BaseFactory || (ɵAgmFullscreenControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmFullscreenControl)))(t || AgmFullscreenControl);\n    };\n  }();\n  AgmFullscreenControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmFullscreenControl,\n    selectors: [[\"agm-fullscreen-control\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: AgmMapControl,\n      useExisting: AgmFullscreenControl\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return AgmFullscreenControl;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgmMapTypeControl = /*#__PURE__*/(() => {\n  class AgmMapTypeControl extends AgmMapControl {\n    getOptions() {\n      return {\n        mapTypeControl: true,\n        mapTypeControlOptions: {\n          position: this.position && google.maps.ControlPosition[this.position],\n          style: this.style && google.maps.MapTypeControlStyle[this.style],\n          mapTypeIds: this.mapTypeIds && this.mapTypeIds.map(mapTypeId => google.maps.MapTypeId[mapTypeId])\n        }\n      };\n    }\n  }\n  AgmMapTypeControl.ɵfac = /*@__PURE__*/function () {\n    let ɵAgmMapTypeControl_BaseFactory;\n    return function AgmMapTypeControl_Factory(t) {\n      return (ɵAgmMapTypeControl_BaseFactory || (ɵAgmMapTypeControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmMapTypeControl)))(t || AgmMapTypeControl);\n    };\n  }();\n  AgmMapTypeControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmMapTypeControl,\n    selectors: [[\"agm-map-type-control\"]],\n    inputs: {\n      mapTypeIds: \"mapTypeIds\",\n      style: \"style\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: AgmMapControl,\n      useExisting: AgmMapTypeControl\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return AgmMapTypeControl;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgmPanControl = /*#__PURE__*/(() => {\n  class AgmPanControl extends AgmMapControl {\n    getOptions() {\n      return {\n        panControl: true,\n        panControlOptions: {\n          position: this.position && google.maps.ControlPosition[this.position]\n        }\n      };\n    }\n  }\n  AgmPanControl.ɵfac = /*@__PURE__*/function () {\n    let ɵAgmPanControl_BaseFactory;\n    return function AgmPanControl_Factory(t) {\n      return (ɵAgmPanControl_BaseFactory || (ɵAgmPanControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmPanControl)))(t || AgmPanControl);\n    };\n  }();\n  AgmPanControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmPanControl,\n    selectors: [[\"agm-pan-control\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: AgmMapControl,\n      useExisting: AgmPanControl\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return AgmPanControl;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgmRotateControl = /*#__PURE__*/(() => {\n  class AgmRotateControl extends AgmMapControl {\n    getOptions() {\n      return {\n        rotateControl: true,\n        rotateControlOptions: {\n          position: this.position && google.maps.ControlPosition[this.position]\n        }\n      };\n    }\n  }\n  AgmRotateControl.ɵfac = /*@__PURE__*/function () {\n    let ɵAgmRotateControl_BaseFactory;\n    return function AgmRotateControl_Factory(t) {\n      return (ɵAgmRotateControl_BaseFactory || (ɵAgmRotateControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmRotateControl)))(t || AgmRotateControl);\n    };\n  }();\n  AgmRotateControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmRotateControl,\n    selectors: [[\"agm-rotate-control\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: AgmMapControl,\n      useExisting: AgmRotateControl\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return AgmRotateControl;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgmScaleControl = /*#__PURE__*/(() => {\n  class AgmScaleControl extends AgmMapControl {\n    getOptions() {\n      return {\n        scaleControl: true\n      };\n    }\n  }\n  AgmScaleControl.ɵfac = /*@__PURE__*/function () {\n    let ɵAgmScaleControl_BaseFactory;\n    return function AgmScaleControl_Factory(t) {\n      return (ɵAgmScaleControl_BaseFactory || (ɵAgmScaleControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmScaleControl)))(t || AgmScaleControl);\n    };\n  }();\n  AgmScaleControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmScaleControl,\n    selectors: [[\"agm-scale-control\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: AgmMapControl,\n      useExisting: AgmScaleControl\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return AgmScaleControl;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgmStreetViewControl = /*#__PURE__*/(() => {\n  class AgmStreetViewControl extends AgmMapControl {\n    getOptions() {\n      return {\n        streetViewControl: true,\n        streetViewControlOptions: {\n          position: this.position && google.maps.ControlPosition[this.position]\n        }\n      };\n    }\n  }\n  AgmStreetViewControl.ɵfac = /*@__PURE__*/function () {\n    let ɵAgmStreetViewControl_BaseFactory;\n    return function AgmStreetViewControl_Factory(t) {\n      return (ɵAgmStreetViewControl_BaseFactory || (ɵAgmStreetViewControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmStreetViewControl)))(t || AgmStreetViewControl);\n    };\n  }();\n  AgmStreetViewControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmStreetViewControl,\n    selectors: [[\"agm-street-view-control\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: AgmMapControl,\n      useExisting: AgmStreetViewControl\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return AgmStreetViewControl;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgmZoomControl = /*#__PURE__*/(() => {\n  class AgmZoomControl extends AgmMapControl {\n    getOptions() {\n      return {\n        zoomControl: true,\n        zoomControlOptions: {\n          position: this.position && google.maps.ControlPosition[this.position],\n          style: this.style && google.maps.ZoomControlStyle[this.style]\n        }\n      };\n    }\n  }\n  AgmZoomControl.ɵfac = /*@__PURE__*/function () {\n    let ɵAgmZoomControl_BaseFactory;\n    return function AgmZoomControl_Factory(t) {\n      return (ɵAgmZoomControl_BaseFactory || (ɵAgmZoomControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmZoomControl)))(t || AgmZoomControl);\n    };\n  }();\n  AgmZoomControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmZoomControl,\n    selectors: [[\"agm-zoom-control\"]],\n    inputs: {\n      style: \"style\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: AgmMapControl,\n      useExisting: AgmZoomControl\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return AgmZoomControl;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMap = /*#__PURE__*/(() => {\n  class AgmMap {\n    constructor(_elem, _mapsWrapper,\n    // tslint:disable-next-line: ban-types\n    _platformId, _fitBoundsService, _zone) {\n      this._elem = _elem;\n      this._mapsWrapper = _mapsWrapper;\n      this._platformId = _platformId;\n      this._fitBoundsService = _fitBoundsService;\n      this._zone = _zone;\n      /**\n       * The longitude that defines the center of the map.\n       */\n      this.longitude = 0;\n      /**\n       * The latitude that defines the center of the map.\n       */\n      this.latitude = 0;\n      /**\n       * The zoom level of the map. The default zoom level is 8.\n       */\n      this.zoom = 8;\n      /**\n       * Enables/disables if map is draggable.\n       */\n      // tslint:disable-next-line:no-input-rename\n      this.draggable = true;\n      /**\n       * Enables/disables zoom and center on double click. Enabled by default.\n       */\n      this.disableDoubleClickZoom = false;\n      /**\n       * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n       * value cannot get updated.\n       */\n      this.disableDefaultUI = false;\n      /**\n       * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n       */\n      this.scrollwheel = true;\n      /**\n       * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n       * enabled by default.\n       */\n      this.keyboardShortcuts = true;\n      /**\n       * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n       * modes, these styles will only apply to labels and geometry.\n       */\n      this.styles = [];\n      /**\n       * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n       * used to\n       * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n       */\n      this.usePanning = false;\n      /**\n       * Sets the viewport to contain the given bounds.\n       * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n       */\n      this.fitBounds = false;\n      /**\n       * The map mapTypeId. Defaults to 'roadmap'.\n       */\n      this.mapTypeId = 'ROADMAP';\n      /**\n       * When false, map icons are not clickable. A map icon represents a point of interest,\n       * also known as a POI. By default map icons are clickable.\n       */\n      this.clickableIcons = true;\n      /**\n       * A map icon represents a point of interest, also known as a POI.\n       * When map icons are clickable by default, an info window is displayed.\n       * When this property is set to false, the info window will not be shown but the click event\n       * will still fire\n       */\n      this.showDefaultInfoWindow = true;\n      /**\n       * This setting controls how gestures on the map are handled.\n       * Allowed values:\n       * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n       * - 'greedy'      (All touch gestures pan or zoom the map.)\n       * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n       * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n       */\n      this.gestureHandling = 'auto';\n      /**\n       * Controls the automatic switching behavior for the angle of incidence of\n       * the map. The only allowed values are 0 and 45. The value 0 causes the map\n       * to always use a 0° overhead view regardless of the zoom level and\n       * viewport. The value 45 causes the tilt angle to automatically switch to\n       * 45 whenever 45° imagery is available for the current zoom level and\n       * viewport, and switch back to 0 whenever 45° imagery is not available\n       * (this is the default behavior). 45° imagery is only available for\n       * satellite and hybrid map types, within some locations, and at some zoom\n       * levels. Note: getTilt returns the current tilt angle, not the value\n       * specified by this option. Because getTilt and this option refer to\n       * different things, do not bind() the tilt property; doing so may yield\n       * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n       */\n      this.tilt = 0;\n      this._observableSubscriptions = [];\n      /**\n       * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n       * marker or infoWindow).\n       */\n      // tslint:disable-next-line: max-line-length\n      this.mapClick = new EventEmitter();\n      /**\n       * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n       * on a marker or infoWindow).\n       */\n      this.mapRightClick = new EventEmitter();\n      /**\n       * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n       * on a marker or infoWindow).\n       */\n      this.mapDblClick = new EventEmitter();\n      /**\n       * This event emitter is fired when the map center changes.\n       */\n      this.centerChange = new EventEmitter();\n      /**\n       * This event is fired when the viewport bounds have changed.\n       */\n      this.boundsChange = new EventEmitter();\n      /**\n       * This event is fired when the mapTypeId property changes.\n       */\n      this.mapTypeIdChange = new EventEmitter();\n      /**\n       * This event is fired when the map becomes idle after panning or zooming.\n       */\n      this.idle = new EventEmitter();\n      /**\n       * This event is fired when the zoom level has changed.\n       */\n      this.zoomChange = new EventEmitter();\n      /**\n       * This event is fired when the google map is fully initialized.\n       * You get the google.maps.Map instance as a result of this EventEmitter.\n       */\n      this.mapReady = new EventEmitter();\n      /**\n       * This event is fired when the visible tiles have finished loading.\n       */\n      this.tilesLoaded = new EventEmitter();\n    }\n    /** @internal */\n    ngAfterContentInit() {\n      if (isPlatformServer(this._platformId)) {\n        // The code is running on the server, do nothing\n        return;\n      }\n      // todo: this should be solved with a new component and a viewChild decorator\n      const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n      this._initMapInstance(container);\n    }\n    _initMapInstance(el) {\n      this._mapsWrapper.createMap(el, {\n        center: {\n          lat: this.latitude || 0,\n          lng: this.longitude || 0\n        },\n        zoom: this.zoom,\n        minZoom: this.minZoom,\n        maxZoom: this.maxZoom,\n        controlSize: this.controlSize,\n        disableDefaultUI: this.disableDefaultUI,\n        disableDoubleClickZoom: this.disableDoubleClickZoom,\n        scrollwheel: this.scrollwheel,\n        backgroundColor: this.backgroundColor,\n        draggable: this.draggable,\n        draggableCursor: this.draggableCursor,\n        draggingCursor: this.draggingCursor,\n        keyboardShortcuts: this.keyboardShortcuts,\n        styles: this.styles,\n        mapTypeId: this.mapTypeId.toLocaleLowerCase(),\n        clickableIcons: this.clickableIcons,\n        gestureHandling: this.gestureHandling,\n        tilt: this.tilt,\n        restriction: this.restriction\n      }).then(() => this._mapsWrapper.getNativeMap()).then(map => this.mapReady.emit(map));\n      // register event listeners\n      this._handleMapCenterChange();\n      this._handleMapZoomChange();\n      this._handleMapMouseEvents();\n      this._handleBoundsChange();\n      this._handleMapTypeIdChange();\n      this._handleTilesLoadedEvent();\n      this._handleIdleEvent();\n      this._handleControlChange();\n    }\n    /** @internal */\n    ngOnDestroy() {\n      // unsubscribe all registered observable subscriptions\n      this._observableSubscriptions.forEach(s => s.unsubscribe());\n      // remove all listeners from the map instance\n      this._mapsWrapper.clearInstanceListeners();\n      if (this._fitBoundsSubscription) {\n        this._fitBoundsSubscription.unsubscribe();\n      }\n    }\n    /* @internal */\n    ngOnChanges(changes) {\n      this._updateMapOptionsChanges(changes);\n      this._updatePosition(changes);\n    }\n    _updateMapOptionsChanges(changes) {\n      const options = {};\n      const optionKeys = Object.keys(changes).filter(k => AgmMap._mapOptionsAttributes.indexOf(k) !== -1);\n      optionKeys.forEach(k => {\n        options[k] = changes[k].currentValue;\n      });\n      this._mapsWrapper.setMapOptions(options);\n    }\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    triggerResize(recenter = true) {\n      // Note: When we would trigger the resize event and show the map in the same turn (which is a\n      // common case for triggering a resize event), then the resize event would not\n      // work (to show the map), so we trigger the event in a timeout.\n      return new Promise(resolve => {\n        setTimeout(() => {\n          return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n            if (recenter) {\n              this.fitBounds != null ? this._fitBounds() : this._setCenter();\n            }\n            resolve();\n          });\n        });\n      });\n    }\n    _updatePosition(changes) {\n      // tslint:disable: no-string-literal\n      if (changes['latitude'] == null && changes['longitude'] == null && !changes['fitBounds']) {\n        // no position update needed\n        return;\n      }\n      // tslint:enable: no-string-literal\n      // we prefer fitBounds in changes\n      if ('fitBounds' in changes) {\n        this._fitBounds();\n        return;\n      }\n      if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n        return;\n      }\n      this._setCenter();\n    }\n    _setCenter() {\n      const newCenter = {\n        lat: this.latitude,\n        lng: this.longitude\n      };\n      if (this.usePanning) {\n        this._mapsWrapper.panTo(newCenter);\n      } else {\n        this._mapsWrapper.setCenter(newCenter);\n      }\n    }\n    _fitBounds() {\n      switch (this.fitBounds) {\n        case true:\n          this._subscribeToFitBoundsUpdates();\n          break;\n        case false:\n          if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n          }\n          break;\n        default:\n          if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n          }\n          this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n      }\n    }\n    _subscribeToFitBoundsUpdates() {\n      this._zone.runOutsideAngular(() => {\n        this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n          this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n        });\n      });\n    }\n    _updateBounds(bounds, padding) {\n      if (!bounds) {\n        return;\n      }\n      if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n        const newBounds = new google.maps.LatLngBounds();\n        newBounds.union(bounds);\n        bounds = newBounds;\n      }\n      if (this.usePanning) {\n        this._mapsWrapper.panToBounds(bounds, padding);\n        return;\n      }\n      this._mapsWrapper.fitBounds(bounds, padding);\n    }\n    _isLatLngBoundsLiteral(bounds) {\n      return bounds != null && bounds.extend === undefined;\n    }\n    _handleMapCenterChange() {\n      const s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(() => {\n        this._mapsWrapper.getCenter().then(center => {\n          this.latitude = center.lat();\n          this.longitude = center.lng();\n          this.centerChange.emit({\n            lat: this.latitude,\n            lng: this.longitude\n          });\n        });\n      });\n      this._observableSubscriptions.push(s);\n    }\n    _handleBoundsChange() {\n      const s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(() => {\n        this._mapsWrapper.getBounds().then(bounds => {\n          this.boundsChange.emit(bounds);\n        });\n      });\n      this._observableSubscriptions.push(s);\n    }\n    _handleMapTypeIdChange() {\n      const s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(() => {\n        this._mapsWrapper.getMapTypeId().then(mapTypeId => {\n          this.mapTypeIdChange.emit(mapTypeId);\n        });\n      });\n      this._observableSubscriptions.push(s);\n    }\n    _handleMapZoomChange() {\n      const s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(() => {\n        this._mapsWrapper.getZoom().then(z => {\n          this.zoom = z;\n          this.zoomChange.emit(z);\n        });\n      });\n      this._observableSubscriptions.push(s);\n    }\n    _handleIdleEvent() {\n      const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => {\n        this.idle.emit(void 0);\n      });\n      this._observableSubscriptions.push(s);\n    }\n    _handleTilesLoadedEvent() {\n      const s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(() => this.tilesLoaded.emit(void 0));\n      this._observableSubscriptions.push(s);\n    }\n    _handleMapMouseEvents() {\n      const events = [{\n        name: 'click',\n        emitter: this.mapClick\n      }, {\n        name: 'rightclick',\n        emitter: this.mapRightClick\n      }, {\n        name: 'dblclick',\n        emitter: this.mapDblClick\n      }];\n      events.forEach(e => {\n        const s = this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(([event]) => {\n          // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n          if (event.placeId && !this.showDefaultInfoWindow) {\n            event.stop();\n          }\n          e.emitter.emit(event);\n        });\n        this._observableSubscriptions.push(s);\n      });\n    }\n    _handleControlChange() {\n      this._setControls();\n      this.mapControls.changes.subscribe(() => this._setControls());\n    }\n    _setControls() {\n      const controlOptions = {\n        fullscreenControl: !this.disableDefaultUI,\n        mapTypeControl: false,\n        panControl: false,\n        rotateControl: false,\n        scaleControl: false,\n        streetViewControl: !this.disableDefaultUI,\n        zoomControl: !this.disableDefaultUI\n      };\n      this._mapsWrapper.getNativeMap().then(() => {\n        this.mapControls.forEach(control => Object.assign(controlOptions, control.getOptions()));\n        this._mapsWrapper.setMapOptions(controlOptions);\n      });\n    }\n  }\n  AgmMap.ɵfac = function AgmMap_Factory(t) {\n    return new (t || AgmMap)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(FitBoundsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n  AgmMap.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: AgmMap,\n    selectors: [[\"agm-map\"]],\n    contentQueries: function AgmMap_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmMapControl, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.mapControls = _t);\n      }\n    },\n    inputs: {\n      longitude: \"longitude\",\n      latitude: \"latitude\",\n      zoom: \"zoom\",\n      draggable: [\"mapDraggable\", \"draggable\"],\n      disableDoubleClickZoom: \"disableDoubleClickZoom\",\n      disableDefaultUI: \"disableDefaultUI\",\n      scrollwheel: \"scrollwheel\",\n      keyboardShortcuts: \"keyboardShortcuts\",\n      styles: \"styles\",\n      usePanning: \"usePanning\",\n      fitBounds: \"fitBounds\",\n      mapTypeId: \"mapTypeId\",\n      clickableIcons: \"clickableIcons\",\n      showDefaultInfoWindow: \"showDefaultInfoWindow\",\n      gestureHandling: \"gestureHandling\",\n      tilt: \"tilt\",\n      minZoom: \"minZoom\",\n      maxZoom: \"maxZoom\",\n      controlSize: \"controlSize\",\n      backgroundColor: \"backgroundColor\",\n      draggableCursor: \"draggableCursor\",\n      draggingCursor: \"draggingCursor\",\n      fitBoundsPadding: \"fitBoundsPadding\",\n      restriction: \"restriction\"\n    },\n    outputs: {\n      mapClick: \"mapClick\",\n      mapRightClick: \"mapRightClick\",\n      mapDblClick: \"mapDblClick\",\n      centerChange: \"centerChange\",\n      boundsChange: \"boundsChange\",\n      mapTypeIdChange: \"mapTypeIdChange\",\n      idle: \"idle\",\n      zoomChange: \"zoomChange\",\n      mapReady: \"mapReady\",\n      tilesLoaded: \"tilesLoaded\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([CircleManager, DataLayerManager, DataLayerManager, FitBoundsService, GoogleMapsAPIWrapper, InfoWindowManager, KmlLayerManager, LayerManager, MarkerManager, PolygonManager, PolylineManager, RectangleManager]), ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 0,\n    consts: [[1, \"agm-map-container-inner\", \"sebm-google-map-container-inner\"], [1, \"agm-map-content\"]],\n    template: function AgmMap_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".agm-map-container-inner[_ngcontent-%COMP%] {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content[_ngcontent-%COMP%] {\\n      display:none;\\n    }\"]\n  });\n  /**\n   * Map option attributes that can change over time\n   */\n  AgmMap._mapOptionsAttributes = ['disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor', 'keyboardShortcuts', 'styles', 'zoom', 'minZoom', 'maxZoom', 'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction'];\n  return AgmMap;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMarker = /*#__PURE__*/(() => {\n  class AgmMarker {\n    constructor(_markerManager) {\n      this._markerManager = _markerManager;\n      /**\n       * If true, the marker can be dragged. Default value is false.\n       */\n      // tslint:disable-next-line:no-input-rename\n      this.draggable = false;\n      /**\n       * If true, the marker is visible\n       */\n      this.visible = true;\n      /**\n       * Whether to automatically open the child info window when the marker is clicked.\n       */\n      this.openInfoWindow = true;\n      /**\n       * The marker's opacity between 0.0 and 1.0.\n       */\n      this.opacity = 1;\n      /**\n       * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n       * front of markers with lower values. By default, markers are displayed according to their\n       * vertical position on screen, with lower markers appearing in front of markers further up the\n       * screen.\n       */\n      this.zIndex = 1;\n      /**\n       * If true, the marker can be clicked. Default value is true.\n       */\n      // tslint:disable-next-line:no-input-rename\n      this.clickable = true;\n      /**\n       * This event is fired when the marker's animation property changes.\n       */\n      this.animationChange = new EventEmitter();\n      /**\n       * This event emitter gets emitted when the user clicks on the marker.\n       */\n      this.markerClick = new EventEmitter();\n      /**\n       * This event emitter gets emitted when the user clicks twice on the marker.\n       */\n      this.markerDblClick = new EventEmitter();\n      /**\n       * This event is fired when the user rightclicks on the marker.\n       */\n      this.markerRightClick = new EventEmitter();\n      /**\n       * This event is fired when the user starts dragging the marker.\n       */\n      this.dragStart = new EventEmitter();\n      /**\n       * This event is repeatedly fired while the user drags the marker.\n       */\n      // tslint:disable-next-line: no-output-native\n      this.drag = new EventEmitter();\n      /**\n       * This event is fired when the user stops dragging the marker.\n       */\n      this.dragEnd = new EventEmitter();\n      /**\n       * This event is fired when the user mouses over the marker.\n       */\n      this.mouseOver = new EventEmitter();\n      /**\n       * This event is fired when the user mouses outside the marker.\n       */\n      this.mouseOut = new EventEmitter();\n      /** @internal */\n      this.infoWindow = new QueryList();\n      this._markerAddedToManger = false;\n      this._observableSubscriptions = [];\n      this._fitBoundsDetails$ = new ReplaySubject(1);\n      this._id = (markerId++).toString();\n    }\n    /* @internal */\n    ngAfterContentInit() {\n      this.handleInfoWindowUpdate();\n      this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n    }\n    handleInfoWindowUpdate() {\n      if (this.infoWindow.length > 1) {\n        throw new Error('Expected no more than one info window.');\n      }\n      this.infoWindow.forEach(marker => {\n        marker.hostMarker = this;\n      });\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n      if (typeof this.latitude === 'string') {\n        this.latitude = Number(this.latitude);\n      }\n      if (typeof this.longitude === 'string') {\n        this.longitude = Number(this.longitude);\n      }\n      if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n        return;\n      }\n      if (!this._markerAddedToManger) {\n        this._markerManager.addMarker(this);\n        this._updateFitBoundsDetails();\n        this._markerAddedToManger = true;\n        this._addEventListeners();\n        return;\n      }\n      // tslint:disable: no-string-literal\n      if (changes['latitude'] || changes['longitude']) {\n        this._markerManager.updateMarkerPosition(this);\n        this._updateFitBoundsDetails();\n      }\n      if (changes['title']) {\n        this._markerManager.updateTitle(this);\n      }\n      if (changes['label']) {\n        this._markerManager.updateLabel(this);\n      }\n      if (changes['draggable']) {\n        this._markerManager.updateDraggable(this);\n      }\n      if (changes['iconUrl']) {\n        this._markerManager.updateIcon(this);\n      }\n      if (changes['opacity']) {\n        this._markerManager.updateOpacity(this);\n      }\n      if (changes['visible']) {\n        this._markerManager.updateVisible(this);\n      }\n      if (changes['zIndex']) {\n        this._markerManager.updateZIndex(this);\n      }\n      if (changes['clickable']) {\n        this._markerManager.updateClickable(this);\n      }\n      if (changes['animation']) {\n        this._markerManager.updateAnimation(this);\n      }\n      // tslint:enable: no-string-literal\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n      return this._fitBoundsDetails$.asObservable();\n    }\n    _updateFitBoundsDetails() {\n      this._fitBoundsDetails$.next({\n        latLng: {\n          lat: this.latitude,\n          lng: this.longitude\n        }\n      });\n    }\n    _addEventListeners() {\n      const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n        if (this.openInfoWindow) {\n          this.infoWindow.forEach(infoWindow => infoWindow.open());\n        }\n        this.markerClick.emit(this);\n      });\n      this._observableSubscriptions.push(cs);\n      const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n        this.markerDblClick.emit(null);\n      });\n      this._observableSubscriptions.push(dcs);\n      const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n        this.markerRightClick.emit(null);\n      });\n      this._observableSubscriptions.push(rc);\n      const ds = this._markerManager.createEventObservable('dragstart', this).subscribe(e => this.dragStart.emit(e));\n      this._observableSubscriptions.push(ds);\n      const d = this._markerManager.createEventObservable('drag', this).subscribe(e => this.drag.emit(e));\n      this._observableSubscriptions.push(d);\n      const de = this._markerManager.createEventObservable('dragend', this).subscribe(e => this.dragEnd.emit(e));\n      this._observableSubscriptions.push(de);\n      const mover = this._markerManager.createEventObservable('mouseover', this).subscribe(e => this.mouseOver.emit(e));\n      this._observableSubscriptions.push(mover);\n      const mout = this._markerManager.createEventObservable('mouseout', this).subscribe(e => this.mouseOut.emit(e));\n      this._observableSubscriptions.push(mout);\n      const anChng = this._markerManager.createEventObservable('animation_changed', this).subscribe(() => {\n        this.animationChange.emit(this.animation);\n      });\n      this._observableSubscriptions.push(anChng);\n    }\n    /** @internal */\n    id() {\n      return this._id;\n    }\n    /** @internal */\n    toString() {\n      return 'AgmMarker-' + this._id.toString();\n    }\n    /** @internal */\n    ngOnDestroy() {\n      this._markerManager.deleteMarker(this);\n      // unsubscribe all registered observable subscriptions\n      this._observableSubscriptions.forEach(s => s.unsubscribe());\n    }\n  }\n  AgmMarker.ɵfac = function AgmMarker_Factory(t) {\n    return new (t || AgmMarker)(ɵngcc0.ɵɵdirectiveInject(MarkerManager));\n  };\n  AgmMarker.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmMarker,\n    selectors: [[\"agm-marker\"]],\n    contentQueries: function AgmMarker_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmInfoWindow, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infoWindow = _t);\n      }\n    },\n    inputs: {\n      draggable: [\"markerDraggable\", \"draggable\"],\n      visible: \"visible\",\n      openInfoWindow: \"openInfoWindow\",\n      opacity: \"opacity\",\n      zIndex: \"zIndex\",\n      clickable: [\"markerClickable\", \"clickable\"],\n      latitude: \"latitude\",\n      longitude: \"longitude\",\n      title: \"title\",\n      label: \"label\",\n      iconUrl: \"iconUrl\",\n      animation: \"animation\"\n    },\n    outputs: {\n      animationChange: \"animationChange\",\n      markerClick: \"markerClick\",\n      markerDblClick: \"markerDblClick\",\n      markerRightClick: \"markerRightClick\",\n      dragStart: \"dragStart\",\n      drag: \"drag\",\n      dragEnd: \"dragEnd\",\n      mouseOver: \"mouseOver\",\n      mouseOut: \"mouseOut\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: FitBoundsAccessor,\n      useExisting: forwardRef(() => AgmMarker)\n    }]), ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return AgmMarker;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: LatLngLiteral[] = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: LatLngLiteral[][] = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nlet AgmPolygon = /*#__PURE__*/(() => {\n  class AgmPolygon {\n    constructor(_polygonManager) {\n      this._polygonManager = _polygonManager;\n      /**\n       * Indicates whether this Polygon handles mouse events. Defaults to true.\n       */\n      this.clickable = true;\n      /**\n       * If set to true, the user can drag this shape over the map. The geodesic\n       * property defines the mode of dragging. Defaults to false.\n       */\n      // tslint:disable-next-line:no-input-rename\n      this.draggable = false;\n      /**\n       * If set to true, the user can edit this shape by dragging the control\n       * points shown at the vertices and on each segment. Defaults to false.\n       */\n      this.editable = false;\n      /**\n       * When true, edges of the polygon are interpreted as geodesic and will\n       * follow the curvature of the Earth. When false, edges of the polygon are\n       * rendered as straight lines in screen space. Note that the shape of a\n       * geodesic polygon may appear to change when dragged, as the dimensions\n       * are maintained relative to the surface of the earth. Defaults to false.\n       */\n      this.geodesic = false;\n      /**\n       * The ordered sequence of coordinates that designates a closed loop.\n       * Unlike polylines, a polygon may consist of one or more paths.\n       *  As a result, the paths property may specify one or more arrays of\n       * LatLng coordinates. Paths are closed automatically; do not repeat the\n       * first vertex of the path as the last vertex. Simple polygons may be\n       * defined using a single array of LatLngs. More complex polygons may\n       * specify an array of arrays. Any simple arrays are converted into Arrays.\n       * Inserting or removing LatLngs from the Array will automatically update\n       * the polygon on the map.\n       */\n      this.paths = [];\n      /**\n       * This event is fired when the DOM click event is fired on the Polygon.\n       */\n      this.polyClick = new EventEmitter();\n      /**\n       * This event is fired when the DOM dblclick event is fired on the Polygon.\n       */\n      this.polyDblClick = new EventEmitter();\n      /**\n       * This event is repeatedly fired while the user drags the polygon.\n       */\n      this.polyDrag = new EventEmitter();\n      /**\n       * This event is fired when the user stops dragging the polygon.\n       */\n      this.polyDragEnd = new EventEmitter();\n      /**\n       * This event is fired when the user starts dragging the polygon.\n       */\n      this.polyDragStart = new EventEmitter();\n      /**\n       * This event is fired when the DOM mousedown event is fired on the Polygon.\n       */\n      this.polyMouseDown = new EventEmitter();\n      /**\n       * This event is fired when the DOM mousemove event is fired on the Polygon.\n       */\n      this.polyMouseMove = new EventEmitter();\n      /**\n       * This event is fired on Polygon mouseout.\n       */\n      this.polyMouseOut = new EventEmitter();\n      /**\n       * This event is fired on Polygon mouseover.\n       */\n      this.polyMouseOver = new EventEmitter();\n      /**\n       * This event is fired whe the DOM mouseup event is fired on the Polygon\n       */\n      this.polyMouseUp = new EventEmitter();\n      /**\n       * This event is fired when the Polygon is right-clicked on.\n       */\n      this.polyRightClick = new EventEmitter();\n      /**\n       * This event is fired after Polygon first path changes.\n       */\n      this.polyPathsChange = new EventEmitter();\n      this._polygonAddedToManager = false;\n      this._subscriptions = [];\n    }\n    /** @internal */\n    ngAfterContentInit() {\n      if (!this._polygonAddedToManager) {\n        this._init();\n      }\n    }\n    ngOnChanges(changes) {\n      if (!this._polygonAddedToManager) {\n        this._init();\n        return;\n      }\n      this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    }\n    _init() {\n      this._polygonManager.addPolygon(this);\n      this._polygonAddedToManager = true;\n      this._addEventListeners();\n    }\n    _addEventListeners() {\n      const handlers = [{\n        name: 'click',\n        handler: ev => this.polyClick.emit(ev)\n      }, {\n        name: 'dblclick',\n        handler: ev => this.polyDblClick.emit(ev)\n      }, {\n        name: 'drag',\n        handler: ev => this.polyDrag.emit(ev)\n      }, {\n        name: 'dragend',\n        handler: ev => this.polyDragEnd.emit(ev)\n      }, {\n        name: 'dragstart',\n        handler: ev => this.polyDragStart.emit(ev)\n      }, {\n        name: 'mousedown',\n        handler: ev => this.polyMouseDown.emit(ev)\n      }, {\n        name: 'mousemove',\n        handler: ev => this.polyMouseMove.emit(ev)\n      }, {\n        name: 'mouseout',\n        handler: ev => this.polyMouseOut.emit(ev)\n      }, {\n        name: 'mouseover',\n        handler: ev => this.polyMouseOver.emit(ev)\n      }, {\n        name: 'mouseup',\n        handler: ev => this.polyMouseUp.emit(ev)\n      }, {\n        name: 'rightclick',\n        handler: ev => this.polyRightClick.emit(ev)\n      }];\n      handlers.forEach(obj => {\n        const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n        this._subscriptions.push(os);\n      });\n      this._polygonManager.createPathEventObservable(this).then(paths$ => {\n        const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n        this._subscriptions.push(os);\n      });\n    }\n    _updatePolygonOptions(changes) {\n      return Object.keys(changes).filter(k => AgmPolygon._polygonOptionsAttributes.indexOf(k) !== -1).reduce((obj, k) => {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n    }\n    /** @internal */\n    id() {\n      return this._id;\n    }\n    /** @internal */\n    ngOnDestroy() {\n      this._polygonManager.deletePolygon(this);\n      // unsubscribe all registered observable subscriptions\n      this._subscriptions.forEach(s => s.unsubscribe());\n    }\n    getPath() {\n      return this._polygonManager.getPath(this);\n    }\n    getPaths() {\n      return this._polygonManager.getPaths(this);\n    }\n  }\n  AgmPolygon.ɵfac = function AgmPolygon_Factory(t) {\n    return new (t || AgmPolygon)(ɵngcc0.ɵɵdirectiveInject(PolygonManager));\n  };\n  AgmPolygon.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmPolygon,\n    selectors: [[\"agm-polygon\"]],\n    inputs: {\n      clickable: \"clickable\",\n      draggable: [\"polyDraggable\", \"draggable\"],\n      editable: \"editable\",\n      geodesic: \"geodesic\",\n      paths: \"paths\",\n      fillColor: \"fillColor\",\n      fillOpacity: \"fillOpacity\",\n      strokeColor: \"strokeColor\",\n      strokeOpacity: \"strokeOpacity\",\n      strokeWeight: \"strokeWeight\",\n      visible: \"visible\",\n      zIndex: \"zIndex\"\n    },\n    outputs: {\n      polyClick: \"polyClick\",\n      polyDblClick: \"polyDblClick\",\n      polyDrag: \"polyDrag\",\n      polyDragEnd: \"polyDragEnd\",\n      polyDragStart: \"polyDragStart\",\n      polyMouseDown: \"polyMouseDown\",\n      polyMouseMove: \"polyMouseMove\",\n      polyMouseOut: \"polyMouseOut\",\n      polyMouseOver: \"polyMouseOver\",\n      polyMouseUp: \"polyMouseUp\",\n      polyRightClick: \"polyRightClick\",\n      polyPathsChange: \"polyPathsChange\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  AgmPolygon._polygonOptionsAttributes = ['clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map', 'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable', 'editable', 'visible'];\n  return AgmPolygon;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n */\nlet AgmPolylineIcon = /*#__PURE__*/(() => {\n  class AgmPolylineIcon {\n    ngOnInit() {\n      if (this.path == null) {\n        throw new Error('Icon Sequence path is required');\n      }\n    }\n  }\n  AgmPolylineIcon.ɵfac = function AgmPolylineIcon_Factory(t) {\n    return new (t || AgmPolylineIcon)();\n  };\n  AgmPolylineIcon.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmPolylineIcon,\n    selectors: [[\"agm-icon-sequence\"]],\n    inputs: {\n      fixedRotation: \"fixedRotation\",\n      offset: \"offset\",\n      repeat: \"repeat\",\n      anchorX: \"anchorX\",\n      anchorY: \"anchorY\",\n      fillColor: \"fillColor\",\n      fillOpacity: \"fillOpacity\",\n      path: \"path\",\n      rotation: \"rotation\",\n      scale: \"scale\",\n      strokeColor: \"strokeColor\",\n      strokeOpacity: \"strokeOpacity\",\n      strokeWeight: \"strokeWeight\"\n    }\n  });\n  return AgmPolylineIcon;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\nlet AgmPolylinePoint = /*#__PURE__*/(() => {\n  class AgmPolylinePoint {\n    constructor() {\n      /**\n       * This event emitter gets emitted when the position of the point changed.\n       */\n      this.positionChanged = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n      // tslint:disable: no-string-literal\n      if (changes['latitude'] || changes['longitude']) {\n        this.positionChanged.emit({\n          lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n          lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude\n        });\n      }\n      // tslint:enable: no-string-literal\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n      return this.positionChanged.pipe(startWith({\n        lat: this.latitude,\n        lng: this.longitude\n      }), map(position => ({\n        latLng: position\n      })));\n    }\n  }\n  AgmPolylinePoint.ɵfac = function AgmPolylinePoint_Factory(t) {\n    return new (t || AgmPolylinePoint)();\n  };\n  AgmPolylinePoint.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmPolylinePoint,\n    selectors: [[\"agm-polyline-point\"]],\n    inputs: {\n      latitude: \"latitude\",\n      longitude: \"longitude\"\n    },\n    outputs: {\n      positionChanged: \"positionChanged\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: FitBoundsAccessor,\n      useExisting: forwardRef(() => AgmPolylinePoint)\n    }]), ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return AgmPolylinePoint;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmPolyline = /*#__PURE__*/(() => {\n  class AgmPolyline {\n    constructor(_polylineManager) {\n      this._polylineManager = _polylineManager;\n      /**\n       * Indicates whether this Polyline handles mouse events. Defaults to true.\n       */\n      this.clickable = true;\n      /**\n       * If set to true, the user can drag this shape over the map. The geodesic property defines the\n       * mode of dragging. Defaults to false.\n       */\n      // tslint:disable-next-line:no-input-rename\n      this.draggable = false;\n      /**\n       * If set to true, the user can edit this shape by dragging the control points shown at the\n       * vertices and on each segment. Defaults to false.\n       */\n      this.editable = false;\n      /**\n       * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n       * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n       * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n       * are maintained relative to the surface of the earth. Defaults to false.\n       */\n      this.geodesic = false;\n      /**\n       * Whether this polyline is visible on the map. Defaults to true.\n       */\n      this.visible = true;\n      /**\n       * This event is fired when the DOM click event is fired on the Polyline.\n       */\n      this.lineClick = new EventEmitter();\n      /**\n       * This event is fired when the DOM dblclick event is fired on the Polyline.\n       */\n      this.lineDblClick = new EventEmitter();\n      /**\n       * This event is repeatedly fired while the user drags the polyline.\n       */\n      this.lineDrag = new EventEmitter();\n      /**\n       * This event is fired when the user stops dragging the polyline.\n       */\n      this.lineDragEnd = new EventEmitter();\n      /**\n       * This event is fired when the user starts dragging the polyline.\n       */\n      this.lineDragStart = new EventEmitter();\n      /**\n       * This event is fired when the DOM mousedown event is fired on the Polyline.\n       */\n      this.lineMouseDown = new EventEmitter();\n      /**\n       * This event is fired when the DOM mousemove event is fired on the Polyline.\n       */\n      this.lineMouseMove = new EventEmitter();\n      /**\n       * This event is fired on Polyline mouseout.\n       */\n      this.lineMouseOut = new EventEmitter();\n      /**\n       * This event is fired on Polyline mouseover.\n       */\n      this.lineMouseOver = new EventEmitter();\n      /**\n       * This event is fired whe the DOM mouseup event is fired on the Polyline\n       */\n      this.lineMouseUp = new EventEmitter();\n      /**\n       * This event is fired when the Polyline is right-clicked on.\n       */\n      this.lineRightClick = new EventEmitter();\n      /**\n       * This event is fired after Polyline's path changes.\n       */\n      this.polyPathChange = new EventEmitter();\n      this._polylineAddedToManager = false;\n      this._subscriptions = [];\n      this._id = (polylineId++).toString();\n    }\n    /** @internal */\n    ngAfterContentInit() {\n      if (this.points.length) {\n        this.points.forEach(point => {\n          const s = point.positionChanged.subscribe(() => {\n            this._polylineManager.updatePolylinePoints(this);\n          });\n          this._subscriptions.push(s);\n        });\n      }\n      if (!this._polylineAddedToManager) {\n        this._init();\n      }\n      const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n      this._subscriptions.push(pointSub);\n      this._polylineManager.updatePolylinePoints(this);\n      const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n      this._subscriptions.push(iconSub);\n    }\n    ngOnChanges(changes) {\n      if (!this._polylineAddedToManager) {\n        this._init();\n        return;\n      }\n      const options = {};\n      const optionKeys = Object.keys(changes).filter(k => AgmPolyline._polylineOptionsAttributes.indexOf(k) !== -1);\n      optionKeys.forEach(k => options[k] = changes[k].currentValue);\n      this._polylineManager.setPolylineOptions(this, options);\n    }\n    getPath() {\n      return this._polylineManager.getPath(this);\n    }\n    _init() {\n      this._polylineManager.addPolyline(this);\n      this._polylineAddedToManager = true;\n      this._addEventListeners();\n    }\n    _addEventListeners() {\n      const handlers = [{\n        name: 'click',\n        handler: ev => this.lineClick.emit(ev)\n      }, {\n        name: 'dblclick',\n        handler: ev => this.lineDblClick.emit(ev)\n      }, {\n        name: 'drag',\n        handler: ev => this.lineDrag.emit(ev)\n      }, {\n        name: 'dragend',\n        handler: ev => this.lineDragEnd.emit(ev)\n      }, {\n        name: 'dragstart',\n        handler: ev => this.lineDragStart.emit(ev)\n      }, {\n        name: 'mousedown',\n        handler: ev => this.lineMouseDown.emit(ev)\n      }, {\n        name: 'mousemove',\n        handler: ev => this.lineMouseMove.emit(ev)\n      }, {\n        name: 'mouseout',\n        handler: ev => this.lineMouseOut.emit(ev)\n      }, {\n        name: 'mouseover',\n        handler: ev => this.lineMouseOver.emit(ev)\n      }, {\n        name: 'mouseup',\n        handler: ev => this.lineMouseUp.emit(ev)\n      }, {\n        name: 'rightclick',\n        handler: ev => this.lineRightClick.emit(ev)\n      }];\n      handlers.forEach(obj => {\n        const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n        this._subscriptions.push(os);\n      });\n      this._polylineManager.createPathEventObservable(this).then(ob$ => {\n        const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n        this._subscriptions.push(os);\n      });\n    }\n    /** @internal */\n    _getPoints() {\n      if (this.points) {\n        return this.points.toArray();\n      }\n      return [];\n    }\n    _getIcons() {\n      if (this.iconSequences) {\n        return this.iconSequences.toArray();\n      }\n      return [];\n    }\n    /** @internal */\n    id() {\n      return this._id;\n    }\n    /** @internal */\n    ngOnDestroy() {\n      this._polylineManager.deletePolyline(this);\n      // unsubscribe all registered observable subscriptions\n      this._subscriptions.forEach(s => s.unsubscribe());\n    }\n  }\n  AgmPolyline.ɵfac = function AgmPolyline_Factory(t) {\n    return new (t || AgmPolyline)(ɵngcc0.ɵɵdirectiveInject(PolylineManager));\n  };\n  AgmPolyline.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmPolyline,\n    selectors: [[\"agm-polyline\"]],\n    contentQueries: function AgmPolyline_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylinePoint, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylineIcon, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.points = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.iconSequences = _t);\n      }\n    },\n    inputs: {\n      clickable: \"clickable\",\n      draggable: [\"polylineDraggable\", \"draggable\"],\n      editable: \"editable\",\n      geodesic: \"geodesic\",\n      visible: \"visible\",\n      strokeColor: \"strokeColor\",\n      strokeOpacity: \"strokeOpacity\",\n      strokeWeight: \"strokeWeight\",\n      zIndex: \"zIndex\"\n    },\n    outputs: {\n      lineClick: \"lineClick\",\n      lineDblClick: \"lineDblClick\",\n      lineDrag: \"lineDrag\",\n      lineDragEnd: \"lineDragEnd\",\n      lineDragStart: \"lineDragStart\",\n      lineMouseDown: \"lineMouseDown\",\n      lineMouseMove: \"lineMouseMove\",\n      lineMouseOut: \"lineMouseOut\",\n      lineMouseOver: \"lineMouseOver\",\n      lineMouseUp: \"lineMouseUp\",\n      lineRightClick: \"lineRightClick\",\n      polyPathChange: \"polyPathChange\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  AgmPolyline._polylineOptionsAttributes = ['draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'zIndex'];\n  return AgmPolyline;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AgmRectangle = /*#__PURE__*/(() => {\n  class AgmRectangle {\n    constructor(_manager) {\n      this._manager = _manager;\n      /**\n       * Indicates whether this Rectangle handles mouse events. Defaults to true.\n       */\n      this.clickable = true;\n      /**\n       * If set to true, the user can drag this rectangle over the map. Defaults to false.\n       */\n      // tslint:disable-next-line:no-input-rename\n      this.draggable = false;\n      /**\n       * If set to true, the user can edit this rectangle by dragging the control points shown at\n       * the center and around the circumference of the rectangle. Defaults to false.\n       */\n      this.editable = false;\n      /**\n       * The stroke position. Defaults to CENTER.\n       * This property is not supported on Internet Explorer 8 and earlier.\n       */\n      this.strokePosition = 'CENTER';\n      /**\n       * The stroke width in pixels.\n       */\n      this.strokeWeight = 0;\n      /**\n       * Whether this rectangle is visible on the map. Defaults to true.\n       */\n      this.visible = true;\n      /**\n       * This event is fired when the rectangle's is changed.\n       */\n      this.boundsChange = new EventEmitter();\n      /**\n       * This event emitter gets emitted when the user clicks on the rectangle.\n       */\n      this.rectangleClick = new EventEmitter();\n      /**\n       * This event emitter gets emitted when the user clicks on the rectangle.\n       */\n      this.rectangleDblClick = new EventEmitter();\n      /**\n       * This event is repeatedly fired while the user drags the rectangle.\n       */\n      // tslint:disable-next-line: no-output-native\n      this.drag = new EventEmitter();\n      /**\n       * This event is fired when the user stops dragging the rectangle.\n       */\n      this.dragEnd = new EventEmitter();\n      /**\n       * This event is fired when the user starts dragging the rectangle.\n       */\n      this.dragStart = new EventEmitter();\n      /**\n       * This event is fired when the DOM mousedown event is fired on the rectangle.\n       */\n      this.mouseDown = new EventEmitter();\n      /**\n       * This event is fired when the DOM mousemove event is fired on the rectangle.\n       */\n      this.mouseMove = new EventEmitter();\n      /**\n       * This event is fired on rectangle mouseout.\n       */\n      this.mouseOut = new EventEmitter();\n      /**\n       * This event is fired on rectangle mouseover.\n       */\n      this.mouseOver = new EventEmitter();\n      /**\n       * This event is fired when the DOM mouseup event is fired on the rectangle.\n       */\n      this.mouseUp = new EventEmitter();\n      /**\n       * This event is fired when the rectangle is right-clicked on.\n       */\n      this.rightClick = new EventEmitter();\n      this._rectangleAddedToManager = false;\n      this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n      this._manager.addRectangle(this);\n      this._rectangleAddedToManager = true;\n      this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n      if (!this._rectangleAddedToManager) {\n        return;\n      }\n      // tslint:disable: no-string-literal\n      if (changes['north'] || changes['east'] || changes['south'] || changes['west']) {\n        this._manager.setBounds(this);\n      }\n      if (changes['editable']) {\n        this._manager.setEditable(this);\n      }\n      if (changes['draggable']) {\n        this._manager.setDraggable(this);\n      }\n      if (changes['visible']) {\n        this._manager.setVisible(this);\n      }\n      // tslint:enable: no-string-literal\n      this._updateRectangleOptionsChanges(changes);\n    }\n    _updateRectangleOptionsChanges(changes) {\n      const options = {};\n      const optionKeys = Object.keys(changes).filter(k => AgmRectangle._mapOptions.indexOf(k) !== -1);\n      optionKeys.forEach(k => {\n        options[k] = changes[k].currentValue;\n      });\n      if (optionKeys.length > 0) {\n        this._manager.setOptions(this, options);\n      }\n    }\n    _registerEventListeners() {\n      const events = new Map();\n      events.set('bounds_changed', this.boundsChange);\n      events.set('click', this.rectangleClick);\n      events.set('dblclick', this.rectangleDblClick);\n      events.set('drag', this.drag);\n      events.set('dragend', this.dragEnd);\n      events.set('dragStart', this.dragStart);\n      events.set('mousedown', this.mouseDown);\n      events.set('mousemove', this.mouseMove);\n      events.set('mouseout', this.mouseOut);\n      events.set('mouseover', this.mouseOver);\n      events.set('mouseup', this.mouseUp);\n      events.set('rightclick', this.rightClick);\n      events.forEach((eventEmitter, eventName) => {\n        this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe(value => {\n          switch (eventName) {\n            case 'bounds_changed':\n              this._manager.getBounds(this).then(bounds => eventEmitter.emit({\n                north: bounds.getNorthEast().lat(),\n                east: bounds.getNorthEast().lng(),\n                south: bounds.getSouthWest().lat(),\n                west: bounds.getSouthWest().lng()\n              }));\n              break;\n            default:\n              eventEmitter.emit(value);\n          }\n        }));\n      });\n    }\n    /** @internal */\n    ngOnDestroy() {\n      this._eventSubscriptions.forEach(s => s.unsubscribe());\n      this._eventSubscriptions = null;\n      this._manager.removeRectangle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Rectangle.\n     */\n    getBounds() {\n      return this._manager.getBounds(this);\n    }\n  }\n  AgmRectangle.ɵfac = function AgmRectangle_Factory(t) {\n    return new (t || AgmRectangle)(ɵngcc0.ɵɵdirectiveInject(RectangleManager));\n  };\n  AgmRectangle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmRectangle,\n    selectors: [[\"agm-rectangle\"]],\n    inputs: {\n      clickable: \"clickable\",\n      draggable: [\"rectangleDraggable\", \"draggable\"],\n      editable: \"editable\",\n      strokePosition: \"strokePosition\",\n      strokeWeight: \"strokeWeight\",\n      visible: \"visible\",\n      north: \"north\",\n      east: \"east\",\n      south: \"south\",\n      west: \"west\",\n      fillColor: \"fillColor\",\n      fillOpacity: \"fillOpacity\",\n      strokeColor: \"strokeColor\",\n      strokeOpacity: \"strokeOpacity\",\n      zIndex: \"zIndex\"\n    },\n    outputs: {\n      boundsChange: \"boundsChange\",\n      rectangleClick: \"rectangleClick\",\n      rectangleDblClick: \"rectangleDblClick\",\n      drag: \"drag\",\n      dragEnd: \"dragEnd\",\n      dragStart: \"dragStart\",\n      mouseDown: \"mouseDown\",\n      mouseMove: \"mouseMove\",\n      mouseOut: \"mouseOut\",\n      mouseOver: \"mouseOver\",\n      mouseUp: \"mouseUp\",\n      rightClick: \"rightClick\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  AgmRectangle._mapOptions = ['fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'clickable'];\n  return AgmRectangle;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\nlet AgmTransitLayer = /*#__PURE__*/(() => {\n  class AgmTransitLayer {\n    constructor(_manager) {\n      this._manager = _manager;\n      this._addedToManager = false;\n      this._id = (layerId$3++).toString();\n      /**\n       * Hide/show transit layer\n       */\n      this.visible = true;\n    }\n    ngOnInit() {\n      if (this._addedToManager) {\n        return;\n      }\n      this._manager.addTransitLayer(this);\n      this._addedToManager = true;\n    }\n    /** @internal */\n    id() {\n      return this._id;\n    }\n    /** @internal */\n    toString() {\n      return `AgmTransitLayer-${this._id.toString()}`;\n    }\n    /** @internal */\n    ngOnDestroy() {\n      this._manager.deleteLayer(this);\n    }\n  }\n  AgmTransitLayer.ɵfac = function AgmTransitLayer_Factory(t) {\n    return new (t || AgmTransitLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager));\n  };\n  AgmTransitLayer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AgmTransitLayer,\n    selectors: [[\"agm-transit-layer\"]],\n    inputs: {\n      visible: \"visible\"\n    }\n  });\n  return AgmTransitLayer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @internal\n */\nfunction coreDirectives() {\n  return [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nlet AgmCoreModule = /*#__PURE__*/(() => {\n  class AgmCoreModule {\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    static forRoot(lazyMapsAPILoaderConfig) {\n      return {\n        ngModule: AgmCoreModule,\n        providers: [...BROWSER_GLOBALS_PROVIDERS, {\n          provide: MapsAPILoader,\n          useClass: LazyMapsAPILoader\n        }, {\n          provide: LAZY_MAPS_API_CONFIG,\n          useValue: lazyMapsAPILoaderConfig\n        }]\n      };\n    }\n  }\n  AgmCoreModule.ɵfac = function AgmCoreModule_Factory(t) {\n    return new (t || AgmCoreModule)();\n  };\n  AgmCoreModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: AgmCoreModule\n  });\n  AgmCoreModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return AgmCoreModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AgmCoreModule, {\n    declarations: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl],\n    exports: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl]\n  });\n})();\n\n/*\n * Public API Surface of core\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl, CircleManager, DataLayerManager, FitBoundsAccessor, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, coreDirectives, FitBoundsService as ɵa, AgmMapControl as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe };","map":{"version":3,"names":["__awaiter","Injectable","NgZone","ɵɵdefineInjectable","ɵɵinject","InjectionToken","Optional","Inject","LOCALE_ID","Directive","Input","EventEmitter","Output","Self","Component","ElementRef","PLATFORM_ID","ContentChildren","QueryList","forwardRef","NgModule","Observable","BehaviorSubject","from","timer","ReplaySubject","bindCallback","of","throwError","fromEventPattern","merge","Subject","flatMap","sample","switchMap","map","shareReplay","multicast","startWith","skip","distinctUntilChanged","takeUntil","isPlatformServer","ɵngcc0","_c0","MapsAPILoader","ɵfac","MapsAPILoader_Factory","t","ɵprov","token","factory","ngDevMode","GoogleMapsAPIWrapper","constructor","_loader","_zone","_map","Promise","resolve","_mapResolver","createMap","el","mapOptions","runOutsideAngular","load","then","google","maps","Map","setMapOptions","options","m","setOptions","createMarker","addToMap","Marker","createInfoWindow","InfoWindow","createCircle","Circle","createRectangle","Rectangle","createPolyline","getNativeMap","line","Polyline","setMap","createPolygon","polygon","Polygon","createDataLayer","data","Data","createTransitLayer","newLayer","TransitLayer","createBicyclingLayer","BicyclingLayer","containsLocation","latLng","geometry","poly","subscribeToMapEvent","eventName","observer","addListener","run","next","arguments","clearInstanceListeners","event","setCenter","getZoom","getBounds","getMapTypeId","setZoom","zoom","getCenter","panTo","panBy","x","y","fitBounds","padding","panToBounds","triggerMapEvent","trigger","GoogleMapsAPIWrapper_Factory","CircleManager","_apiWrapper","_circles","addCircle","circle","set","center","lat","latitude","lng","longitude","clickable","draggable","editable","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokePosition","StrokePosition","strokeWeight","visible","zIndex","removeCircle","get","c","delete","actualParam","getRadius","setEditable","setDraggable","setVisible","setRadius","getNativeCircle","createEventObservable","listener","e","remove","CircleManager_Factory","DataLayerManager","_wrapper","_layers","addDataLayer","layer","style","d","geoJson","getDataFeatures","features","deleteDataLayer","l","updateGeoJson","forEach","feature","index","indexOf","splice","setDataOptions","setControlPosition","controlPosition","setControls","controls","setDrawingMode","drawingMode","setStyle","reject","addGeoJson","loadGeoJson","DataLayerManager_Factory","FitBoundsAccessor","FitBoundsService","loader","_boundsChangeSampleTime$","_includeInBounds$","bounds$","pipe","time","includeInBounds","_generateBounds","bounds","LatLngBounds","b","extend","addToBounds","id","_createIdentifier","value","has","boundsMap","removeFromBounds","changeFitBoundsChangeSampleTime","timeMs","getBounds$","FitBoundsService_Factory","AgmGeocoder","connectableGeocoder$","subscriber","_createGeocoder","connect","geocoder$","geocode","request","geocoder","_getGoogleResults","geocodeObservable","results","status","GeocoderStatus","OK","Geocoder","AgmGeocoder_Factory","providedIn","WindowRef","getNativeWindow","window","DocumentRef","getNativeDocument","document","BROWSER_GLOBALS_PROVIDERS","GoogleMapsScriptProtocol","LAZY_MAPS_API_CONFIG","LazyMapsAPILoader","config","w","localeId","_SCRIPT_ID","callbackName","_config","_windowRef","_documentRef","_scriptLoadingPromise","scriptOnPage","getElementById","_assignScriptLoadingPromise","script","createElement","type","async","defer","src","_getScriptSrc","body","appendChild","scriptElem","onerror","error","protocolType","protocol","HTTPS","AUTO","HTTP","hostAndPath","queryParams","v","apiVersion","callback","key","apiKey","client","clientId","channel","libraries","region","language","params","Object","keys","filter","k","Array","isArray","length","i","join","entry","LazyMapsAPILoader_Factory","MarkerManager","_mapsWrapper","_markers","convertAnimation","uiAnim","Animation","deleteMarker","markerDirective","markerPromise","marker","updateMarkerPosition","setPosition","updateTitle","setTitle","title","updateLabel","setLabel","label","updateDraggable","updateIcon","setIcon","iconUrl","updateOpacity","setOpacity","opacity","updateVisible","updateZIndex","setZIndex","updateClickable","setClickable","updateAnimation","setAnimation","animation","addMarker","position","icon","getNativeMarker","MarkerManager_Factory","InfoWindowManager","_markerManager","_infoWindows","deleteInfoWindow","infoWindow","iWindow","close","open","hostMarker","addInfoWindow","content","maxWidth","disableAutoPan","infoWindowPromise","InfoWindowManager_Factory","KmlLayerManager","addKmlLayer","KmlLayer","preserveViewport","screenOverlays","suppressInfoWindows","url","deleteKmlLayer","KmlLayerManager_Factory","LayerManager","addTransitLayer","addBicyclingLayer","deleteLayer","currentLayer","LayerManager_Factory","NoOpMapsAPILoader","Error","createMVCEventObservable","array","eventNames","handler","previous","apply","newArr","getArray","_handler","evListeners","evListener","MvcArrayMock","vals","listeners","remove_at","insert_at","set_at","clear","removeAt","getAt","getLength","insertAt","elem","pop","deleted","push","setAt","listenerArr","bindTo","changed","notify","setValues","unbind","unbindAll","PolygonManager","_polygons","addPolygon","path","polygonPromise","geodesic","paths","updatePolygon","setPaths","setPolygonOptions","deletePolygon","getPath","polygonDirective","getPaths","p","createPathEventObservable","agmPolygon","pathsChanges$","parentMVEvent","chMVC","chMVCEvent","pathIndex","retVal","subArr","toJSON","PolygonManager_Factory","PolylineManager","_polylines","_convertPoints","_getPoints","point","_convertPath","symbolPath","SymbolPath","_convertIcons","icons","_getIcons","agmIcon","fixedRotation","offset","repeat","anchor","Point","anchorX","anchorY","rotation","scale","entries","val","addPolyline","polylinePromise","updatePolylinePoints","setPath","updateIconSequences","setPolylineOptions","deletePolyline","getMVCPath","agmPolyline","polyline","mvcPath","PolylineManager_Factory","RectangleManager","_rectangles","addRectangle","rectangle","north","east","south","west","removeRectangle","r","actualStrokePosition","setBounds","subsrciber","RectangleManager_Factory","layerId","AgmBicyclingLayer","_manager","_addedToManager","_id","toString","ngOnInit","ngOnDestroy","AgmBicyclingLayer_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","inputs","AgmCircle","centerChange","circleClick","circleDblClick","drag","dragEnd","dragStart","mouseDown","mouseMove","mouseOut","mouseOver","mouseUp","radiusChange","rightClick","_circleAddedToManager","_eventSubscriptions","_registerEventListeners","ngOnChanges","changes","_updateCircleOptionsChanges","optionKeys","_mapOptions","currentValue","events","eventEmitter","subscribe","emit","s","unsubscribe","AgmCircle_Factory","outputs","ɵɵNgOnChangesFeature","layerId$1","AgmDataLayer","_subscriptions","layerClick","_addEventListeners","name","ev","obj","os","geoJsonChange","dataOptions","_dataOptionsAttributes","reduce","hasOwnProperty","AgmDataLayer_Factory","AgmFitBounds","_fitBoundsAccessor","_fitBoundsService","agmFitBounds","_destroyed$","_latestFitBoundsDetails","_updateBounds","getFitBoundsDetails$","details","newFitBoundsDetails","complete","AgmFitBounds_Factory","infoWindowId","AgmInfoWindow","_infoWindowManager","_el","isOpen","infoWindowClose","_infoWindowAddedToManager","nativeElement","querySelector","_updateOpenState","_setInfoWindowOptions","_infoWindowOptionsInputs","AgmInfoWindow_Factory","ɵcmp","ɵɵdefineComponent","ngContentSelectors","decls","vars","consts","template","AgmInfoWindow_Template","rf","ctx","ɵɵprojectionDef","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","encapsulation","layerId$2","AgmKmlLayer","defaultViewportChange","statusChange","_updatePolygonOptions","_kmlLayerOptions","AgmKmlLayer_Factory","AgmMapControl","AgmMapControl_Factory","AgmFullscreenControl","getOptions","fullscreenControl","fullscreenControlOptions","ControlPosition","ɵAgmFullscreenControl_BaseFactory","AgmFullscreenControl_Factory","ɵɵgetInheritedFactory","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","AgmMapTypeControl","mapTypeControl","mapTypeControlOptions","MapTypeControlStyle","mapTypeIds","mapTypeId","MapTypeId","ɵAgmMapTypeControl_BaseFactory","AgmMapTypeControl_Factory","AgmPanControl","panControl","panControlOptions","ɵAgmPanControl_BaseFactory","AgmPanControl_Factory","AgmRotateControl","rotateControl","rotateControlOptions","ɵAgmRotateControl_BaseFactory","AgmRotateControl_Factory","AgmScaleControl","scaleControl","ɵAgmScaleControl_BaseFactory","AgmScaleControl_Factory","AgmStreetViewControl","streetViewControl","streetViewControlOptions","ɵAgmStreetViewControl_BaseFactory","AgmStreetViewControl_Factory","AgmZoomControl","zoomControl","zoomControlOptions","ZoomControlStyle","ɵAgmZoomControl_BaseFactory","AgmZoomControl_Factory","AgmMap","_elem","_platformId","disableDoubleClickZoom","disableDefaultUI","scrollwheel","keyboardShortcuts","styles","usePanning","clickableIcons","showDefaultInfoWindow","gestureHandling","tilt","_observableSubscriptions","mapClick","mapRightClick","mapDblClick","boundsChange","mapTypeIdChange","idle","zoomChange","mapReady","tilesLoaded","ngAfterContentInit","container","_initMapInstance","minZoom","maxZoom","controlSize","backgroundColor","draggableCursor","draggingCursor","toLocaleLowerCase","restriction","_handleMapCenterChange","_handleMapZoomChange","_handleMapMouseEvents","_handleBoundsChange","_handleMapTypeIdChange","_handleTilesLoadedEvent","_handleIdleEvent","_handleControlChange","_fitBoundsSubscription","_updateMapOptionsChanges","_updatePosition","_mapOptionsAttributes","triggerResize","recenter","setTimeout","_fitBounds","_setCenter","newCenter","_subscribeToFitBoundsUpdates","fitBoundsPadding","_isLatLngBoundsLiteral","newBounds","union","undefined","z","emitter","placeId","stop","_setControls","mapControls","controlOptions","control","assign","AgmMap_Factory","contentQueries","AgmMap_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","AgmMap_Template","ɵɵelement","markerId","AgmMarker","openInfoWindow","animationChange","markerClick","markerDblClick","markerRightClick","_markerAddedToManger","_fitBoundsDetails$","handleInfoWindowUpdate","Number","_updateFitBoundsDetails","asObservable","cs","dcs","rc","ds","de","mover","mout","anChng","AgmMarker_Factory","AgmMarker_ContentQueries","AgmPolygon","_polygonManager","polyClick","polyDblClick","polyDrag","polyDragEnd","polyDragStart","polyMouseDown","polyMouseMove","polyMouseOut","polyMouseOver","polyMouseUp","polyRightClick","polyPathsChange","_polygonAddedToManager","_init","handlers","paths$","pathEvent","_polygonOptionsAttributes","AgmPolygon_Factory","AgmPolylineIcon","AgmPolylineIcon_Factory","AgmPolylinePoint","positionChanged","AgmPolylinePoint_Factory","polylineId","AgmPolyline","_polylineManager","lineClick","lineDblClick","lineDrag","lineDragEnd","lineDragStart","lineMouseDown","lineMouseMove","lineMouseOut","lineMouseOver","lineMouseUp","lineRightClick","polyPathChange","_polylineAddedToManager","points","pointSub","iconSub","iconSequences","_polylineOptionsAttributes","ob$","toArray","AgmPolyline_Factory","AgmPolyline_ContentQueries","AgmRectangle","rectangleClick","rectangleDblClick","_rectangleAddedToManager","_updateRectangleOptionsChanges","getNorthEast","getSouthWest","AgmRectangle_Factory","layerId$3","AgmTransitLayer","AgmTransitLayer_Factory","coreDirectives","AgmCoreModule","forRoot","lazyMapsAPILoaderConfig","ngModule","providers","useClass","useValue","AgmCoreModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","ɵa","ɵb","ɵc","ɵd","ɵe"],"sources":["/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/node_modules/@agm/core/__ivy_ngcc__/fesm2015/agm-core.js"],"sourcesContent":["import { __awaiter } from 'tslib';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, Inject, LOCALE_ID, Directive, Input, EventEmitter, Output, Self, Component, ElementRef, PLATFORM_ID, ContentChildren, QueryList, forwardRef, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, ReplaySubject, bindCallback, of, throwError, fromEventPattern, merge, Subject } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, multicast, startWith, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\"];\nclass MapsAPILoader {\n}\nMapsAPILoader.ɵfac = function MapsAPILoader_Factory(t) { return new (t || MapsAPILoader)(); };\nMapsAPILoader.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MapsAPILoader, factory: MapsAPILoader.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MapsAPILoader, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nclass GoogleMapsAPIWrapper {\n    constructor(_loader, _zone) {\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise((resolve) => { this._mapResolver = resolve; });\n    }\n    createMap(el, mapOptions) {\n        return this._zone.runOutsideAngular(() => {\n            return this._loader.load().then(() => {\n                const map = new google.maps.Map(el, mapOptions);\n                this._mapResolver(map);\n                return;\n            });\n        });\n    }\n    setMapOptions(options) {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((m) => { m.setOptions(options); });\n        });\n    }\n    /**\n     * Creates a google map marker with the map context\n     */\n    createMarker(options = {}, addToMap = true) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                if (addToMap) {\n                    options.map = map;\n                }\n                return new google.maps.Marker(options);\n            });\n        });\n    }\n    createInfoWindow(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(() => new google.maps.InfoWindow(options));\n        });\n    }\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    createCircle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                options.map = map;\n                return new google.maps.Circle(options);\n            });\n        });\n    }\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n    createRectangle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                options.map = map;\n                return new google.maps.Rectangle(options);\n            });\n        });\n    }\n    createPolyline(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                const line = new google.maps.Polyline(options);\n                line.setMap(map);\n                return line;\n            });\n        });\n    }\n    createPolygon(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                const polygon = new google.maps.Polygon(options);\n                polygon.setMap(map);\n                return polygon;\n            });\n        });\n    }\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n    createDataLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(m => {\n                const data = new google.maps.Data(options);\n                data.setMap(m);\n                return data;\n            });\n        });\n    }\n    /**\n     * Creates a TransitLayer instance for a map\n     * @returns a new transit layer object\n     */\n    createTransitLayer() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                const newLayer = new google.maps.TransitLayer();\n                newLayer.setMap(map);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Creates a BicyclingLayer instance for a map\n     * @returns a new bicycling layer object\n     */\n    createBicyclingLayer() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                const newLayer = new google.maps.BicyclingLayer();\n                newLayer.setMap(map);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    containsLocation(latLng, polygon) {\n        return this._map.then(() => google.maps.geometry.poly.containsLocation(latLng, polygon));\n    }\n    subscribeToMapEvent(eventName) {\n        return new Observable((observer) => {\n            this._map.then(m => m.addListener(eventName, () => this._zone.run(() => observer.next(arguments[0]))));\n        });\n    }\n    clearInstanceListeners() {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((map) => {\n                google.maps.event.clearInstanceListeners(map);\n            });\n        });\n    }\n    setCenter(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setCenter(latLng));\n        });\n    }\n    getZoom() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getZoom());\n        });\n    }\n    getBounds() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getBounds());\n        });\n    }\n    getMapTypeId() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getMapTypeId());\n        });\n    }\n    setZoom(zoom) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setZoom(zoom));\n        });\n    }\n    getCenter() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getCenter());\n        });\n    }\n    panTo(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panTo(latLng));\n        });\n    }\n    panBy(x, y) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panBy(x, y));\n        });\n    }\n    fitBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.fitBounds(latLng, padding));\n        });\n    }\n    panToBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panToBounds(latLng, padding));\n        });\n    }\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    getNativeMap() { return this._map; }\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    triggerMapEvent(eventName) {\n        return this._map.then((m) => google.maps.event.trigger(m, eventName));\n    }\n}\nGoogleMapsAPIWrapper.ɵfac = function GoogleMapsAPIWrapper_Factory(t) { return new (t || GoogleMapsAPIWrapper)(ɵngcc0.ɵɵinject(MapsAPILoader), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nGoogleMapsAPIWrapper.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: GoogleMapsAPIWrapper, factory: GoogleMapsAPIWrapper.ɵfac });\nGoogleMapsAPIWrapper.ctorParameters = () => [\n    { type: MapsAPILoader },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GoogleMapsAPIWrapper, [{\n        type: Injectable\n    }], function () { return [{ type: MapsAPILoader }, { type: ɵngcc0.NgZone }]; }, null); })();\n\nclass CircleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    addCircle(circle) {\n        this._apiWrapper.getNativeMap().then(() => this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: google.maps.StrokePosition[circle.strokePosition],\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex,\n        })));\n    }\n    /**\n     * Removes the given circle from the map.\n     */\n    removeCircle(circle) {\n        return this._circles.get(circle).then((c) => {\n            c.setMap(null);\n            this._circles.delete(circle);\n        });\n    }\n    setOptions(circle, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._circles.get(circle).then((c) => {\n                const actualParam = options.strokePosition;\n                options.strokePosition = google.maps.StrokePosition[actualParam];\n                c.setOptions(options);\n            });\n        });\n    }\n    getBounds(circle) {\n        return this._circles.get(circle).then((c) => c.getBounds());\n    }\n    getCenter(circle) {\n        return this._circles.get(circle).then((c) => c.getCenter());\n    }\n    getRadius(circle) {\n        return this._circles.get(circle).then((c) => c.getRadius());\n    }\n    setCenter(circle) {\n        return this._circles.get(circle).then(c => c.setCenter({ lat: circle.latitude, lng: circle.longitude }));\n    }\n    setEditable(circle) {\n        return this._circles.get(circle).then(c => c.setEditable(circle.editable));\n    }\n    setDraggable(circle) {\n        return this._circles.get(circle).then(c => c.setDraggable(circle.draggable));\n    }\n    setVisible(circle) {\n        return this._circles.get(circle).then(c => c.setVisible(circle.visible));\n    }\n    setRadius(circle) {\n        return this._circles.get(circle).then(c => c.setRadius(circle.radius));\n    }\n    getNativeCircle(circle) {\n        return this._circles.get(circle);\n    }\n    createEventObservable(eventName, circle) {\n        return new Observable((observer) => {\n            let listener = null;\n            this._circles.get(circle).then((c) => {\n                listener = c.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n}\nCircleManager.ɵfac = function CircleManager_Factory(t) { return new (t || CircleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nCircleManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: CircleManager, factory: CircleManager.ɵfac });\nCircleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CircleManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nclass DataLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    addDataLayer(layer) {\n        const newLayer = this._wrapper.createDataLayer({\n            style: layer.style,\n        })\n            .then(d => {\n            if (layer.geoJson) {\n                // NOTE: accessing \"features\" on google.maps.Data is undocumented\n                this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n            }\n            return d;\n        });\n        this._layers.set(layer, newLayer);\n    }\n    deleteDataLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    updateGeoJson(layer, geoJson) {\n        this._layers.get(layer).then(l => {\n            l.forEach(feature => {\n                l.remove(feature);\n                // NOTE: accessing \"features\" on google.maps.Data is undocumented\n                const index = l.features.indexOf(feature, 0);\n                if (index > -1) {\n                    l.features.splice(index, 1);\n                }\n            });\n            this.getDataFeatures(l, geoJson).then(features => l.features = features);\n        });\n    }\n    setDataOptions(layer, options) {\n        this._layers.get(layer).then(l => {\n            l.setControlPosition(options.controlPosition);\n            l.setControls(options.controls);\n            l.setDrawingMode(options.drawingMode);\n            l.setStyle(options.style);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((d) => {\n                d.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n    getDataFeatures(d, geoJson) {\n        return new Promise((resolve, reject) => {\n            if (typeof geoJson === 'object') {\n                try {\n                    const features = d.addGeoJson(geoJson);\n                    resolve(features);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            else if (typeof geoJson === 'string') {\n                d.loadGeoJson(geoJson, null, resolve);\n            }\n            else {\n                reject(`Impossible to extract features from geoJson: wrong argument type`);\n            }\n        });\n    }\n}\nDataLayerManager.ɵfac = function DataLayerManager_Factory(t) { return new (t || DataLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nDataLayerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DataLayerManager, factory: DataLayerManager.ɵfac });\nDataLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataLayerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nclass FitBoundsAccessor {\n}\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nclass FitBoundsService {\n    constructor(loader) {\n        this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n        this._includeInBounds$ = new BehaviorSubject(new Map());\n        this.bounds$ = from(loader.load()).pipe(flatMap(() => this._includeInBounds$), sample(this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time)))), map(includeInBounds => this._generateBounds(includeInBounds)), shareReplay(1));\n    }\n    _generateBounds(includeInBounds) {\n        const bounds = new google.maps.LatLngBounds();\n        includeInBounds.forEach(b => bounds.extend(b));\n        return bounds;\n    }\n    addToBounds(latLng) {\n        const id = this._createIdentifier(latLng);\n        if (this._includeInBounds$.value.has(id)) {\n            return;\n        }\n        const boundsMap = this._includeInBounds$.value;\n        boundsMap.set(id, latLng);\n        this._includeInBounds$.next(boundsMap);\n    }\n    removeFromBounds(latLng) {\n        const boundsMap = this._includeInBounds$.value;\n        boundsMap.delete(this._createIdentifier(latLng));\n        this._includeInBounds$.next(boundsMap);\n    }\n    changeFitBoundsChangeSampleTime(timeMs) {\n        this._boundsChangeSampleTime$.next(timeMs);\n    }\n    getBounds$() {\n        return this.bounds$;\n    }\n    _createIdentifier(latLng) {\n        return `${latLng.lat}+${latLng.lng}`;\n    }\n}\nFitBoundsService.ɵfac = function FitBoundsService_Factory(t) { return new (t || FitBoundsService)(ɵngcc0.ɵɵinject(MapsAPILoader)); };\nFitBoundsService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: FitBoundsService, factory: FitBoundsService.ɵfac });\nFitBoundsService.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FitBoundsService, [{\n        type: Injectable\n    }], function () { return [{ type: MapsAPILoader }]; }, null); })();\n\nclass AgmGeocoder {\n    constructor(loader) {\n        const connectableGeocoder$ = new Observable(subscriber => {\n            loader.load().then(() => subscriber.next());\n        })\n            .pipe(map(() => this._createGeocoder()), multicast(new ReplaySubject(1)));\n        connectableGeocoder$.connect(); // ignore the subscription\n        // since we will remain subscribed till application exits\n        this.geocoder$ = connectableGeocoder$;\n    }\n    geocode(request) {\n        return this.geocoder$.pipe(switchMap((geocoder) => this._getGoogleResults(geocoder, request)));\n    }\n    _getGoogleResults(geocoder, request) {\n        const geocodeObservable = bindCallback(geocoder.geocode);\n        return geocodeObservable(request).pipe(switchMap(([results, status]) => {\n            if (status === google.maps.GeocoderStatus.OK) {\n                return of(results);\n            }\n            return throwError(status);\n        }));\n    }\n    _createGeocoder() {\n        return new google.maps.Geocoder();\n    }\n}\nAgmGeocoder.ɵfac = function AgmGeocoder_Factory(t) { return new (t || AgmGeocoder)(ɵngcc0.ɵɵinject(MapsAPILoader)); };\nAgmGeocoder.ɵprov = ɵɵdefineInjectable({ factory: function AgmGeocoder_Factory() { return new AgmGeocoder(ɵɵinject(MapsAPILoader)); }, token: AgmGeocoder, providedIn: \"root\" });\nAgmGeocoder.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmGeocoder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MapsAPILoader }]; }, null); })();\n\nclass WindowRef {\n    getNativeWindow() { return window; }\n}\nclass DocumentRef {\n    getNativeDocument() { return document; }\n}\nconst BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\n\nvar GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nconst LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nclass LazyMapsAPILoader extends MapsAPILoader {\n    constructor(config = null, w, d, localeId) {\n        super();\n        this.localeId = localeId;\n        this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n        this.callbackName = `agmLazyMapsAPILoader`;\n        this._config = config || {};\n        this._windowRef = w;\n        this._documentRef = d;\n    }\n    load() {\n        const window = this._windowRef.getNativeWindow();\n        if (window.google && window.google.maps) {\n            // Google maps already loaded on the page.\n            return Promise.resolve();\n        }\n        if (this._scriptLoadingPromise) {\n            return this._scriptLoadingPromise;\n        }\n        // this can happen in HMR situations or Stackblitz.io editors.\n        const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n        if (scriptOnPage) {\n            this._assignScriptLoadingPromise(scriptOnPage);\n            return this._scriptLoadingPromise;\n        }\n        const script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.id = this._SCRIPT_ID;\n        script.src = this._getScriptSrc(this.callbackName);\n        this._assignScriptLoadingPromise(script);\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    }\n    _assignScriptLoadingPromise(scriptElem) {\n        this._scriptLoadingPromise = new Promise((resolve, reject) => {\n            this._windowRef.getNativeWindow()[this.callbackName] = () => {\n                resolve();\n            };\n            scriptElem.onerror = (error) => {\n                reject(error);\n            };\n        });\n    }\n    _getScriptSrc(callbackName) {\n        const protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n        let protocol;\n        switch (protocolType) {\n            case GoogleMapsScriptProtocol.AUTO:\n                protocol = '';\n                break;\n            case GoogleMapsScriptProtocol.HTTP:\n                protocol = 'http:';\n                break;\n            case GoogleMapsScriptProtocol.HTTPS:\n                protocol = 'https:';\n                break;\n        }\n        const hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n        const queryParams = {\n            v: this._config.apiVersion || 'quarterly',\n            callback: callbackName,\n            key: this._config.apiKey,\n            client: this._config.clientId,\n            channel: this._config.channel,\n            libraries: this._config.libraries,\n            region: this._config.region,\n            language: this._config.language || (this.localeId !== 'en-US' ? this.localeId : null),\n        };\n        const params = Object.keys(queryParams)\n            .filter((k) => queryParams[k] != null)\n            .filter((k) => {\n            // remove empty arrays\n            return !Array.isArray(queryParams[k]) ||\n                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n        })\n            .map((k) => {\n            // join arrays as comma seperated strings\n            const i = queryParams[k];\n            if (Array.isArray(i)) {\n                return { key: k, value: i.join(',') };\n            }\n            return { key: k, value: queryParams[k] };\n        })\n            .map((entry) => {\n            return `${entry.key}=${entry.value}`;\n        })\n            .join('&');\n        return `${protocol}//${hostAndPath}?${params}`;\n    }\n}\nLazyMapsAPILoader.ɵfac = function LazyMapsAPILoader_Factory(t) { return new (t || LazyMapsAPILoader)(ɵngcc0.ɵɵinject(LAZY_MAPS_API_CONFIG, 8), ɵngcc0.ɵɵinject(WindowRef), ɵngcc0.ɵɵinject(DocumentRef), ɵngcc0.ɵɵinject(LOCALE_ID)); };\nLazyMapsAPILoader.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LazyMapsAPILoader, factory: LazyMapsAPILoader.ɵfac });\nLazyMapsAPILoader.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LAZY_MAPS_API_CONFIG,] }] },\n    { type: WindowRef },\n    { type: DocumentRef },\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LazyMapsAPILoader, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LAZY_MAPS_API_CONFIG]\n            }] }, { type: WindowRef }, { type: DocumentRef }, { type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }]; }, null); })();\n\nclass MarkerManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    convertAnimation(uiAnim) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (uiAnim === null) {\n                return null;\n            }\n            else {\n                return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n            }\n        });\n    }\n    deleteMarker(markerDirective) {\n        const markerPromise = this._markers.get(markerDirective);\n        if (markerPromise == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return markerPromise.then((marker) => {\n            return this._zone.run(() => {\n                marker.setMap(null);\n                this._markers.delete(markerDirective);\n            });\n        });\n    }\n    updateMarkerPosition(marker) {\n        return this._markers.get(marker).then((m) => m.setPosition({ lat: marker.latitude, lng: marker.longitude }));\n    }\n    updateTitle(marker) {\n        return this._markers.get(marker).then((m) => m.setTitle(marker.title));\n    }\n    updateLabel(marker) {\n        return this._markers.get(marker).then((m) => { m.setLabel(marker.label); });\n    }\n    updateDraggable(marker) {\n        return this._markers.get(marker).then((m) => m.setDraggable(marker.draggable));\n    }\n    updateIcon(marker) {\n        return this._markers.get(marker).then((m) => m.setIcon(marker.iconUrl));\n    }\n    updateOpacity(marker) {\n        return this._markers.get(marker).then((m) => m.setOpacity(marker.opacity));\n    }\n    updateVisible(marker) {\n        return this._markers.get(marker).then((m) => m.setVisible(marker.visible));\n    }\n    updateZIndex(marker) {\n        return this._markers.get(marker).then((m) => m.setZIndex(marker.zIndex));\n    }\n    updateClickable(marker) {\n        return this._markers.get(marker).then((m) => m.setClickable(marker.clickable));\n    }\n    updateAnimation(marker) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const m = yield this._markers.get(marker);\n            m.setAnimation(yield this.convertAnimation(marker.animation));\n        });\n    }\n    addMarker(marker) {\n        const markerPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            return this._mapsWrapper.createMarker({\n                position: { lat: marker.latitude, lng: marker.longitude },\n                label: marker.label,\n                draggable: marker.draggable,\n                icon: marker.iconUrl,\n                opacity: marker.opacity,\n                visible: marker.visible,\n                zIndex: marker.zIndex,\n                title: marker.title,\n                clickable: marker.clickable,\n                animation: yield this.convertAnimation(marker.animation),\n            }).then(resolve);\n        }));\n        this._markers.set(marker, markerPromise);\n    }\n    getNativeMarker(marker) {\n        return this._markers.get(marker);\n    }\n    createEventObservable(eventName, marker) {\n        return new Observable(observer => {\n            this._markers.get(marker).then(m => m.addListener(eventName, e => this._zone.run(() => observer.next(e))));\n        });\n    }\n}\nMarkerManager.ɵfac = function MarkerManager_Factory(t) { return new (t || MarkerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nMarkerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MarkerManager, factory: MarkerManager.ɵfac });\nMarkerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MarkerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\nclass InfoWindowManager {\n    constructor(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    deleteInfoWindow(infoWindow) {\n        const iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then((i) => {\n            return this._zone.run(() => {\n                i.close();\n                this._infoWindows.delete(infoWindow);\n            });\n        });\n    }\n    setPosition(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setPosition({\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude,\n        }));\n    }\n    setZIndex(infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then((i) => i.setZIndex(infoWindow.zIndex));\n    }\n    open(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => {\n            if (infoWindow.hostMarker != null) {\n                return this._markerManager.getNativeMarker(infoWindow.hostMarker).then((marker) => {\n                    return this._mapsWrapper.getNativeMap().then((map) => w.open(map, marker));\n                });\n            }\n            return this._mapsWrapper.getNativeMap().then((map) => w.open(map));\n        });\n    }\n    close(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => w.close());\n    }\n    setOptions(infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setOptions(options));\n    }\n    addInfoWindow(infoWindow) {\n        const options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n            disableAutoPan: infoWindow.disableAutoPan,\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    }\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    createEventObservable(eventName, infoWindow) {\n        return new Observable((observer) => {\n            this._infoWindows.get(infoWindow).then((i) => {\n                i.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n}\nInfoWindowManager.ɵfac = function InfoWindowManager_Factory(t) { return new (t || InfoWindowManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(MarkerManager)); };\nInfoWindowManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: InfoWindowManager, factory: InfoWindowManager.ɵfac });\nInfoWindowManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone },\n    { type: MarkerManager }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InfoWindowManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }, { type: MarkerManager }]; }, null); })();\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nclass KmlLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    addKmlLayer(layer) {\n        const newLayer = this._wrapper.getNativeMap().then(m => {\n            return new google.maps.KmlLayer({\n                clickable: layer.clickable,\n                map: m,\n                preserveViewport: layer.preserveViewport,\n                screenOverlays: layer.screenOverlays,\n                suppressInfoWindows: layer.suppressInfoWindows,\n                url: layer.url,\n                zIndex: layer.zIndex,\n            });\n        });\n        this._layers.set(layer, newLayer);\n    }\n    setOptions(layer, options) {\n        this._layers.get(layer).then(l => l.setOptions(options));\n    }\n    deleteKmlLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((m) => {\n                m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n}\nKmlLayerManager.ɵfac = function KmlLayerManager_Factory(t) { return new (t || KmlLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nKmlLayerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: KmlLayerManager, factory: KmlLayerManager.ɵfac });\nKmlLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KmlLayerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\nclass LayerManager {\n    constructor(_wrapper) {\n        this._wrapper = _wrapper;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a transit layer to a map instance.\n     * @param layer - a TransitLayer object\n     * @param _options - TransitLayerOptions options\n     * @returns void\n     */\n    addTransitLayer(layer) {\n        const newLayer = this._wrapper.createTransitLayer();\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param layer - a bicycling layer object\n     * @param _options - BicyclingLayer options\n     * @returns void\n     */\n    addBicyclingLayer(layer) {\n        const newLayer = this._wrapper.createBicyclingLayer();\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Deletes a map layer\n     * @param layer - the layer to delete\n     */\n    deleteLayer(layer) {\n        return this._layers.get(layer).then(currentLayer => {\n            currentLayer.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n}\nLayerManager.ɵfac = function LayerManager_Factory(t) { return new (t || LayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper)); };\nLayerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LayerManager, factory: LayerManager.ɵfac });\nLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }]; }, null); })();\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nclass NoOpMapsAPILoader {\n    load() {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    }\n}\n\nfunction createMVCEventObservable(array) {\n    const eventNames = ['insert_at', 'remove_at', 'set_at'];\n    return fromEventPattern(handler => eventNames.map(eventName => array.addListener(eventName, (index, previous) => handler.apply(array, [{ newArr: array.getArray(), eventName, index, previous }]))), (_handler, evListeners) => evListeners.forEach(evListener => evListener.remove()));\n}\nclass MvcArrayMock {\n    constructor() {\n        this.vals = [];\n        this.listeners = {\n            remove_at: [],\n            insert_at: [],\n            set_at: [],\n        };\n    }\n    clear() {\n        for (let i = this.vals.length - 1; i >= 0; i--) {\n            this.removeAt(i);\n        }\n    }\n    getArray() {\n        return [...this.vals];\n    }\n    getAt(i) {\n        return this.vals[i];\n    }\n    getLength() {\n        return this.vals.length;\n    }\n    insertAt(i, elem) {\n        this.vals.splice(i, 0, elem);\n        this.listeners.insert_at.forEach(listener => listener(i));\n    }\n    pop() {\n        const deleted = this.vals.pop();\n        this.listeners.remove_at.forEach(listener => listener(this.vals.length, deleted));\n        return deleted;\n    }\n    push(elem) {\n        this.vals.push(elem);\n        this.listeners.insert_at.forEach(listener => listener(this.vals.length - 1));\n        return this.vals.length;\n    }\n    removeAt(i) {\n        const deleted = this.vals.splice(i, 1)[0];\n        this.listeners.remove_at.forEach(listener => listener(i, deleted));\n        return deleted;\n    }\n    setAt(i, elem) {\n        const deleted = this.vals[i];\n        this.vals[i] = elem;\n        this.listeners.set_at.forEach(listener => listener(i, deleted));\n    }\n    forEach(callback) {\n        this.vals.forEach(callback);\n    }\n    addListener(eventName, handler) {\n        const listenerArr = this.listeners[eventName];\n        listenerArr.push(handler);\n        return {\n            remove: () => {\n                listenerArr.splice(listenerArr.indexOf(handler), 1);\n            },\n        };\n    }\n    bindTo() { throw new Error('Not implemented'); }\n    changed() { throw new Error('Not implemented'); }\n    get() { throw new Error('Not implemented'); }\n    notify() { throw new Error('Not implemented'); }\n    set() { throw new Error('Not implemented'); }\n    setValues() { throw new Error('Not implemented'); }\n    unbind() { throw new Error('Not implemented'); }\n    unbindAll() { throw new Error('Not implemented'); }\n}\n\nclass PolygonManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    addPolygon(path) {\n        const polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    }\n    updatePolygon(polygon) {\n        const m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => this._zone.run(() => { l.setPaths(polygon.paths); }));\n    }\n    setPolygonOptions(path, options) {\n        return this._polygons.get(path).then((l) => { l.setOptions(options); });\n    }\n    deletePolygon(paths) {\n        const m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polygons.delete(paths);\n            });\n        });\n    }\n    getPath(polygonDirective) {\n        return this._polygons.get(polygonDirective)\n            .then((polygon) => polygon.getPath().getArray());\n    }\n    getPaths(polygonDirective) {\n        return this._polygons.get(polygonDirective)\n            .then((polygon) => polygon.getPaths().getArray().map((p) => p.getArray()));\n    }\n    createEventObservable(eventName, path) {\n        return new Observable((observer) => {\n            this._polygons.get(path).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(agmPolygon) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polygon = yield this._polygons.get(agmPolygon);\n            const paths = polygon.getPaths();\n            const pathsChanges$ = createMVCEventObservable(paths);\n            return pathsChanges$.pipe(startWith({ newArr: paths.getArray() }), // in order to subscribe to them all\n            switchMap(parentMVEvent => merge(... // rest parameter\n            parentMVEvent.newArr.map((chMVC, index) => createMVCEventObservable(chMVC)\n                .pipe(map(chMVCEvent => ({ parentMVEvent, chMVCEvent, pathIndex: index })))))\n                .pipe(// start the merged ob with an event signinifing change to parent\n            startWith({ parentMVEvent, chMVCEvent: null, pathIndex: null }))), skip(1), // skip the manually added event\n            map(({ parentMVEvent, chMVCEvent, pathIndex }) => {\n                let retVal;\n                if (!chMVCEvent) {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        eventName: parentMVEvent.eventName,\n                        index: parentMVEvent.index,\n                    };\n                    if (parentMVEvent.previous) {\n                        retVal.previous = parentMVEvent.previous.getArray();\n                    }\n                }\n                else {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        pathIndex,\n                        eventName: chMVCEvent.eventName,\n                        index: chMVCEvent.index,\n                    };\n                    if (chMVCEvent.previous) {\n                        retVal.previous = chMVCEvent.previous;\n                    }\n                }\n                return retVal;\n            }));\n        });\n    }\n}\nPolygonManager.ɵfac = function PolygonManager_Factory(t) { return new (t || PolygonManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nPolygonManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PolygonManager, factory: PolygonManager.ɵfac });\nPolygonManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PolygonManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\nclass PolylineManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    static _convertPoints(line) {\n        const path = line._getPoints().map((point) => {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    }\n    static _convertPath(path) {\n        const symbolPath = google.maps.SymbolPath[path];\n        if (typeof symbolPath === 'number') {\n            return symbolPath;\n        }\n        else {\n            return path;\n        }\n    }\n    static _convertIcons(line) {\n        const icons = line._getIcons().map(agmIcon => ({\n            fixedRotation: agmIcon.fixedRotation,\n            offset: agmIcon.offset,\n            repeat: agmIcon.repeat,\n            icon: {\n                anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n                fillColor: agmIcon.fillColor,\n                fillOpacity: agmIcon.fillOpacity,\n                path: PolylineManager._convertPath(agmIcon.path),\n                rotation: agmIcon.rotation,\n                scale: agmIcon.scale,\n                strokeColor: agmIcon.strokeColor,\n                strokeOpacity: agmIcon.strokeOpacity,\n                strokeWeight: agmIcon.strokeWeight,\n            },\n        }));\n        // prune undefineds;\n        icons.forEach(icon => {\n            Object.entries(icon).forEach(([key, val]) => {\n                if (typeof val === 'undefined') {\n                    delete icon[key];\n                }\n            });\n            if (typeof icon.icon.anchor.x === 'undefined' ||\n                typeof icon.icon.anchor.y === 'undefined') {\n                delete icon.icon.anchor;\n            }\n        });\n        return icons;\n    }\n    addPolyline(line) {\n        const polylinePromise = this._mapsWrapper.getNativeMap()\n            .then(() => [PolylineManager._convertPoints(line),\n            PolylineManager._convertIcons(line)])\n            .then(([path, icons]) => this._mapsWrapper.createPolyline({\n            clickable: line.clickable,\n            draggable: line.draggable,\n            editable: line.editable,\n            geodesic: line.geodesic,\n            strokeColor: line.strokeColor,\n            strokeOpacity: line.strokeOpacity,\n            strokeWeight: line.strokeWeight,\n            visible: line.visible,\n            zIndex: line.zIndex,\n            path,\n            icons,\n        }));\n        this._polylines.set(line, polylinePromise);\n    }\n    updatePolylinePoints(line) {\n        const path = PolylineManager._convertPoints(line);\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => this._zone.run(() => l.setPath(path)));\n    }\n    updateIconSequences(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._mapsWrapper.getNativeMap();\n            const icons = PolylineManager._convertIcons(line);\n            const m = this._polylines.get(line);\n            if (m == null) {\n                return;\n            }\n            return m.then(l => this._zone.run(() => l.setOptions({ icons })));\n        });\n    }\n    setPolylineOptions(line, options) {\n        return this._polylines.get(line).then((l) => { l.setOptions(options); });\n    }\n    deletePolyline(line) {\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polylines.delete(line);\n            });\n        });\n    }\n    getMVCPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polyline = yield this._polylines.get(agmPolyline);\n            return polyline.getPath();\n        });\n    }\n    getPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.getMVCPath(agmPolyline)).getArray();\n        });\n    }\n    createEventObservable(eventName, line) {\n        return new Observable((observer) => {\n            this._polylines.get(line).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const mvcPath = yield this.getMVCPath(line);\n            return createMVCEventObservable(mvcPath);\n        });\n    }\n}\nPolylineManager.ɵfac = function PolylineManager_Factory(t) { return new (t || PolylineManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nPolylineManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PolylineManager, factory: PolylineManager.ɵfac });\nPolylineManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PolylineManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\nclass RectangleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._rectangles = new Map();\n    }\n    addRectangle(rectangle) {\n        this._apiWrapper.getNativeMap().then(() => this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n            bounds: {\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            },\n            clickable: rectangle.clickable,\n            draggable: rectangle.draggable,\n            editable: rectangle.editable,\n            fillColor: rectangle.fillColor,\n            fillOpacity: rectangle.fillOpacity,\n            strokeColor: rectangle.strokeColor,\n            strokeOpacity: rectangle.strokeOpacity,\n            strokePosition: google.maps.StrokePosition[rectangle.strokePosition],\n            strokeWeight: rectangle.strokeWeight,\n            visible: rectangle.visible,\n            zIndex: rectangle.zIndex,\n        })));\n    }\n    /**\n     * Removes the given rectangle from the map.\n     */\n    removeRectangle(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            r.setMap(null);\n            this._rectangles.delete(rectangle);\n        });\n    }\n    setOptions(rectangle, options) {\n        return this._rectangles.get(rectangle).then((r) => {\n            const actualStrokePosition = options.strokePosition;\n            options.strokePosition = google.maps.StrokePosition[actualStrokePosition];\n            r.setOptions(options);\n        });\n    }\n    getBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => r.getBounds());\n    }\n    setBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setBounds({\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            });\n        });\n    }\n    setEditable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setEditable(rectangle.editable);\n        });\n    }\n    setDraggable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setDraggable(rectangle.draggable);\n        });\n    }\n    setVisible(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setVisible(rectangle.visible);\n        });\n    }\n    createEventObservable(eventName, rectangle) {\n        return new Observable((subsrciber) => {\n            let listener = null;\n            this._rectangles.get(rectangle).then((r) => {\n                listener = r.addListener(eventName, (e) => this._zone.run(() => subsrciber.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n}\nRectangleManager.ɵfac = function RectangleManager_Factory(t) { return new (t || RectangleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nRectangleManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: RectangleManager, factory: RectangleManager.ɵfac });\nRectangleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RectangleManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n\nlet layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\nclass AgmBicyclingLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        /**\n         * Hide/show bicycling layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addBicyclingLayer(this);\n        this._addedToManager = true;\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmBicyclingLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n}\nAgmBicyclingLayer.ɵfac = function AgmBicyclingLayer_Factory(t) { return new (t || AgmBicyclingLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager)); };\nAgmBicyclingLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmBicyclingLayer, selectors: [[\"agm-bicycling-layer\"]], inputs: { visible: \"visible\" } });\nAgmBicyclingLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\nAgmBicyclingLayer.propDecorators = {\n    visible: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmBicyclingLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-bicycling-layer'\n            }]\n    }], function () { return [{ type: LayerManager }]; }, { visible: [{\n            type: Input\n        }] }); })();\n\nclass AgmCircle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Circle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this circle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this circle by dragging the control points shown at\n         * the center and around the circumference of the circle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The radius in meters on the Earth's surface.\n         */\n        this.radius = 0;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this circle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the circle's center is changed.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the circle.\n         */\n        // tslint:disable-next-line: no-output-native\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the circle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the circle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the circle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the circle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on circle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on circle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the circle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the circle's radius is changed.\n         */\n        this.radiusChange = new EventEmitter();\n        /**\n         * This event is fired when the circle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._circleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addCircle(this);\n        this._circleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._circleAddedToManager) {\n            return;\n        }\n        // tslint:disable: no-string-literal\n        if (changes['latitude'] || changes['longitude']) {\n            this._manager.setCenter(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        if (changes['radius']) {\n            this._manager.setRadius(this);\n        }\n        // tslint:enable: no-string-literal\n        this._updateCircleOptionsChanges(changes);\n    }\n    _updateCircleOptionsChanges(changes) {\n        const options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmCircle._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        const events = new Map();\n        events.set('center_changed', this.centerChange);\n        events.set('click', this.circleClick);\n        events.set('dblclick', this.circleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragstart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('radius_changed', this.radiusChange);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe((value) => {\n                switch (eventName) {\n                    case 'radius_changed':\n                        this._manager.getRadius(this).then((radius) => eventEmitter.emit(radius));\n                        break;\n                    case 'center_changed':\n                        this._manager.getCenter(this).then((center) => eventEmitter.emit({ lat: center.lat(), lng: center.lng() }));\n                        break;\n                    default:\n                        eventEmitter.emit(value);\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(s => s.unsubscribe());\n        this._eventSubscriptions = null;\n        this._manager.removeCircle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    getBounds() { return this._manager.getBounds(this); }\n    getCenter() { return this._manager.getCenter(this); }\n}\nAgmCircle.ɵfac = function AgmCircle_Factory(t) { return new (t || AgmCircle)(ɵngcc0.ɵɵdirectiveInject(CircleManager)); };\nAgmCircle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmCircle, selectors: [[\"agm-circle\"]], inputs: { clickable: \"clickable\", draggable: [\"circleDraggable\", \"draggable\"], editable: \"editable\", radius: \"radius\", strokePosition: \"strokePosition\", strokeWeight: \"strokeWeight\", visible: \"visible\", latitude: \"latitude\", longitude: \"longitude\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", zIndex: \"zIndex\" }, outputs: { centerChange: \"centerChange\", circleClick: \"circleClick\", circleDblClick: \"circleDblClick\", drag: \"drag\", dragEnd: \"dragEnd\", dragStart: \"dragStart\", mouseDown: \"mouseDown\", mouseMove: \"mouseMove\", mouseOut: \"mouseOut\", mouseOver: \"mouseOver\", mouseUp: \"mouseUp\", radiusChange: \"radiusChange\", rightClick: \"rightClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmCircle._mapOptions = [\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n    'visible', 'zIndex', 'clickable',\n];\nAgmCircle.ctorParameters = () => [\n    { type: CircleManager }\n];\nAgmCircle.propDecorators = {\n    latitude: [{ type: Input }],\n    longitude: [{ type: Input }],\n    clickable: [{ type: Input }],\n    draggable: [{ type: Input, args: ['circleDraggable',] }],\n    editable: [{ type: Input }],\n    fillColor: [{ type: Input }],\n    fillOpacity: [{ type: Input }],\n    radius: [{ type: Input }],\n    strokeColor: [{ type: Input }],\n    strokeOpacity: [{ type: Input }],\n    strokePosition: [{ type: Input }],\n    strokeWeight: [{ type: Input }],\n    visible: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    centerChange: [{ type: Output }],\n    circleClick: [{ type: Output }],\n    circleDblClick: [{ type: Output }],\n    drag: [{ type: Output }],\n    dragEnd: [{ type: Output }],\n    dragStart: [{ type: Output }],\n    mouseDown: [{ type: Output }],\n    mouseMove: [{ type: Output }],\n    mouseOut: [{ type: Output }],\n    mouseOver: [{ type: Output }],\n    mouseUp: [{ type: Output }],\n    radiusChange: [{ type: Output }],\n    rightClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmCircle, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-circle'\n            }]\n    }], function () { return [{ type: CircleManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['circleDraggable']\n        }], editable: [{\n            type: Input\n        }], radius: [{\n            type: Input\n        }], strokePosition: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], centerChange: [{\n            type: Output\n        }], circleClick: [{\n            type: Output\n        }], circleDblClick: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], mouseDown: [{\n            type: Output\n        }], mouseMove: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseUp: [{\n            type: Output\n        }], radiusChange: [{\n            type: Output\n        }], rightClick: [{\n            type: Output\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }] }); })();\n\nlet layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nclass AgmDataLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$1++).toString();\n        this._subscriptions = [];\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * The geoJson to be displayed\n         */\n        this.geoJson = null;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addDataLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmDataLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteDataLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        // tslint:disable-next-line: no-string-literal\n        const geoJsonChange = changes['geoJson'];\n        if (geoJsonChange) {\n            this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n        }\n        const dataOptions = AgmDataLayer._dataOptionsAttributes.reduce((options, k) => options[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : this[k], {});\n        this._manager.setDataOptions(this, dataOptions);\n    }\n}\nAgmDataLayer.ɵfac = function AgmDataLayer_Factory(t) { return new (t || AgmDataLayer)(ɵngcc0.ɵɵdirectiveInject(DataLayerManager)); };\nAgmDataLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmDataLayer, selectors: [[\"agm-data-layer\"]], inputs: { geoJson: \"geoJson\", style: \"style\" }, outputs: { layerClick: \"layerClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmDataLayer._dataOptionsAttributes = ['style'];\nAgmDataLayer.ctorParameters = () => [\n    { type: DataLayerManager }\n];\nAgmDataLayer.propDecorators = {\n    layerClick: [{ type: Output }],\n    geoJson: [{ type: Input }],\n    style: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmDataLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-data-layer'\n            }]\n    }], function () { return [{ type: DataLayerManager }]; }, { layerClick: [{\n            type: Output\n        }], geoJson: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }] }); })();\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nclass AgmFitBounds {\n    constructor(_fitBoundsAccessor, _fitBoundsService) {\n        this._fitBoundsAccessor = _fitBoundsAccessor;\n        this._fitBoundsService = _fitBoundsService;\n        /**\n         * If the value is true, the element gets added to the bounds of the map.\n         * Default: true.\n         */\n        this.agmFitBounds = true;\n        this._destroyed$ = new Subject();\n        this._latestFitBoundsDetails = null;\n    }\n    /**\n     * @internal\n     */\n    ngOnChanges() {\n        this._updateBounds();\n    }\n    /**\n     * @internal\n     */\n    ngOnInit() {\n        this._fitBoundsAccessor\n            .getFitBoundsDetails$()\n            .pipe(distinctUntilChanged((x, y) => x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng), takeUntil(this._destroyed$))\n            .subscribe(details => this._updateBounds(details));\n    }\n    /*\n     Either the location changed, or visible status changed.\n     Possible state changes are\n     invisible -> visible\n     visible -> invisible\n     visible -> visible (new location)\n    */\n    _updateBounds(newFitBoundsDetails) {\n        // either visibility will change, or location, so remove the old one anyway\n        if (this._latestFitBoundsDetails) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n            // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n            // true -> false -> true, in which case we still need old value cached here\n        }\n        if (newFitBoundsDetails) {\n            this._latestFitBoundsDetails = newFitBoundsDetails;\n        }\n        if (!this._latestFitBoundsDetails) {\n            return;\n        }\n        if (this.agmFitBounds === true) {\n            this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n        if (this._latestFitBoundsDetails !== null) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n}\nAgmFitBounds.ɵfac = function AgmFitBounds_Factory(t) { return new (t || AgmFitBounds)(ɵngcc0.ɵɵdirectiveInject(FitBoundsAccessor, 2), ɵngcc0.ɵɵdirectiveInject(FitBoundsService)); };\nAgmFitBounds.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmFitBounds, selectors: [[\"\", \"agmFitBounds\", \"\"]], inputs: { agmFitBounds: \"agmFitBounds\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmFitBounds.ctorParameters = () => [\n    { type: FitBoundsAccessor, decorators: [{ type: Self }] },\n    { type: FitBoundsService }\n];\nAgmFitBounds.propDecorators = {\n    agmFitBounds: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmFitBounds, [{\n        type: Directive,\n        args: [{\n                selector: '[agmFitBounds]'\n            }]\n    }], function () { return [{ type: FitBoundsAccessor, decorators: [{\n                type: Self\n            }] }, { type: FitBoundsService }]; }, { agmFitBounds: [{\n            type: Input\n        }] }); })();\n\nlet infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nclass AgmInfoWindow {\n    constructor(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n         * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n         */\n        this.isOpen = false;\n        /**\n         * Emits an event when the info window is closed.\n         */\n        this.infoWindowClose = new EventEmitter();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    ngOnInit() {\n        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        // tslint:disable: no-string-literal\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    }\n    // tslint:enable: no-string-literal\n    _registerEventListeners() {\n        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n            this.isOpen = false;\n            this.infoWindowClose.emit();\n        });\n    }\n    _updateOpenState() {\n        this.isOpen ? this.open() : this.close();\n    }\n    _setInfoWindowOptions(changes) {\n        const options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    }\n    /**\n     * Opens the info window.\n     */\n    open() { return this._infoWindowManager.open(this); }\n    /**\n     * Closes the info window.\n     */\n    close() {\n        return this._infoWindowManager.close(this).then(() => { this.infoWindowClose.emit(); });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmInfoWindow-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() { this._infoWindowManager.deleteInfoWindow(this); }\n}\nAgmInfoWindow.ɵfac = function AgmInfoWindow_Factory(t) { return new (t || AgmInfoWindow)(ɵngcc0.ɵɵdirectiveInject(InfoWindowManager), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nAgmInfoWindow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AgmInfoWindow, selectors: [[\"agm-info-window\"]], inputs: { isOpen: \"isOpen\", latitude: \"latitude\", longitude: \"longitude\", disableAutoPan: \"disableAutoPan\", zIndex: \"zIndex\", maxWidth: \"maxWidth\" }, outputs: { infoWindowClose: \"infoWindowClose\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"agm-info-window-content\"]], template: function AgmInfoWindow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\nAgmInfoWindow.ctorParameters = () => [\n    { type: InfoWindowManager },\n    { type: ElementRef }\n];\nAgmInfoWindow.propDecorators = {\n    latitude: [{ type: Input }],\n    longitude: [{ type: Input }],\n    disableAutoPan: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    maxWidth: [{ type: Input }],\n    isOpen: [{ type: Input }],\n    infoWindowClose: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmInfoWindow, [{\n        type: Component,\n        args: [{\n                selector: 'agm-info-window',\n                template: `<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  `\n            }]\n    }], function () { return [{ type: InfoWindowManager }, { type: ɵngcc0.ElementRef }]; }, { isOpen: [{\n            type: Input\n        }], infoWindowClose: [{\n            type: Output\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }], disableAutoPan: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], maxWidth: [{\n            type: Input\n        }] }); })();\n\nlet layerId$2 = 0;\nclass AgmKmlLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$2++).toString();\n        this._subscriptions = [];\n        /**\n         * If true, the layer receives mouse events. Default value is true.\n         */\n        this.clickable = true;\n        /**\n         * By default, the input map is centered and zoomed to the bounding box of the contents of the\n         * layer.\n         * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n         * were never set.\n         */\n        this.preserveViewport = false;\n        /**\n         * Whether to render the screen overlays. Default true.\n         */\n        this.screenOverlays = true;\n        /**\n         * Suppress the rendering of info windows when layer features are clicked.\n         */\n        this.suppressInfoWindows = false;\n        /**\n         * The URL of the KML document to display.\n         */\n        this.url = null;\n        /**\n         * The z-index of the layer.\n         */\n        this.zIndex = null;\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * This event is fired when the KML layers default viewport has changed.\n         */\n        this.defaultViewportChange = new EventEmitter();\n        /**\n         * This event is fired when the KML layer has finished loading.\n         * At this point it is safe to read the status property to determine if the layer loaded\n         * successfully.\n         */\n        this.statusChange = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addKmlLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        this._updatePolygonOptions(changes);\n    }\n    _updatePolygonOptions(changes) {\n        const options = Object.keys(changes)\n            .filter(k => AgmKmlLayer._kmlLayerOptions.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n        if (Object.keys(options).length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n            { name: 'defaultviewport_changed', handler: () => this.defaultViewportChange.emit() },\n            { name: 'status_changed', handler: () => this.statusChange.emit() },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmKmlLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteKmlLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nAgmKmlLayer.ɵfac = function AgmKmlLayer_Factory(t) { return new (t || AgmKmlLayer)(ɵngcc0.ɵɵdirectiveInject(KmlLayerManager)); };\nAgmKmlLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmKmlLayer, selectors: [[\"agm-kml-layer\"]], inputs: { clickable: \"clickable\", preserveViewport: \"preserveViewport\", screenOverlays: \"screenOverlays\", suppressInfoWindows: \"suppressInfoWindows\", url: \"url\", zIndex: \"zIndex\" }, outputs: { layerClick: \"layerClick\", defaultViewportChange: \"defaultViewportChange\", statusChange: \"statusChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\nAgmKmlLayer.ctorParameters = () => [\n    { type: KmlLayerManager }\n];\nAgmKmlLayer.propDecorators = {\n    clickable: [{ type: Input }],\n    preserveViewport: [{ type: Input }],\n    screenOverlays: [{ type: Input }],\n    suppressInfoWindows: [{ type: Input }],\n    url: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    layerClick: [{ type: Output }],\n    defaultViewportChange: [{ type: Output }],\n    statusChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmKmlLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-kml-layer'\n            }]\n    }], function () { return [{ type: KmlLayerManager }]; }, { clickable: [{\n            type: Input\n        }], preserveViewport: [{\n            type: Input\n        }], screenOverlays: [{\n            type: Input\n        }], suppressInfoWindows: [{\n            type: Input\n        }], url: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], layerClick: [{\n            type: Output\n        }], defaultViewportChange: [{\n            type: Output\n        }], statusChange: [{\n            type: Output\n        }] }); })();\n\nclass AgmMapControl {\n}\nAgmMapControl.ɵfac = function AgmMapControl_Factory(t) { return new (t || AgmMapControl)(); };\nAgmMapControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmMapControl, inputs: { position: \"position\" } });\nAgmMapControl.propDecorators = {\n    position: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMapControl, [{\n        type: Directive\n    }], null, { position: [{\n            type: Input\n        }] }); })();\nclass AgmFullscreenControl extends AgmMapControl {\n    getOptions() {\n        return {\n            fullscreenControl: true,\n            fullscreenControlOptions: {\n                position: this.position && google.maps.ControlPosition[this.position],\n            },\n        };\n    }\n}\nAgmFullscreenControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmFullscreenControl_BaseFactory; return function AgmFullscreenControl_Factory(t) { return (ɵAgmFullscreenControl_BaseFactory || (ɵAgmFullscreenControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmFullscreenControl)))(t || AgmFullscreenControl); }; }();\nAgmFullscreenControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmFullscreenControl, selectors: [[\"agm-fullscreen-control\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmFullscreenControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmFullscreenControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-fullscreen-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmFullscreenControl }]\n            }]\n    }], null, null); })();\nclass AgmMapTypeControl extends AgmMapControl {\n    getOptions() {\n        return {\n            mapTypeControl: true,\n            mapTypeControlOptions: {\n                position: this.position && google.maps.ControlPosition[this.position],\n                style: this.style && google.maps.MapTypeControlStyle[this.style],\n                mapTypeIds: this.mapTypeIds && this.mapTypeIds.map(mapTypeId => google.maps.MapTypeId[mapTypeId]),\n            },\n        };\n    }\n}\nAgmMapTypeControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmMapTypeControl_BaseFactory; return function AgmMapTypeControl_Factory(t) { return (ɵAgmMapTypeControl_BaseFactory || (ɵAgmMapTypeControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmMapTypeControl)))(t || AgmMapTypeControl); }; }();\nAgmMapTypeControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmMapTypeControl, selectors: [[\"agm-map-type-control\"]], inputs: { mapTypeIds: \"mapTypeIds\", style: \"style\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmMapTypeControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nAgmMapTypeControl.propDecorators = {\n    mapTypeIds: [{ type: Input }],\n    style: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMapTypeControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-map-type-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmMapTypeControl }]\n            }]\n    }], null, { mapTypeIds: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }] }); })();\nclass AgmPanControl extends AgmMapControl {\n    getOptions() {\n        return {\n            panControl: true,\n            panControlOptions: {\n                position: this.position && google.maps.ControlPosition[this.position],\n            },\n        };\n    }\n}\nAgmPanControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmPanControl_BaseFactory; return function AgmPanControl_Factory(t) { return (ɵAgmPanControl_BaseFactory || (ɵAgmPanControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmPanControl)))(t || AgmPanControl); }; }();\nAgmPanControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPanControl, selectors: [[\"agm-pan-control\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmPanControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPanControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-pan-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmPanControl }]\n            }]\n    }], null, null); })();\nclass AgmRotateControl extends AgmMapControl {\n    getOptions() {\n        return {\n            rotateControl: true,\n            rotateControlOptions: {\n                position: this.position && google.maps.ControlPosition[this.position],\n            },\n        };\n    }\n}\nAgmRotateControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmRotateControl_BaseFactory; return function AgmRotateControl_Factory(t) { return (ɵAgmRotateControl_BaseFactory || (ɵAgmRotateControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmRotateControl)))(t || AgmRotateControl); }; }();\nAgmRotateControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmRotateControl, selectors: [[\"agm-rotate-control\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmRotateControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmRotateControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-rotate-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmRotateControl }]\n            }]\n    }], null, null); })();\nclass AgmScaleControl extends AgmMapControl {\n    getOptions() {\n        return {\n            scaleControl: true,\n        };\n    }\n}\nAgmScaleControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmScaleControl_BaseFactory; return function AgmScaleControl_Factory(t) { return (ɵAgmScaleControl_BaseFactory || (ɵAgmScaleControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmScaleControl)))(t || AgmScaleControl); }; }();\nAgmScaleControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmScaleControl, selectors: [[\"agm-scale-control\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmScaleControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmScaleControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-scale-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmScaleControl }]\n            }]\n    }], null, null); })();\nclass AgmStreetViewControl extends AgmMapControl {\n    getOptions() {\n        return {\n            streetViewControl: true,\n            streetViewControlOptions: {\n                position: this.position && google.maps.ControlPosition[this.position],\n            },\n        };\n    }\n}\nAgmStreetViewControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmStreetViewControl_BaseFactory; return function AgmStreetViewControl_Factory(t) { return (ɵAgmStreetViewControl_BaseFactory || (ɵAgmStreetViewControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmStreetViewControl)))(t || AgmStreetViewControl); }; }();\nAgmStreetViewControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmStreetViewControl, selectors: [[\"agm-street-view-control\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmStreetViewControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmStreetViewControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-street-view-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmStreetViewControl }]\n            }]\n    }], null, null); })();\nclass AgmZoomControl extends AgmMapControl {\n    getOptions() {\n        return {\n            zoomControl: true,\n            zoomControlOptions: {\n                position: this.position && google.maps.ControlPosition[this.position],\n                style: this.style && google.maps.ZoomControlStyle[this.style],\n            },\n        };\n    }\n}\nAgmZoomControl.ɵfac = /*@__PURE__*/ function () { let ɵAgmZoomControl_BaseFactory; return function AgmZoomControl_Factory(t) { return (ɵAgmZoomControl_BaseFactory || (ɵAgmZoomControl_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AgmZoomControl)))(t || AgmZoomControl); }; }();\nAgmZoomControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmZoomControl, selectors: [[\"agm-zoom-control\"]], inputs: { style: \"style\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: AgmMapControl, useExisting: AgmZoomControl }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nAgmZoomControl.propDecorators = {\n    style: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmZoomControl, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-map agm-zoom-control',\n                providers: [{ provide: AgmMapControl, useExisting: AgmZoomControl }]\n            }]\n    }], null, { style: [{\n            type: Input\n        }] }); })();\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nclass AgmMap {\n    constructor(_elem, _mapsWrapper, \n    // tslint:disable-next-line: ban-types\n    _platformId, _fitBoundsService, _zone) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        this._platformId = _platformId;\n        this._fitBoundsService = _fitBoundsService;\n        this._zone = _zone;\n        /**\n         * The longitude that defines the center of the map.\n         */\n        this.longitude = 0;\n        /**\n         * The latitude that defines the center of the map.\n         */\n        this.latitude = 0;\n        /**\n         * The zoom level of the map. The default zoom level is 8.\n         */\n        this.zoom = 8;\n        /**\n         * Enables/disables if map is draggable.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = true;\n        /**\n         * Enables/disables zoom and center on double click. Enabled by default.\n         */\n        this.disableDoubleClickZoom = false;\n        /**\n         * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n         * value cannot get updated.\n         */\n        this.disableDefaultUI = false;\n        /**\n         * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n         */\n        this.scrollwheel = true;\n        /**\n         * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n         * enabled by default.\n         */\n        this.keyboardShortcuts = true;\n        /**\n         * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n         * modes, these styles will only apply to labels and geometry.\n         */\n        this.styles = [];\n        /**\n         * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n         * used to\n         * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n         */\n        this.usePanning = false;\n        /**\n         * Sets the viewport to contain the given bounds.\n         * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n         */\n        this.fitBounds = false;\n        /**\n         * The map mapTypeId. Defaults to 'roadmap'.\n         */\n        this.mapTypeId = 'ROADMAP';\n        /**\n         * When false, map icons are not clickable. A map icon represents a point of interest,\n         * also known as a POI. By default map icons are clickable.\n         */\n        this.clickableIcons = true;\n        /**\n         * A map icon represents a point of interest, also known as a POI.\n         * When map icons are clickable by default, an info window is displayed.\n         * When this property is set to false, the info window will not be shown but the click event\n         * will still fire\n         */\n        this.showDefaultInfoWindow = true;\n        /**\n         * This setting controls how gestures on the map are handled.\n         * Allowed values:\n         * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n         * - 'greedy'      (All touch gestures pan or zoom the map.)\n         * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n         * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n         */\n        this.gestureHandling = 'auto';\n        /**\n         * Controls the automatic switching behavior for the angle of incidence of\n         * the map. The only allowed values are 0 and 45. The value 0 causes the map\n         * to always use a 0° overhead view regardless of the zoom level and\n         * viewport. The value 45 causes the tilt angle to automatically switch to\n         * 45 whenever 45° imagery is available for the current zoom level and\n         * viewport, and switch back to 0 whenever 45° imagery is not available\n         * (this is the default behavior). 45° imagery is only available for\n         * satellite and hybrid map types, within some locations, and at some zoom\n         * levels. Note: getTilt returns the current tilt angle, not the value\n         * specified by this option. Because getTilt and this option refer to\n         * different things, do not bind() the tilt property; doing so may yield\n         * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n         */\n        this.tilt = 0;\n        this._observableSubscriptions = [];\n        /**\n         * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n         * marker or infoWindow).\n         */\n        // tslint:disable-next-line: max-line-length\n        this.mapClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapRightClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapDblClick = new EventEmitter();\n        /**\n         * This event emitter is fired when the map center changes.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event is fired when the viewport bounds have changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event is fired when the mapTypeId property changes.\n         */\n        this.mapTypeIdChange = new EventEmitter();\n        /**\n         * This event is fired when the map becomes idle after panning or zooming.\n         */\n        this.idle = new EventEmitter();\n        /**\n         * This event is fired when the zoom level has changed.\n         */\n        this.zoomChange = new EventEmitter();\n        /**\n         * This event is fired when the google map is fully initialized.\n         * You get the google.maps.Map instance as a result of this EventEmitter.\n         */\n        this.mapReady = new EventEmitter();\n        /**\n         * This event is fired when the visible tiles have finished loading.\n         */\n        this.tilesLoaded = new EventEmitter();\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (isPlatformServer(this._platformId)) {\n            // The code is running on the server, do nothing\n            return;\n        }\n        // todo: this should be solved with a new component and a viewChild decorator\n        const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n        this._initMapInstance(container);\n    }\n    _initMapInstance(el) {\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            minZoom: this.minZoom,\n            maxZoom: this.maxZoom,\n            controlSize: this.controlSize,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            scrollwheel: this.scrollwheel,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            styles: this.styles,\n            mapTypeId: this.mapTypeId.toLocaleLowerCase(),\n            clickableIcons: this.clickableIcons,\n            gestureHandling: this.gestureHandling,\n            tilt: this.tilt,\n            restriction: this.restriction,\n        })\n            .then(() => this._mapsWrapper.getNativeMap())\n            .then(map => this.mapReady.emit(map));\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleMapTypeIdChange();\n        this._handleTilesLoadedEvent();\n        this._handleIdleEvent();\n        this._handleControlChange();\n    }\n    /** @internal */\n    ngOnDestroy() {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n        // remove all listeners from the map instance\n        this._mapsWrapper.clearInstanceListeners();\n        if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n        }\n    }\n    /* @internal */\n    ngOnChanges(changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    }\n    _updateMapOptionsChanges(changes) {\n        const options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmMap._mapOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    }\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    triggerResize(recenter = true) {\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n                    if (recenter) {\n                        this.fitBounds != null ? this._fitBounds() : this._setCenter();\n                    }\n                    resolve();\n                });\n            });\n        });\n    }\n    _updatePosition(changes) {\n        // tslint:disable: no-string-literal\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            !changes['fitBounds']) {\n            // no position update needed\n            return;\n        }\n        // tslint:enable: no-string-literal\n        // we prefer fitBounds in changes\n        if ('fitBounds' in changes) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        this._setCenter();\n    }\n    _setCenter() {\n        const newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    }\n    _fitBounds() {\n        switch (this.fitBounds) {\n            case true:\n                this._subscribeToFitBoundsUpdates();\n                break;\n            case false:\n                if (this._fitBoundsSubscription) {\n                    this._fitBoundsSubscription.unsubscribe();\n                }\n                break;\n            default:\n                if (this._fitBoundsSubscription) {\n                    this._fitBoundsSubscription.unsubscribe();\n                }\n                this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n        }\n    }\n    _subscribeToFitBoundsUpdates() {\n        this._zone.runOutsideAngular(() => {\n            this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n                this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n            });\n        });\n    }\n    _updateBounds(bounds, padding) {\n        if (!bounds) {\n            return;\n        }\n        if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n            const newBounds = new google.maps.LatLngBounds();\n            newBounds.union(bounds);\n            bounds = newBounds;\n        }\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(bounds, padding);\n            return;\n        }\n        this._mapsWrapper.fitBounds(bounds, padding);\n    }\n    _isLatLngBoundsLiteral(bounds) {\n        return bounds != null && bounds.extend === undefined;\n    }\n    _handleMapCenterChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(() => {\n            this._mapsWrapper.getCenter().then((center) => {\n                this.latitude = center.lat();\n                this.longitude = center.lng();\n                this.centerChange.emit({ lat: this.latitude, lng: this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleBoundsChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(() => {\n            this._mapsWrapper.getBounds().then((bounds) => { this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapTypeIdChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(() => {\n            this._mapsWrapper.getMapTypeId().then((mapTypeId) => { this.mapTypeIdChange.emit(mapTypeId); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapZoomChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(() => {\n            this._mapsWrapper.getZoom().then((z) => {\n                this.zoom = z;\n                this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleIdleEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => { this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    }\n    _handleTilesLoadedEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(() => this.tilesLoaded.emit(void 0));\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapMouseEvents() {\n        const events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n            { name: 'dblclick', emitter: this.mapDblClick },\n        ];\n        events.forEach(e => {\n            const s = this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(([event]) => {\n                // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n                if (event.placeId && !this.showDefaultInfoWindow) {\n                    event.stop();\n                }\n                e.emitter.emit(event);\n            });\n            this._observableSubscriptions.push(s);\n        });\n    }\n    _handleControlChange() {\n        this._setControls();\n        this.mapControls.changes.subscribe(() => this._setControls());\n    }\n    _setControls() {\n        const controlOptions = {\n            fullscreenControl: !this.disableDefaultUI,\n            mapTypeControl: false,\n            panControl: false,\n            rotateControl: false,\n            scaleControl: false,\n            streetViewControl: !this.disableDefaultUI,\n            zoomControl: !this.disableDefaultUI,\n        };\n        this._mapsWrapper.getNativeMap().then(() => {\n            this.mapControls.forEach(control => Object.assign(controlOptions, control.getOptions()));\n            this._mapsWrapper.setMapOptions(controlOptions);\n        });\n    }\n}\nAgmMap.ɵfac = function AgmMap_Factory(t) { return new (t || AgmMap)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(FitBoundsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nAgmMap.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AgmMap, selectors: [[\"agm-map\"]], contentQueries: function AgmMap_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmMapControl, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.mapControls = _t);\n    } }, inputs: { longitude: \"longitude\", latitude: \"latitude\", zoom: \"zoom\", draggable: [\"mapDraggable\", \"draggable\"], disableDoubleClickZoom: \"disableDoubleClickZoom\", disableDefaultUI: \"disableDefaultUI\", scrollwheel: \"scrollwheel\", keyboardShortcuts: \"keyboardShortcuts\", styles: \"styles\", usePanning: \"usePanning\", fitBounds: \"fitBounds\", mapTypeId: \"mapTypeId\", clickableIcons: \"clickableIcons\", showDefaultInfoWindow: \"showDefaultInfoWindow\", gestureHandling: \"gestureHandling\", tilt: \"tilt\", minZoom: \"minZoom\", maxZoom: \"maxZoom\", controlSize: \"controlSize\", backgroundColor: \"backgroundColor\", draggableCursor: \"draggableCursor\", draggingCursor: \"draggingCursor\", fitBoundsPadding: \"fitBoundsPadding\", restriction: \"restriction\" }, outputs: { mapClick: \"mapClick\", mapRightClick: \"mapRightClick\", mapDblClick: \"mapDblClick\", centerChange: \"centerChange\", boundsChange: \"boundsChange\", mapTypeIdChange: \"mapTypeIdChange\", idle: \"idle\", zoomChange: \"zoomChange\", mapReady: \"mapReady\", tilesLoaded: \"tilesLoaded\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            CircleManager,\n            DataLayerManager,\n            DataLayerManager,\n            FitBoundsService,\n            GoogleMapsAPIWrapper,\n            InfoWindowManager,\n            KmlLayerManager,\n            LayerManager,\n            MarkerManager,\n            PolygonManager,\n            PolylineManager,\n            RectangleManager,\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 3, vars: 0, consts: [[1, \"agm-map-container-inner\", \"sebm-google-map-container-inner\"], [1, \"agm-map-content\"]], template: function AgmMap_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".agm-map-container-inner[_ngcontent-%COMP%] {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content[_ngcontent-%COMP%] {\\n      display:none;\\n    }\"] });\n/**\n * Map option attributes that can change over time\n */\nAgmMap._mapOptionsAttributes = [\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n    'keyboardShortcuts', 'styles', 'zoom', 'minZoom', 'maxZoom', 'mapTypeId', 'clickableIcons',\n    'gestureHandling', 'tilt', 'restriction',\n];\nAgmMap.ctorParameters = () => [\n    { type: ElementRef },\n    { type: GoogleMapsAPIWrapper },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: FitBoundsService },\n    { type: NgZone }\n];\nAgmMap.propDecorators = {\n    longitude: [{ type: Input }],\n    latitude: [{ type: Input }],\n    zoom: [{ type: Input }],\n    minZoom: [{ type: Input }],\n    maxZoom: [{ type: Input }],\n    controlSize: [{ type: Input }],\n    draggable: [{ type: Input, args: ['mapDraggable',] }],\n    disableDoubleClickZoom: [{ type: Input }],\n    disableDefaultUI: [{ type: Input }],\n    scrollwheel: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    draggableCursor: [{ type: Input }],\n    draggingCursor: [{ type: Input }],\n    keyboardShortcuts: [{ type: Input }],\n    styles: [{ type: Input }],\n    usePanning: [{ type: Input }],\n    fitBounds: [{ type: Input }],\n    fitBoundsPadding: [{ type: Input }],\n    mapTypeId: [{ type: Input }],\n    clickableIcons: [{ type: Input }],\n    showDefaultInfoWindow: [{ type: Input }],\n    gestureHandling: [{ type: Input }],\n    tilt: [{ type: Input }],\n    restriction: [{ type: Input }],\n    mapClick: [{ type: Output }],\n    mapRightClick: [{ type: Output }],\n    mapDblClick: [{ type: Output }],\n    centerChange: [{ type: Output }],\n    boundsChange: [{ type: Output }],\n    mapTypeIdChange: [{ type: Output }],\n    idle: [{ type: Output }],\n    zoomChange: [{ type: Output }],\n    mapReady: [{ type: Output }],\n    tilesLoaded: [{ type: Output }],\n    mapControls: [{ type: ContentChildren, args: [AgmMapControl,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMap, [{\n        type: Component,\n        args: [{ selector: 'agm-map', providers: [\n                    CircleManager,\n                    DataLayerManager,\n                    DataLayerManager,\n                    FitBoundsService,\n                    GoogleMapsAPIWrapper,\n                    InfoWindowManager,\n                    KmlLayerManager,\n                    LayerManager,\n                    MarkerManager,\n                    PolygonManager,\n                    PolylineManager,\n                    RectangleManager,\n                ], template: `\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  `, styles: [\"\\n    .agm-map-container-inner {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content {\\n      display:none;\\n    }\\n  \"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: GoogleMapsAPIWrapper }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: FitBoundsService }, { type: ɵngcc0.NgZone }]; }, { longitude: [{\n            type: Input\n        }], latitude: [{\n            type: Input\n        }], zoom: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['mapDraggable']\n        }], disableDoubleClickZoom: [{\n            type: Input\n        }], disableDefaultUI: [{\n            type: Input\n        }], scrollwheel: [{\n            type: Input\n        }], keyboardShortcuts: [{\n            type: Input\n        }], styles: [{\n            type: Input\n        }], usePanning: [{\n            type: Input\n        }], fitBounds: [{\n            type: Input\n        }], mapTypeId: [{\n            type: Input\n        }], clickableIcons: [{\n            type: Input\n        }], showDefaultInfoWindow: [{\n            type: Input\n        }], gestureHandling: [{\n            type: Input\n        }], tilt: [{\n            type: Input\n        }], mapClick: [{\n            type: Output\n        }], mapRightClick: [{\n            type: Output\n        }], mapDblClick: [{\n            type: Output\n        }], centerChange: [{\n            type: Output\n        }], boundsChange: [{\n            type: Output\n        }], mapTypeIdChange: [{\n            type: Output\n        }], idle: [{\n            type: Output\n        }], zoomChange: [{\n            type: Output\n        }], mapReady: [{\n            type: Output\n        }], tilesLoaded: [{\n            type: Output\n        }], minZoom: [{\n            type: Input\n        }], maxZoom: [{\n            type: Input\n        }], controlSize: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], draggableCursor: [{\n            type: Input\n        }], draggingCursor: [{\n            type: Input\n        }], fitBoundsPadding: [{\n            type: Input\n        }], restriction: [{\n            type: Input\n        }], mapControls: [{\n            type: ContentChildren,\n            args: [AgmMapControl]\n        }] }); })();\n\nlet markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nclass AgmMarker {\n    constructor(_markerManager) {\n        this._markerManager = _markerManager;\n        /**\n         * If true, the marker can be dragged. Default value is false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If true, the marker is visible\n         */\n        this.visible = true;\n        /**\n         * Whether to automatically open the child info window when the marker is clicked.\n         */\n        this.openInfoWindow = true;\n        /**\n         * The marker's opacity between 0.0 and 1.0.\n         */\n        this.opacity = 1;\n        /**\n         * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n         * front of markers with lower values. By default, markers are displayed according to their\n         * vertical position on screen, with lower markers appearing in front of markers further up the\n         * screen.\n         */\n        this.zIndex = 1;\n        /**\n         * If true, the marker can be clicked. Default value is true.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.clickable = true;\n        /**\n         * This event is fired when the marker's animation property changes.\n         */\n        this.animationChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the marker.\n         */\n        this.markerClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks twice on the marker.\n         */\n        this.markerDblClick = new EventEmitter();\n        /**\n         * This event is fired when the user rightclicks on the marker.\n         */\n        this.markerRightClick = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the marker.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the marker.\n         */\n        // tslint:disable-next-line: no-output-native\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the marker.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user mouses over the marker.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the user mouses outside the marker.\n         */\n        this.mouseOut = new EventEmitter();\n        /** @internal */\n        this.infoWindow = new QueryList();\n        this._markerAddedToManger = false;\n        this._observableSubscriptions = [];\n        this._fitBoundsDetails$ = new ReplaySubject(1);\n        this._id = (markerId++).toString();\n    }\n    /* @internal */\n    ngAfterContentInit() {\n        this.handleInfoWindowUpdate();\n        this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n    }\n    handleInfoWindowUpdate() {\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(marker => {\n            marker.hostMarker = this;\n        });\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (typeof this.latitude === 'string') {\n            this.latitude = Number(this.latitude);\n        }\n        if (typeof this.longitude === 'string') {\n            this.longitude = Number(this.longitude);\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        if (!this._markerAddedToManger) {\n            this._markerManager.addMarker(this);\n            this._updateFitBoundsDetails();\n            this._markerAddedToManger = true;\n            this._addEventListeners();\n            return;\n        }\n        // tslint:disable: no-string-literal\n        if (changes['latitude'] || changes['longitude']) {\n            this._markerManager.updateMarkerPosition(this);\n            this._updateFitBoundsDetails();\n        }\n        if (changes['title']) {\n            this._markerManager.updateTitle(this);\n        }\n        if (changes['label']) {\n            this._markerManager.updateLabel(this);\n        }\n        if (changes['draggable']) {\n            this._markerManager.updateDraggable(this);\n        }\n        if (changes['iconUrl']) {\n            this._markerManager.updateIcon(this);\n        }\n        if (changes['opacity']) {\n            this._markerManager.updateOpacity(this);\n        }\n        if (changes['visible']) {\n            this._markerManager.updateVisible(this);\n        }\n        if (changes['zIndex']) {\n            this._markerManager.updateZIndex(this);\n        }\n        if (changes['clickable']) {\n            this._markerManager.updateClickable(this);\n        }\n        if (changes['animation']) {\n            this._markerManager.updateAnimation(this);\n        }\n        // tslint:enable: no-string-literal\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this._fitBoundsDetails$.asObservable();\n    }\n    _updateFitBoundsDetails() {\n        this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\n    }\n    _addEventListeners() {\n        const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n            if (this.openInfoWindow) {\n                this.infoWindow.forEach(infoWindow => infoWindow.open());\n            }\n            this.markerClick.emit(this);\n        });\n        this._observableSubscriptions.push(cs);\n        const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n            this.markerDblClick.emit(null);\n        });\n        this._observableSubscriptions.push(dcs);\n        const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n            this.markerRightClick.emit(null);\n        });\n        this._observableSubscriptions.push(rc);\n        const ds = this._markerManager.createEventObservable('dragstart', this)\n            .subscribe(e => this.dragStart.emit(e));\n        this._observableSubscriptions.push(ds);\n        const d = this._markerManager.createEventObservable('drag', this)\n            .subscribe(e => this.drag.emit(e));\n        this._observableSubscriptions.push(d);\n        const de = this._markerManager.createEventObservable('dragend', this)\n            .subscribe(e => this.dragEnd.emit(e));\n        this._observableSubscriptions.push(de);\n        const mover = this._markerManager.createEventObservable('mouseover', this)\n            .subscribe(e => this.mouseOver.emit(e));\n        this._observableSubscriptions.push(mover);\n        const mout = this._markerManager.createEventObservable('mouseout', this)\n            .subscribe(e => this.mouseOut.emit(e));\n        this._observableSubscriptions.push(mout);\n        const anChng = this._markerManager.createEventObservable('animation_changed', this)\n            .subscribe(() => {\n            this.animationChange.emit(this.animation);\n        });\n        this._observableSubscriptions.push(anChng);\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmMarker-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() {\n        this._markerManager.deleteMarker(this);\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n    }\n}\nAgmMarker.ɵfac = function AgmMarker_Factory(t) { return new (t || AgmMarker)(ɵngcc0.ɵɵdirectiveInject(MarkerManager)); };\nAgmMarker.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmMarker, selectors: [[\"agm-marker\"]], contentQueries: function AgmMarker_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmInfoWindow, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infoWindow = _t);\n    } }, inputs: { draggable: [\"markerDraggable\", \"draggable\"], visible: \"visible\", openInfoWindow: \"openInfoWindow\", opacity: \"opacity\", zIndex: \"zIndex\", clickable: [\"markerClickable\", \"clickable\"], latitude: \"latitude\", longitude: \"longitude\", title: \"title\", label: \"label\", iconUrl: \"iconUrl\", animation: \"animation\" }, outputs: { animationChange: \"animationChange\", markerClick: \"markerClick\", markerDblClick: \"markerDblClick\", markerRightClick: \"markerRightClick\", dragStart: \"dragStart\", drag: \"drag\", dragEnd: \"dragEnd\", mouseOver: \"mouseOver\", mouseOut: \"mouseOut\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker) },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmMarker.ctorParameters = () => [\n    { type: MarkerManager }\n];\nAgmMarker.propDecorators = {\n    latitude: [{ type: Input }],\n    longitude: [{ type: Input }],\n    title: [{ type: Input }],\n    label: [{ type: Input }],\n    draggable: [{ type: Input, args: ['markerDraggable',] }],\n    iconUrl: [{ type: Input }],\n    visible: [{ type: Input }],\n    openInfoWindow: [{ type: Input }],\n    opacity: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    clickable: [{ type: Input, args: ['markerClickable',] }],\n    animation: [{ type: Input }],\n    animationChange: [{ type: Output }],\n    markerClick: [{ type: Output }],\n    markerDblClick: [{ type: Output }],\n    markerRightClick: [{ type: Output }],\n    dragStart: [{ type: Output }],\n    drag: [{ type: Output }],\n    dragEnd: [{ type: Output }],\n    mouseOver: [{ type: Output }],\n    mouseOut: [{ type: Output }],\n    infoWindow: [{ type: ContentChildren, args: [AgmInfoWindow,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmMarker, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-marker',\n                providers: [\n                    { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker) },\n                ]\n            }]\n    }], function () { return [{ type: MarkerManager }]; }, { draggable: [{\n            type: Input,\n            args: ['markerDraggable']\n        }], visible: [{\n            type: Input\n        }], openInfoWindow: [{\n            type: Input\n        }], opacity: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], clickable: [{\n            type: Input,\n            args: ['markerClickable']\n        }], animationChange: [{\n            type: Output\n        }], markerClick: [{\n            type: Output\n        }], markerDblClick: [{\n            type: Output\n        }], markerRightClick: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], infoWindow: [{\n            type: ContentChildren,\n            args: [AgmInfoWindow]\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], iconUrl: [{\n            type: Input\n        }], animation: [{\n            type: Input\n        }] }); })();\n\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: LatLngLiteral[] = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: LatLngLiteral[][] = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nclass AgmPolygon {\n    constructor(_polygonManager) {\n        this._polygonManager = _polygonManager;\n        /**\n         * Indicates whether this Polygon handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic\n         * property defines the mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control\n         * points shown at the vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will\n         * follow the curvature of the Earth. When false, edges of the polygon are\n         * rendered as straight lines in screen space. Note that the shape of a\n         * geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * The ordered sequence of coordinates that designates a closed loop.\n         * Unlike polylines, a polygon may consist of one or more paths.\n         *  As a result, the paths property may specify one or more arrays of\n         * LatLng coordinates. Paths are closed automatically; do not repeat the\n         * first vertex of the path as the last vertex. Simple polygons may be\n         * defined using a single array of LatLngs. More complex polygons may\n         * specify an array of arrays. Any simple arrays are converted into Arrays.\n         * Inserting or removing LatLngs from the Array will automatically update\n         * the polygon on the map.\n         */\n        this.paths = [];\n        /**\n         * This event is fired when the DOM click event is fired on the Polygon.\n         */\n        this.polyClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polygon.\n         */\n        this.polyDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polygon.\n         */\n        this.polyDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polygon.\n         */\n        this.polyDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polygon.\n         */\n        this.polyDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polygon.\n         */\n        this.polyMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polygon.\n         */\n        this.polyMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseout.\n         */\n        this.polyMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseover.\n         */\n        this.polyMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polygon\n         */\n        this.polyMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polygon is right-clicked on.\n         */\n        this.polyRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polygon first path changes.\n         */\n        this.polyPathsChange = new EventEmitter();\n        this._polygonAddedToManager = false;\n        this._subscriptions = [];\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (!this._polygonAddedToManager) {\n            this._init();\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this._polygonAddedToManager) {\n            this._init();\n            return;\n        }\n        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    }\n    _init() {\n        this._polygonManager.addPolygon(this);\n        this._polygonAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.polyClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.polyDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.polyDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.polyDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.polyDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.polyMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.polyMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.polyMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.polyMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.polyMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.polyRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polygonManager.createPathEventObservable(this)\n            .then(paths$ => {\n            const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    _updatePolygonOptions(changes) {\n        return Object.keys(changes)\n            .filter(k => AgmPolygon._polygonOptionsAttributes.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polygonManager.deletePolygon(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n    getPath() {\n        return this._polygonManager.getPath(this);\n    }\n    getPaths() {\n        return this._polygonManager.getPaths(this);\n    }\n}\nAgmPolygon.ɵfac = function AgmPolygon_Factory(t) { return new (t || AgmPolygon)(ɵngcc0.ɵɵdirectiveInject(PolygonManager)); };\nAgmPolygon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPolygon, selectors: [[\"agm-polygon\"]], inputs: { clickable: \"clickable\", draggable: [\"polyDraggable\", \"draggable\"], editable: \"editable\", geodesic: \"geodesic\", paths: \"paths\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\", visible: \"visible\", zIndex: \"zIndex\" }, outputs: { polyClick: \"polyClick\", polyDblClick: \"polyDblClick\", polyDrag: \"polyDrag\", polyDragEnd: \"polyDragEnd\", polyDragStart: \"polyDragStart\", polyMouseDown: \"polyMouseDown\", polyMouseMove: \"polyMouseMove\", polyMouseOut: \"polyMouseOut\", polyMouseOver: \"polyMouseOver\", polyMouseUp: \"polyMouseUp\", polyRightClick: \"polyRightClick\", polyPathsChange: \"polyPathsChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmPolygon._polygonOptionsAttributes = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n    'editable', 'visible',\n];\nAgmPolygon.ctorParameters = () => [\n    { type: PolygonManager }\n];\nAgmPolygon.propDecorators = {\n    clickable: [{ type: Input }],\n    draggable: [{ type: Input, args: ['polyDraggable',] }],\n    editable: [{ type: Input }],\n    fillColor: [{ type: Input }],\n    fillOpacity: [{ type: Input }],\n    geodesic: [{ type: Input }],\n    paths: [{ type: Input }],\n    strokeColor: [{ type: Input }],\n    strokeOpacity: [{ type: Input }],\n    strokeWeight: [{ type: Input }],\n    visible: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    polyClick: [{ type: Output }],\n    polyDblClick: [{ type: Output }],\n    polyDrag: [{ type: Output }],\n    polyDragEnd: [{ type: Output }],\n    polyDragStart: [{ type: Output }],\n    polyMouseDown: [{ type: Output }],\n    polyMouseMove: [{ type: Output }],\n    polyMouseOut: [{ type: Output }],\n    polyMouseOver: [{ type: Output }],\n    polyMouseUp: [{ type: Output }],\n    polyRightClick: [{ type: Output }],\n    polyPathsChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolygon, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-polygon'\n            }]\n    }], function () { return [{ type: PolygonManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['polyDraggable']\n        }], editable: [{\n            type: Input\n        }], geodesic: [{\n            type: Input\n        }], paths: [{\n            type: Input\n        }], polyClick: [{\n            type: Output\n        }], polyDblClick: [{\n            type: Output\n        }], polyDrag: [{\n            type: Output\n        }], polyDragEnd: [{\n            type: Output\n        }], polyDragStart: [{\n            type: Output\n        }], polyMouseDown: [{\n            type: Output\n        }], polyMouseMove: [{\n            type: Output\n        }], polyMouseOut: [{\n            type: Output\n        }], polyMouseOver: [{\n            type: Output\n        }], polyMouseUp: [{\n            type: Output\n        }], polyRightClick: [{\n            type: Output\n        }], polyPathsChange: [{\n            type: Output\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }] }); })();\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n */\nclass AgmPolylineIcon {\n    ngOnInit() {\n        if (this.path == null) {\n            throw new Error('Icon Sequence path is required');\n        }\n    }\n}\nAgmPolylineIcon.ɵfac = function AgmPolylineIcon_Factory(t) { return new (t || AgmPolylineIcon)(); };\nAgmPolylineIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPolylineIcon, selectors: [[\"agm-icon-sequence\"]], inputs: { fixedRotation: \"fixedRotation\", offset: \"offset\", repeat: \"repeat\", anchorX: \"anchorX\", anchorY: \"anchorY\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", path: \"path\", rotation: \"rotation\", scale: \"scale\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\" } });\nAgmPolylineIcon.propDecorators = {\n    fixedRotation: [{ type: Input }],\n    offset: [{ type: Input }],\n    repeat: [{ type: Input }],\n    anchorX: [{ type: Input }],\n    anchorY: [{ type: Input }],\n    fillColor: [{ type: Input }],\n    fillOpacity: [{ type: Input }],\n    path: [{ type: Input }],\n    rotation: [{ type: Input }],\n    scale: [{ type: Input }],\n    strokeColor: [{ type: Input }],\n    strokeOpacity: [{ type: Input }],\n    strokeWeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolylineIcon, [{\n        type: Directive,\n        args: [{ selector: 'agm-polyline agm-icon-sequence' }]\n    }], null, { fixedRotation: [{\n            type: Input\n        }], offset: [{\n            type: Input\n        }], repeat: [{\n            type: Input\n        }], anchorX: [{\n            type: Input\n        }], anchorY: [{\n            type: Input\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], path: [{\n            type: Input\n        }], rotation: [{\n            type: Input\n        }], scale: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }] }); })();\n\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\nclass AgmPolylinePoint {\n    constructor() {\n        /**\n         * This event emitter gets emitted when the position of the point changed.\n         */\n        this.positionChanged = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        // tslint:disable: no-string-literal\n        if (changes['latitude'] || changes['longitude']) {\n            this.positionChanged.emit({\n                lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n                lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude,\n            });\n        }\n        // tslint:enable: no-string-literal\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this.positionChanged.pipe(startWith({ lat: this.latitude, lng: this.longitude }), map(position => ({ latLng: position })));\n    }\n}\nAgmPolylinePoint.ɵfac = function AgmPolylinePoint_Factory(t) { return new (t || AgmPolylinePoint)(); };\nAgmPolylinePoint.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPolylinePoint, selectors: [[\"agm-polyline-point\"]], inputs: { latitude: \"latitude\", longitude: \"longitude\" }, outputs: { positionChanged: \"positionChanged\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint) },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmPolylinePoint.ctorParameters = () => [];\nAgmPolylinePoint.propDecorators = {\n    latitude: [{ type: Input }],\n    longitude: [{ type: Input }],\n    positionChanged: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolylinePoint, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-polyline-point',\n                providers: [\n                    { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint) },\n                ]\n            }]\n    }], function () { return []; }, { positionChanged: [{\n            type: Output\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }] }); })();\n\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nclass AgmPolyline {\n    constructor(_polylineManager) {\n        this._polylineManager = _polylineManager;\n        /**\n         * Indicates whether this Polyline handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic property defines the\n         * mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control points shown at the\n         * vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n         * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n         * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * Whether this polyline is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the DOM click event is fired on the Polyline.\n         */\n        this.lineClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polyline.\n         */\n        this.lineDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polyline.\n         */\n        this.lineDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polyline.\n         */\n        this.lineDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polyline.\n         */\n        this.lineDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polyline.\n         */\n        this.lineMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polyline.\n         */\n        this.lineMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseout.\n         */\n        this.lineMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseover.\n         */\n        this.lineMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polyline\n         */\n        this.lineMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polyline is right-clicked on.\n         */\n        this.lineRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polyline's path changes.\n         */\n        this.polyPathChange = new EventEmitter();\n        this._polylineAddedToManager = false;\n        this._subscriptions = [];\n        this._id = (polylineId++).toString();\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (this.points.length) {\n            this.points.forEach((point) => {\n                const s = point.positionChanged.subscribe(() => { this._polylineManager.updatePolylinePoints(this); });\n                this._subscriptions.push(s);\n            });\n        }\n        if (!this._polylineAddedToManager) {\n            this._init();\n        }\n        const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n        this._subscriptions.push(pointSub);\n        this._polylineManager.updatePolylinePoints(this);\n        const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n        this._subscriptions.push(iconSub);\n    }\n    ngOnChanges(changes) {\n        if (!this._polylineAddedToManager) {\n            this._init();\n            return;\n        }\n        const options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmPolyline._polylineOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach(k => options[k] = changes[k].currentValue);\n        this._polylineManager.setPolylineOptions(this, options);\n    }\n    getPath() {\n        return this._polylineManager.getPath(this);\n    }\n    _init() {\n        this._polylineManager.addPolyline(this);\n        this._polylineAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.lineClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.lineDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.lineDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.lineDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.lineDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.lineMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.lineMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.lineMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.lineMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.lineMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.lineRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polylineManager.createPathEventObservable(this).then((ob$) => {\n            const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    _getPoints() {\n        if (this.points) {\n            return this.points.toArray();\n        }\n        return [];\n    }\n    _getIcons() {\n        if (this.iconSequences) {\n            return this.iconSequences.toArray();\n        }\n        return [];\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polylineManager.deletePolyline(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n}\nAgmPolyline.ɵfac = function AgmPolyline_Factory(t) { return new (t || AgmPolyline)(ɵngcc0.ɵɵdirectiveInject(PolylineManager)); };\nAgmPolyline.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmPolyline, selectors: [[\"agm-polyline\"]], contentQueries: function AgmPolyline_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylinePoint, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylineIcon, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.points = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.iconSequences = _t);\n    } }, inputs: { clickable: \"clickable\", draggable: [\"polylineDraggable\", \"draggable\"], editable: \"editable\", geodesic: \"geodesic\", visible: \"visible\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\", zIndex: \"zIndex\" }, outputs: { lineClick: \"lineClick\", lineDblClick: \"lineDblClick\", lineDrag: \"lineDrag\", lineDragEnd: \"lineDragEnd\", lineDragStart: \"lineDragStart\", lineMouseDown: \"lineMouseDown\", lineMouseMove: \"lineMouseMove\", lineMouseOut: \"lineMouseOut\", lineMouseOver: \"lineMouseOver\", lineMouseUp: \"lineMouseUp\", lineRightClick: \"lineRightClick\", polyPathChange: \"polyPathChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmPolyline._polylineOptionsAttributes = [\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n    'zIndex',\n];\nAgmPolyline.ctorParameters = () => [\n    { type: PolylineManager }\n];\nAgmPolyline.propDecorators = {\n    clickable: [{ type: Input }],\n    draggable: [{ type: Input, args: ['polylineDraggable',] }],\n    editable: [{ type: Input }],\n    geodesic: [{ type: Input }],\n    strokeColor: [{ type: Input }],\n    strokeOpacity: [{ type: Input }],\n    strokeWeight: [{ type: Input }],\n    visible: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    lineClick: [{ type: Output }],\n    lineDblClick: [{ type: Output }],\n    lineDrag: [{ type: Output }],\n    lineDragEnd: [{ type: Output }],\n    lineDragStart: [{ type: Output }],\n    lineMouseDown: [{ type: Output }],\n    lineMouseMove: [{ type: Output }],\n    lineMouseOut: [{ type: Output }],\n    lineMouseOver: [{ type: Output }],\n    lineMouseUp: [{ type: Output }],\n    lineRightClick: [{ type: Output }],\n    polyPathChange: [{ type: Output }],\n    points: [{ type: ContentChildren, args: [AgmPolylinePoint,] }],\n    iconSequences: [{ type: ContentChildren, args: [AgmPolylineIcon,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmPolyline, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-polyline'\n            }]\n    }], function () { return [{ type: PolylineManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['polylineDraggable']\n        }], editable: [{\n            type: Input\n        }], geodesic: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], lineClick: [{\n            type: Output\n        }], lineDblClick: [{\n            type: Output\n        }], lineDrag: [{\n            type: Output\n        }], lineDragEnd: [{\n            type: Output\n        }], lineDragStart: [{\n            type: Output\n        }], lineMouseDown: [{\n            type: Output\n        }], lineMouseMove: [{\n            type: Output\n        }], lineMouseOut: [{\n            type: Output\n        }], lineMouseOver: [{\n            type: Output\n        }], lineMouseUp: [{\n            type: Output\n        }], lineRightClick: [{\n            type: Output\n        }], polyPathChange: [{\n            type: Output\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], points: [{\n            type: ContentChildren,\n            args: [AgmPolylinePoint]\n        }], iconSequences: [{\n            type: ContentChildren,\n            args: [AgmPolylineIcon]\n        }] }); })();\n\nclass AgmRectangle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Rectangle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this rectangle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this rectangle by dragging the control points shown at\n         * the center and around the circumference of the rectangle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this rectangle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the rectangle's is changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the rectangle.\n         */\n        // tslint:disable-next-line: no-output-native\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the rectangle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the rectangle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the rectangle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the rectangle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the rectangle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the rectangle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._rectangleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addRectangle(this);\n        this._rectangleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._rectangleAddedToManager) {\n            return;\n        }\n        // tslint:disable: no-string-literal\n        if (changes['north'] ||\n            changes['east'] ||\n            changes['south'] ||\n            changes['west']) {\n            this._manager.setBounds(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        // tslint:enable: no-string-literal\n        this._updateRectangleOptionsChanges(changes);\n    }\n    _updateRectangleOptionsChanges(changes) {\n        const options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmRectangle._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach(k => {\n            options[k] = changes[k].currentValue;\n        });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        const events = new Map();\n        events.set('bounds_changed', this.boundsChange);\n        events.set('click', this.rectangleClick);\n        events.set('dblclick', this.rectangleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager\n                .createEventObservable(eventName, this)\n                .subscribe(value => {\n                switch (eventName) {\n                    case 'bounds_changed':\n                        this._manager.getBounds(this).then(bounds => eventEmitter.emit({\n                            north: bounds.getNorthEast().lat(),\n                            east: bounds.getNorthEast().lng(),\n                            south: bounds.getSouthWest().lat(),\n                            west: bounds.getSouthWest().lng(),\n                        }));\n                        break;\n                    default:\n                        eventEmitter.emit(value);\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(s => s.unsubscribe());\n        this._eventSubscriptions = null;\n        this._manager.removeRectangle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Rectangle.\n     */\n    getBounds() {\n        return this._manager.getBounds(this);\n    }\n}\nAgmRectangle.ɵfac = function AgmRectangle_Factory(t) { return new (t || AgmRectangle)(ɵngcc0.ɵɵdirectiveInject(RectangleManager)); };\nAgmRectangle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmRectangle, selectors: [[\"agm-rectangle\"]], inputs: { clickable: \"clickable\", draggable: [\"rectangleDraggable\", \"draggable\"], editable: \"editable\", strokePosition: \"strokePosition\", strokeWeight: \"strokeWeight\", visible: \"visible\", north: \"north\", east: \"east\", south: \"south\", west: \"west\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", zIndex: \"zIndex\" }, outputs: { boundsChange: \"boundsChange\", rectangleClick: \"rectangleClick\", rectangleDblClick: \"rectangleDblClick\", drag: \"drag\", dragEnd: \"dragEnd\", dragStart: \"dragStart\", mouseDown: \"mouseDown\", mouseMove: \"mouseMove\", mouseOut: \"mouseOut\", mouseOver: \"mouseOver\", mouseUp: \"mouseUp\", rightClick: \"rightClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmRectangle._mapOptions = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n];\nAgmRectangle.ctorParameters = () => [\n    { type: RectangleManager }\n];\nAgmRectangle.propDecorators = {\n    north: [{ type: Input }],\n    east: [{ type: Input }],\n    south: [{ type: Input }],\n    west: [{ type: Input }],\n    clickable: [{ type: Input }],\n    draggable: [{ type: Input, args: ['rectangleDraggable',] }],\n    editable: [{ type: Input }],\n    fillColor: [{ type: Input }],\n    fillOpacity: [{ type: Input }],\n    strokeColor: [{ type: Input }],\n    strokeOpacity: [{ type: Input }],\n    strokePosition: [{ type: Input }],\n    strokeWeight: [{ type: Input }],\n    visible: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    boundsChange: [{ type: Output }],\n    rectangleClick: [{ type: Output }],\n    rectangleDblClick: [{ type: Output }],\n    drag: [{ type: Output }],\n    dragEnd: [{ type: Output }],\n    dragStart: [{ type: Output }],\n    mouseDown: [{ type: Output }],\n    mouseMove: [{ type: Output }],\n    mouseOut: [{ type: Output }],\n    mouseOver: [{ type: Output }],\n    mouseUp: [{ type: Output }],\n    rightClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmRectangle, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-rectangle'\n            }]\n    }], function () { return [{ type: RectangleManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['rectangleDraggable']\n        }], editable: [{\n            type: Input\n        }], strokePosition: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], boundsChange: [{\n            type: Output\n        }], rectangleClick: [{\n            type: Output\n        }], rectangleDblClick: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], mouseDown: [{\n            type: Output\n        }], mouseMove: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseUp: [{\n            type: Output\n        }], rightClick: [{\n            type: Output\n        }], north: [{\n            type: Input\n        }], east: [{\n            type: Input\n        }], south: [{\n            type: Input\n        }], west: [{\n            type: Input\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }] }); })();\n\nlet layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\nclass AgmTransitLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$3++).toString();\n        /**\n         * Hide/show transit layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addTransitLayer(this);\n        this._addedToManager = true;\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmTransitLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n}\nAgmTransitLayer.ɵfac = function AgmTransitLayer_Factory(t) { return new (t || AgmTransitLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager)); };\nAgmTransitLayer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AgmTransitLayer, selectors: [[\"agm-transit-layer\"]], inputs: { visible: \"visible\" } });\nAgmTransitLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\nAgmTransitLayer.propDecorators = {\n    visible: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmTransitLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-transit-layer'\n            }]\n    }], function () { return [{ type: LayerManager }]; }, { visible: [{\n            type: Input\n        }] }); })();\n\n/**\n * @internal\n */\nfunction coreDirectives() {\n    return [\n        AgmBicyclingLayer,\n        AgmCircle,\n        AgmDataLayer,\n        AgmFitBounds,\n        AgmFullscreenControl,\n        AgmInfoWindow,\n        AgmKmlLayer,\n        AgmMap,\n        AgmMapTypeControl,\n        AgmMarker,\n        AgmPanControl,\n        AgmPolygon,\n        AgmPolyline,\n        AgmPolylineIcon,\n        AgmPolylinePoint,\n        AgmRectangle,\n        AgmRotateControl,\n        AgmScaleControl,\n        AgmStreetViewControl,\n        AgmTransitLayer,\n        AgmZoomControl,\n    ];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nclass AgmCoreModule {\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    static forRoot(lazyMapsAPILoaderConfig) {\n        return {\n            ngModule: AgmCoreModule,\n            providers: [\n                ...BROWSER_GLOBALS_PROVIDERS, { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n                { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig },\n            ],\n        };\n    }\n}\nAgmCoreModule.ɵfac = function AgmCoreModule_Factory(t) { return new (t || AgmCoreModule)(); };\nAgmCoreModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AgmCoreModule });\nAgmCoreModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmCoreModule, [{\n        type: NgModule,\n        args: [{ declarations: coreDirectives(), exports: coreDirectives() }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AgmCoreModule, { declarations: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl], exports: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl] }); })();\n\n/*\n * Public API Surface of core\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmFullscreenControl, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMapTypeControl, AgmMarker, AgmPanControl, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmRotateControl, AgmScaleControl, AgmStreetViewControl, AgmTransitLayer, AgmZoomControl, CircleManager, DataLayerManager, FitBoundsAccessor, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, coreDirectives, FitBoundsService as ɵa, AgmMapControl as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe };\n\n"],"mappings":"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,KAAK,WAAW,IAAIA,SAAS,WAuDhD;AAAE,CAAC,GAAG;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA,IAiDMirB,UAAU;EAAhB,MAAMA,UAAU,CAAC;IACb/qB,WAAW,CAACgrB,eAAe,EAAE;MACzB,IAAI,CAACA,eAAe,GAAGA,eAAe;MACtC;AACR;AACA;MACQ,IAAI,CAAC1lB,SAAS,GAAG,IAAI;MACrB;AACR;AACA;AACA;MACQ;MACA,IAAI,CAACC,SAAS,GAAG,KAAK;MACtB;AACR;AACA;AACA;MACQ,IAAI,CAACC,QAAQ,GAAG,KAAK;MACrB;AACR;AACA;AACA;AACA;AACA;AACA;MACQ,IAAI,CAACiR,QAAQ,GAAG,KAAK;MACrB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACQ,IAAI,CAACC,KAAK,GAAG,EAAE;MACf;AACR;AACA;MACQ,IAAI,CAACuU,SAAS,GAAG,IAAI5tB,YAAY,EAAE;MACnC;AACR;AACA;MACQ,IAAI,CAAC6tB,YAAY,GAAG,IAAI7tB,YAAY,EAAE;MACtC;AACR;AACA;MACQ,IAAI,CAAC8tB,QAAQ,GAAG,IAAI9tB,YAAY,EAAE;MAClC;AACR;AACA;MACQ,IAAI,CAAC+tB,WAAW,GAAG,IAAI/tB,YAAY,EAAE;MACrC;AACR;AACA;MACQ,IAAI,CAACguB,aAAa,GAAG,IAAIhuB,YAAY,EAAE;MACvC;AACR;AACA;MACQ,IAAI,CAACiuB,aAAa,GAAG,IAAIjuB,YAAY,EAAE;MACvC;AACR;AACA;MACQ,IAAI,CAACkuB,aAAa,GAAG,IAAIluB,YAAY,EAAE;MACvC;AACR;AACA;MACQ,IAAI,CAACmuB,YAAY,GAAG,IAAInuB,YAAY,E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"},"metadata":{},"sourceType":"module","externalDependencies":[]}