{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Car } from 'src/app/model/Car';\nimport { CarTypeEnum } from 'src/app/model/CarTypeEnum';\nimport { FuelTypeEnum } from 'src/app/model/FuelTypeEnum';\nlet CarEditorComponent = class CarEditorComponent {\n  constructor(formBuilder, carHttpService, carDealerHttpService, dialogRef, data) {\n    this.formBuilder = formBuilder;\n    this.carHttpService = carHttpService;\n    this.carDealerHttpService = carDealerHttpService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.car = new Car();\n    this.saveCar = new EventEmitter();\n    this.carTypes = Object.values(CarTypeEnum).filter(carType => isNaN(Number(carType)));\n    this.fuelTypes = Object.values(FuelTypeEnum).filter(fuelType => isNaN(Number(fuelType)));\n    this.selectedPhoto = null;\n    this.photoPreviewUrl = \"\";\n    this.carForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: [0, Validators.required],\n      numberOfPassengers: [0, Validators.required],\n      numberOfBags: [0, Validators.required],\n      minimumAgeWithoutFee: [0, Validators.required],\n      automaker: ['', Validators.required],\n      photoPath: [''],\n      automatic: [false],\n      discountApplicable: [false],\n      carDealer: ['', Validators.required],\n      carType: [CarTypeEnum.SEDAN, Validators.required],\n      fuelType: [FuelTypeEnum.GASOLINE, Validators.required] // Set default enum value\n    });\n  }\n\n  ngOnInit() {\n    if (this.data.car.name) {\n      this.loadCar(this.data.car);\n    }\n  }\n  loadCar(car) {\n    this.carForm.controls['name'].setValue(car.name);\n    this.carForm.controls['automaker'].setValue(car.automaker);\n    this.carForm.controls['price'].setValue(car.price);\n    this.carForm.controls['numberOfPassengers'].setValue(car.numberOfPassengers);\n    this.carForm.controls['numberOfBags'].setValue(car.numberOfBags);\n    this.carForm.controls['minimumAgeWithoutFee'].setValue(car.minimumAgeWithoutFee);\n    this.photoPreviewUrl = car.photoPath;\n    this.carForm.controls['automatic'].setValue(car.automatic);\n  }\n  onSaveCar() {\n    console.log(\"save\");\n    // if (this.carForm.valid) {\n    this.car.name = this.carForm.controls['name'].value;\n    this.car.automaker = this.carForm.controls['automaker'].value;\n    this.car.price = this.carForm.controls['price'].value;\n    this.car.numberOfPassengers = this.carForm.controls['numberOfPassengers'].value;\n    this.car.numberOfBags = this.carForm.controls['numberOfBags'].value;\n    this.car.minimumAgeWithoutFee = this.carForm.controls['minimumAgeWithoutFee'].value;\n    this.car.photoPath = this.photoPreviewUrl;\n    this.car.automatic = this.carForm.controls['automatic'].value;\n    // this.car.carDealer = this.carForm.controls['carDealer'].value;\n    // this.car.carType = this.carForm.controls['carType'].value;\n    // this.car.fuelType = this.carForm.controls['fuelType'].value;\n    console.log(this.car);\n    console.log(\"save call\");\n    this.carHttpService.save(this.car).subscribe({\n      next: car => {\n        this.dialogRef.close(car);\n        console.log(\"Success\");\n      },\n      error: () => console.log(\"Error\")\n    });\n    // }\n  }\n\n  onPhotoSelected(event) {\n    const inputElement = event.target;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedPhoto = inputElement.files[0];\n      // Read the selected file and display the preview\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.photoPreviewUrl = reader.result;\n      };\n      reader.readAsDataURL(this.selectedPhoto);\n    }\n  }\n};\n__decorate([Input()], CarEditorComponent.prototype, \"car\", void 0);\n__decorate([Output()], CarEditorComponent.prototype, \"saveCar\", void 0);\nCarEditorComponent = __decorate([Component({\n  selector: 'app-car-editor',\n  templateUrl: './car-editor.component.html',\n  styleUrls: ['./car-editor.component.css']\n}), __param(4, Inject(MAT_DIALOG_DATA))], CarEditorComponent);\nexport { CarEditorComponent };","map":{"version":3,"mappings":"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","names":["Component","Input","Output","EventEmitter","Inject","Validators","MAT_DIALOG_DATA","Car","CarTypeEnum","FuelTypeEnum","CarEditorComponent","constructor","formBuilder","carHttpService","carDealerHttpService","dialogRef","data","Object","values","filter","carType","isNaN","Number","fuelType","carForm","group","name","required","price","numberOfPassengers","numberOfBags","minimumAgeWithoutFee","automaker","photoPath","automatic","discountApplicable","carDealer","SEDAN","GASOLINE","ngOnInit","car","loadCar","controls","setValue","photoPreviewUrl","onSaveCar","console","log","value","save","subscribe","next","close","error","onPhotoSelected","event","inputElement","target","files","length","selectedPhoto","reader","FileReader","onload","result","readAsDataURL","__decorate","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/car/car-editor/car-editor.component.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CarHttpService } from 'src/app/http-service/car-http.service';\nimport { Car } from 'src/app/model/Car';\nimport { CarTypeEnum } from 'src/app/model/CarTypeEnum';\nimport { FuelTypeEnum } from 'src/app/model/FuelTypeEnum';\n\n@Component({\n  selector: 'app-car-editor',\n  templateUrl: './car-editor.component.html',\n  styleUrls: ['./car-editor.component.css'],\n})\nexport class CarEditorComponent {\n  @Input() car: Car = new Car();\n  @Output() saveCar = new EventEmitter<Car>();\n\n  carTypes = Object.values(CarTypeEnum).filter(carType => isNaN(Number(carType)));\n  fuelTypes = Object.values(FuelTypeEnum).filter(fuelType => isNaN(Number(fuelType)));\n\n  carForm: FormGroup;\n  selectedPhoto: File | null = null;\n  photoPreviewUrl: String = \"\";\n  \n  constructor(private formBuilder: FormBuilder,\n    private readonly carHttpService: CarHttpService,\n    private readonly carDealerHttpService: CarDealerHttpService,\n    public dialogRef: MatDialogRef<CarEditorComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) {\n    this.carForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: [0, Validators.required],\n      numberOfPassengers: [0, Validators.required],\n      numberOfBags: [0, Validators.required],\n      minimumAgeWithoutFee: [0, Validators.required],\n      automaker: ['', Validators.required],\n      photoPath: [''],\n      automatic: [false],\n      discountApplicable: [false],\n      carDealer: ['', Validators.required],\n      carType: [CarTypeEnum.SEDAN, Validators.required], // Set default enum value\n      fuelType: [FuelTypeEnum.GASOLINE, Validators.required], // Set default enum value\n    });\n  }\n\n  ngOnInit(): void {\n    if(this.data.car.name){\n      this.loadCar(this.data.car);\n    }\n  }\n\n  loadCar(car: Car): void {\n    this.carForm.controls['name'].setValue(car.name);\n    this.carForm.controls['automaker'].setValue(car.automaker);\n    this.carForm.controls['price'].setValue(car.price);\n    this.carForm.controls['numberOfPassengers'].setValue(car.numberOfPassengers);\n    this.carForm.controls['numberOfBags'].setValue(car.numberOfBags);\n    this.carForm.controls['minimumAgeWithoutFee'].setValue(car.minimumAgeWithoutFee);\n    this.photoPreviewUrl = car.photoPath;\n    this.carForm.controls['automatic'].setValue(car.automatic);\n\n    }\n\n  onSaveCar(): void {\n    console.log(\"save\")\n    // if (this.carForm.valid) {\n      this.car.name = this.carForm.controls['name'].value;\n      this.car.automaker = this.carForm.controls['automaker'].value;\n      this.car.price = this.carForm.controls['price'].value;\n      this.car.numberOfPassengers = this.carForm.controls['numberOfPassengers'].value;\n      this.car.numberOfBags = this.carForm.controls['numberOfBags'].value;\n      this.car.minimumAgeWithoutFee = this.carForm.controls['minimumAgeWithoutFee'].value;\n      this.car.photoPath = this.photoPreviewUrl as string;\n      this.car.automatic = this.carForm.controls['automatic'].value;\n      // this.car.carDealer = this.carForm.controls['carDealer'].value;\n      // this.car.carType = this.carForm.controls['carType'].value;\n      // this.car.fuelType = this.carForm.controls['fuelType'].value;\n\n\n      console.log(this.car)\n      console.log(\"save call\")\n      this.carHttpService.save(this.car).subscribe({\n        next: car => {\n          this.dialogRef.close(car);\n          console.log(\"Success\");\n        },\n        error: () => console.log(\"Error\")\n      });\n    // }\n  }\n  onPhotoSelected(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedPhoto = inputElement.files[0];\n\n      // Read the selected file and display the preview\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.photoPreviewUrl = reader.result as String;\n      };\n      reader.readAsDataURL(this.selectedPhoto);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}