{"ast":null,"code":"import { __awaiter, __decorate, __param } from \"tslib\";\nimport { Component, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BaseOption } from 'src/app/model/BaseOption';\nimport { Car } from 'src/app/model/Car';\nimport { CarTypeEnum } from 'src/app/model/CarTypeEnum';\nimport { FuelTypeEnum } from 'src/app/model/FuelTypeEnum';\nlet CarEditorComponent = class CarEditorComponent {\n  constructor(formBuilder, carHttpService, carDealerHttpService, dialogRef, data) {\n    this.formBuilder = formBuilder;\n    this.carHttpService = carHttpService;\n    this.carDealerHttpService = carDealerHttpService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.car = new Car();\n    this.saveCar = new EventEmitter();\n    this.carTypesBaseOptions = this.toBaseList(CarTypeEnum);\n    this.fuelTypesBaseOptions = this.toBaseList(FuelTypeEnum);\n    this.carDealersNames = [];\n    this.selectedPhoto = null;\n    this.photoPreviewUrl = \"\";\n    this.carForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: [0, Validators.required],\n      numberOfPassengers: [0, Validators.required],\n      numberOfBags: [0, Validators.required],\n      minimumAgeWithoutFee: [0, Validators.required],\n      automaker: ['', Validators.required],\n      photoPath: [''],\n      automatic: [false],\n      discountApplicable: [false],\n      carDealer: ['', Validators.required],\n      carType: [CarTypeEnum.SEDAN, Validators.required],\n      fuelType: [FuelTypeEnum.GASOLINE, Validators.required] // Set default enum value\n    });\n  }\n\n  ngOnInit() {\n    if (this.data.car.name) {\n      this.loadCar(this.data.car);\n    } else {\n      this.carDealerHttpService.getCarDealersNames().subscribe({\n        next: carDealersNames => {\n          this.carDealersNames = carDealersNames;\n          console.log(\"Success\");\n        },\n        error: () => console.log(\"Error\")\n      });\n    }\n  }\n  loadCar(car) {\n    this.carForm.controls['name'].setValue(car.name);\n    this.carForm.controls['automaker'].setValue(car.automaker);\n    this.carForm.controls['price'].setValue(car.price);\n    this.carForm.controls['numberOfPassengers'].setValue(car.numberOfPassengers);\n    this.carForm.controls['numberOfBags'].setValue(car.numberOfBags);\n    this.carForm.controls['minimumAgeWithoutFee'].setValue(car.minimumAgeWithoutFee);\n    this.photoPreviewUrl = car.photoPath;\n    this.carForm.controls['automatic'].setValue(car.automatic);\n    this.carForm.controls['carDealer'].setValue(car.carDealer);\n    this.carForm.controls['carType'].setValue(car.carType);\n    this.carForm.controls['fuelType'].setValue(car.fuelType);\n    this.carForm.controls['discountApplicable'].setValue(car.discountApplicable);\n  }\n  onSaveCar() {\n    console.log(\"save\");\n    // if (this.carForm.valid) {\n    this.car.name = this.carForm.controls['name'].value;\n    this.car.automaker = this.carForm.controls['automaker'].value;\n    this.car.price = this.carForm.controls['price'].value;\n    this.car.numberOfPassengers = this.carForm.controls['numberOfPassengers'].value;\n    this.car.numberOfBags = this.carForm.controls['numberOfBags'].value;\n    this.car.minimumAgeWithoutFee = this.carForm.controls['minimumAgeWithoutFee'].value;\n    this.car.photoPath = this.photoPreviewUrl;\n    this.car.automatic = this.carForm.controls['automatic'].value;\n    this.car.carDealer = this.carForm.controls['carDealer'].value;\n    this.car.carType = this.carForm.controls['carType'].value;\n    this.car.fuelType = this.carForm.controls['fuelType'].value;\n    console.log(this.car);\n    console.log(\"save call\");\n    this.carHttpService.save(this.car).subscribe({\n      next: car => {\n        this.dialogRef.close(car);\n        console.log(\"Success\");\n      },\n      error: () => console.log(\"Error\")\n    });\n    // }\n  }\n\n  onPhotoSelected(event) {\n    const inputElement = event.target;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedPhoto = inputElement.files[0];\n      // Read the selected file and display the preview\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.photoPreviewUrl = reader.result;\n      };\n      reader.readAsDataURL(this.selectedPhoto);\n    }\n  }\n  toBaseList(enumeration) {\n    let baseOptions = [];\n    Object.keys(enumeration).filter(key => !Number(key) && key !== \"0\").forEach(key => __awaiter(this, void 0, void 0, function* () {\n      let translatedValue = enumeration[key];\n      baseOptions.push(new BaseOption(key, translatedValue));\n    }));\n    return baseOptions;\n  }\n};\n__decorate([Input()], CarEditorComponent.prototype, \"car\", void 0);\n__decorate([Output()], CarEditorComponent.prototype, \"saveCar\", void 0);\nCarEditorComponent = __decorate([Component({\n  selector: 'app-car-editor',\n  templateUrl: './car-editor.component.html',\n  styleUrls: ['./car-editor.component.css']\n}), __param(4, Inject(MAT_DIALOG_DATA))], CarEditorComponent);\nexport { CarEditorComponent };","map":{"version":3,"mappings":"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","names":["Component","Input","Output","EventEmitter","Inject","Validators","MAT_DIALOG_DATA","BaseOption","Car","CarTypeEnum","FuelTypeEnum","CarEditorComponent","constructor","formBuilder","carHttpService","carDealerHttpService","dialogRef","data","toBaseList","carForm","group","name","required","price","numberOfPassengers","numberOfBags","minimumAgeWithoutFee","automaker","photoPath","automatic","discountApplicable","carDealer","carType","SEDAN","fuelType","GASOLINE","ngOnInit","car","loadCar","getCarDealersNames","subscribe","next","carDealersNames","console","log","error","controls","setValue","photoPreviewUrl","onSaveCar","value","save","close","onPhotoSelected","event","inputElement","target","files","length","selectedPhoto","reader","FileReader","onload","result","readAsDataURL","enumeration","baseOptions","Object","keys","filter","key","Number","forEach","__awaiter","translatedValue","push","__decorate","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/car/car-editor/car-editor.component.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CarDealerHttpService } from 'src/app/http-service/car-dealer-http.service';\nimport { CarHttpService } from 'src/app/http-service/car-http.service';\nimport { BaseOption } from 'src/app/model/BaseOption';\nimport { Car } from 'src/app/model/Car';\nimport { CarTypeEnum } from 'src/app/model/CarTypeEnum';\nimport { FuelTypeEnum } from 'src/app/model/FuelTypeEnum';\n\n@Component({\n  selector: 'app-car-editor',\n  templateUrl: './car-editor.component.html',\n  styleUrls: ['./car-editor.component.css'],\n})\nexport class CarEditorComponent {\n  @Input() car: Car = new Car();\n  @Output() saveCar = new EventEmitter<Car>();\n\n  carTypesBaseOptions = this.toBaseList(CarTypeEnum)\n  fuelTypesBaseOptions = this.toBaseList(FuelTypeEnum)\n  carDealersNames: String[] = [];\n\n  carForm: FormGroup;\n  selectedPhoto: File | null = null;\n  photoPreviewUrl: String = \"\";\n  \n  constructor(private formBuilder: FormBuilder,\n    private readonly carHttpService: CarHttpService,\n    private readonly carDealerHttpService: CarDealerHttpService,\n    public dialogRef: MatDialogRef<CarEditorComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) {\n    this.carForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: [0, Validators.required],\n      numberOfPassengers: [0, Validators.required],\n      numberOfBags: [0, Validators.required],\n      minimumAgeWithoutFee: [0, Validators.required],\n      automaker: ['', Validators.required],\n      photoPath: [''],\n      automatic: [false],\n      discountApplicable: [false],\n      carDealer: ['', Validators.required],\n      carType: [CarTypeEnum.SEDAN, Validators.required], // Set default enum value\n      fuelType: [FuelTypeEnum.GASOLINE, Validators.required], // Set default enum value\n    });\n  }\n\n  ngOnInit(): void {\n    if(this.data.car.name){\n      this.loadCar(this.data.car);\n    } else{\n      this.carDealerHttpService.getCarDealersNames().subscribe({\n        next: carDealersNames => {\n          this.carDealersNames = carDealersNames;\n          console.log(\"Success\");\n        },\n        error: () => console.log(\"Error\")\n      });\n    }    \n  }\n\n  loadCar(car: Car): void {\n    this.carForm.controls['name'].setValue(car.name);\n    this.carForm.controls['automaker'].setValue(car.automaker);\n    this.carForm.controls['price'].setValue(car.price);\n    this.carForm.controls['numberOfPassengers'].setValue(car.numberOfPassengers);\n    this.carForm.controls['numberOfBags'].setValue(car.numberOfBags);\n    this.carForm.controls['minimumAgeWithoutFee'].setValue(car.minimumAgeWithoutFee);\n    this.photoPreviewUrl = car.photoPath;\n    this.carForm.controls['automatic'].setValue(car.automatic);\n    this.carForm.controls['carDealer'].setValue(car.carDealer);\n    this.carForm.controls['carType'].setValue(car.carType);\n    this.carForm.controls['fuelType'].setValue(car.fuelType);\n    this.carForm.controls['discountApplicable'].setValue(car.discountApplicable);\n    }\n\n  onSaveCar(): void {\n    console.log(\"save\")\n    // if (this.carForm.valid) {\n      this.car.name = this.carForm.controls['name'].value;\n      this.car.automaker = this.carForm.controls['automaker'].value;\n      this.car.price = this.carForm.controls['price'].value;\n      this.car.numberOfPassengers = this.carForm.controls['numberOfPassengers'].value;\n      this.car.numberOfBags = this.carForm.controls['numberOfBags'].value;\n      this.car.minimumAgeWithoutFee = this.carForm.controls['minimumAgeWithoutFee'].value;\n      this.car.photoPath = this.photoPreviewUrl as string;\n      this.car.automatic = this.carForm.controls['automatic'].value;\n      this.car.carDealer = this.carForm.controls['carDealer'].value;\n      this.car.carType = this.carForm.controls['carType'].value;\n      this.car.fuelType = this.carForm.controls['fuelType'].value;\n\n\n      console.log(this.car)\n      console.log(\"save call\")\n      this.carHttpService.save(this.car).subscribe({\n        next: car => {\n          this.dialogRef.close(car);\n          console.log(\"Success\");\n        },\n        error: () => console.log(\"Error\")\n      });\n    // }\n  }\n  onPhotoSelected(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedPhoto = inputElement.files[0];\n\n      // Read the selected file and display the preview\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.photoPreviewUrl = reader.result as String;\n      };\n      reader.readAsDataURL(this.selectedPhoto);\n    }\n  }\n\n  toBaseList(enumeration: any) {\n    let baseOptions: BaseOption[] = [];\n\n    Object.keys(enumeration)\n      .filter((key) => !Number(key) && key !== \"0\")\n      .forEach(async (key) => {\n        let translatedValue = enumeration[key];\n\n        baseOptions.push(new BaseOption(key, translatedValue));\n      });\n    return baseOptions;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}