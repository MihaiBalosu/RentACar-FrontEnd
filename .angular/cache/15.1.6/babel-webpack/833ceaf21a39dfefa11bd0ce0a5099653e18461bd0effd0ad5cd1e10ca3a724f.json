{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Car, CarTypeEnum, FuelTypeEnum } from './car.enum';\nlet CarEditorComponent = class CarEditorComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.car = new Car();\n    this.saveCar = new EventEmitter();\n    this.carTypes = Object.values(CarTypeEnum);\n    this.fuelTypes = Object.values(FuelTypeEnum);\n    this.selectedPhoto = null;\n    this.carForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: [0, Validators.required],\n      numberOfPassengers: [0, Validators.required],\n      numberOfBags: [0, Validators.required],\n      minimumAgeWithoutFee: [0, Validators.required],\n      automaker: ['', Validators.required],\n      photoPath: [''],\n      automatic: [false],\n      discountApplicable: [false],\n      carDealer: ['', Validators.required],\n      carType: [null, Validators.required],\n      fuelType: [null, Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.carForm.patchValue(this.car);\n  }\n  onSaveCar() {\n    if (this.carForm.valid) {\n      const carData = Object.assign(Object.assign({}, this.car), this.carForm.value);\n      this.saveCar.emit(carData);\n    }\n  }\n  onPhotoSelected(event) {\n    const inputElement = event.target;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedPhoto = inputElement.files[0];\n      // You can perform additional actions like showing a preview of the selected photo, etc.\n    }\n  }\n};\n\n__decorate([Input()], CarEditorComponent.prototype, \"car\", void 0);\n__decorate([Output()], CarEditorComponent.prototype, \"saveCar\", void 0);\nCarEditorComponent = __decorate([Component({\n  selector: 'app-car-editor',\n  templateUrl: './car-editor.component.html',\n  styleUrls: ['./car-editor.component.css']\n})], CarEditorComponent);\nexport { CarEditorComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}