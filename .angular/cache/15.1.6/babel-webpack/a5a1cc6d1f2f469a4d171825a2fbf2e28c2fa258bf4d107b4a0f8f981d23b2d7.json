{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../http-service/authentication-http.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/icon\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authenticationHttpService) {\n      this.authenticationHttpService = authenticationHttpService;\n      this.loginData = {\n        email: '',\n        password: ''\n      };\n      this.hidePassword = true;\n    }\n    onLoginSubmit() {\n      this.authenticationHttpService.login(this.loginData.email, this.loginData.password).subscribe({\n        next: result => {\n          console.log(\"Success\");\n          localStorage.setItem(\"jwtToken\", result.token);\n        },\n        error: err => console.log(\"Error\")\n      });\n    }\n    togglePasswordVisibility() {\n      this.hidePassword = !this.hidePassword;\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationHttpService));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 24,\n    vars: 4,\n    consts: [[1, \"login-container\"], [1, \"login-card\"], [1, \"login-header\"], [1, \"login-title\"], [1, \"login-body\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"appearance\", \"outline\", 1, \"w-100\"], [1, \"input-with-icon\"], [1, \"icon-align\", \"email-icon\"], [\"matInput\", \"\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [1, \"icon-align\", \"password-icon\"], [\"matInput\", \"\", \"name\", \"password\", \"required\", \"\", \"placeholder\", \"Password\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"eye-button\", 3, \"click\"], [1, \"password-visibility-icon\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n        i0.ɵɵtext(4, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onLoginSubmit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"mat-form-field\", 7)(9, \"div\", 8)(10, \"mat-icon\", 9);\n        i0.ɵɵtext(11, \"email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.loginData.email = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(13, \"div\", 6)(14, \"mat-form-field\", 7)(15, \"div\", 8)(16, \"mat-icon\", 11);\n        i0.ɵɵtext(17, \"vpn_key\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.loginData.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n          return ctx.togglePasswordVisibility();\n        });\n        i0.ɵɵelementStart(20, \"mat-icon\", 14);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(22, \"button\", 15);\n        i0.ɵɵtext(23, \"Login\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.loginData.email);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"type\", ctx.hidePassword ? \"password\" : \"text\")(\"ngModel\", ctx.loginData.password);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.hidePassword ? \"visibility_off\" : \"visibility\");\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i3.MatIconButton, i4.MatFormField, i5.MatInput, i6.MatIcon],\n    styles: [\".login-container[_ngcontent-%COMP%] {\\n  height: 100vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.login-card[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 400px;\\n  background-color: #fff;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n}\\n\\n.login-header[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  color: #fff;\\n  text-align: center;\\n  padding: 20px;\\n  border-top-left-radius: 8px;\\n  border-top-right-radius: 8px;\\n}\\n\\n.login-title[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-size: 24px;\\n}\\n\\n.login-body[_ngcontent-%COMP%] {\\n  padding: 20px;\\n}\\n\\n.mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 64px; \\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  width: 100%;\\n}\\n\\n.input-with-icon[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.icon-align[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n  font-size: 24px;\\n  height: 24px;\\n  width: 24px;\\n}\\n\\n.email-icon[_ngcontent-%COMP%], .password-icon[_ngcontent-%COMP%] {\\n  height: 24px;\\n  width: 24px;\\n}\\n\\nmat-icon-button[_ngcontent-%COMP%] {\\n  height: 24px;\\n  width: 32px; \\n  margin-left: 0px; \\n}\\n\\n.eye-button[_ngcontent-%COMP%] {\\n  height: 24px; \\n  width: 32px; \\n}\\n\\n.password-visibility-icon[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0px;\\n  left: 0px;\\n  height: 24px; \\n  width: 32px; \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3QkFBd0I7QUFDeEI7RUFDRSxhQUFhO0VBQ2IsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLDJCQUEyQjtFQUMzQiw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSxTQUFTO0VBQ1QsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZLEVBQUUsOENBQThDO0FBQzlEOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsZUFBZTtFQUNmLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7O0VBRUUsWUFBWTtFQUNaLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztFQUNULFlBQVk7RUFDWixXQUFXO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBsb2dpbi5jb21wb25lbnQuY3NzICovXG4ubG9naW4tY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5sb2dpbi1jYXJkIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYm94LXNoYWRvdzogMCA0cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cblxuLmxvZ2luLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDhweDtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDhweDtcbn1cblxuLmxvZ2luLXRpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IDI0cHg7XG59XG5cbi5sb2dpbi1ib2R5IHtcbiAgcGFkZGluZzogMjBweDtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNjRweDsgLyogU2V0IGEgZml4ZWQgaGVpZ2h0IGZvciB0aGUgbWF0LWZvcm0tZmllbGQgKi9cbn1cblxuLmJ0biB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uaW5wdXQtd2l0aC1pY29uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmljb24tYWxpZ24ge1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBoZWlnaHQ6IDI0cHg7XG4gIHdpZHRoOiAyNHB4O1xufVxuXG4uZW1haWwtaWNvbixcbi5wYXNzd29yZC1pY29uIHtcbiAgaGVpZ2h0OiAyNHB4O1xuICB3aWR0aDogMjRweDtcbn1cblxubWF0LWljb24tYnV0dG9uIHtcbiAgaGVpZ2h0OiAyNHB4O1xuICB3aWR0aDogMzJweDsgXG4gIG1hcmdpbi1sZWZ0OiAwcHg7IFxufVxuXG4uZXllLWJ1dHRvbiB7XG4gIGhlaWdodDogMjRweDsgXG4gIHdpZHRoOiAzMnB4OyBcbn1cblxuLnBhc3N3b3JkLXZpc2liaWxpdHktaWNvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwcHg7XG4gIGxlZnQ6IDBweDtcbiAgaGVpZ2h0OiAyNHB4OyBcbiAgd2lkdGg6IDMycHg7IFxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n  return LoginComponent;\n})();","map":{"version":3,"mappings":";;;;;;;AASA,WAAaA,cAAc;EAArB,MAAOA,cAAc;IAOzBC,YACmBC,yBAAoD;MAApD,8BAAyB,GAAzBA,yBAAyB;MAP5C,cAAS,GAAG;QACVC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;OACX;MACD,iBAAY,GAAY,IAAI;IAK5B;IAEAC,aAAa;MACX,IAAI,CAACH,yBAAyB,CAACI,KAAK,CAAC,IAAI,CAACC,SAAS,CAACJ,KAAK,EAAE,IAAI,CAACI,SAAS,CAACH,QAAQ,CAAC,CAACI,SAAS,CAAC;QAC5FC,IAAI,EAAEC,MAAM,IAAG;UACbC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;UACtBC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEJ,MAAM,CAACK,KAAK,CAAC;QAChD,CAAC;QACDC,KAAK,EAAEC,GAAG,IAAIN,OAAO,CAACC,GAAG,CAAC,OAAO;OAClC,CAAC;IAAG;IAEPM,wBAAwB;MACtB,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;IACxC;;;qBAvBWnB,cAAc;EAAA;;UAAdA,cAAc;IAAAoB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCT3BC,8BAA6B;QAGCA,qBAAK;QAAAA,iBAAK;QAEpCA,8BAAwB;QAChBA;UAAA,OAAYC,mBAAe;QAAA,EAAC;QAChCD,8BAAwB;QAGsBA,sBAAK;QAAAA,iBAAW;QACxDA,kCAAqG;QAA3DA;UAAA;QAAA,EAA6B;QAAvEA,iBAAqG;QAI3GA,+BAAwB;QAGyBA,wBAAO;QAAAA,iBAAW;QAC7DA,kCAA6I;QAAjEA;UAAA;QAAA,EAAgC;QAA5GA,iBAA6I;QAC7IA,mCAA8F;QAAxDA;UAAA,OAASC,8BAA0B;QAAA,EAAC;QACxED,qCAA2C;QAAAA,aAAoD;QAAAA,iBAAW;QAKlHA,mCAAwD;QAAAA,sBAAK;QAAAA,iBAAS;;;QAftBA,gBAA6B;QAA7BA,6CAA6B;QAQvDA,eAA2C;QAA3CA,6DAA2C;QAEdA,eAAoD;QAApDA,wEAAoD;;;;;;SDZlGzB,cAAc;AAAA","names":["LoginComponent","constructor","authenticationHttpService","email","password","onLoginSubmit","login","loginData","subscribe","next","result","console","log","localStorage","setItem","token","error","err","togglePasswordVisibility","hidePassword","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/login/login.component.ts","/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/login/login.component.html"],"sourcesContent":["// login.component.ts\nimport { Component } from '@angular/core';\nimport { AuthenticationHttpService } from '../http-service/authentication-http.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  loginData = {\n    email: '',\n    password: ''\n  };\n  hidePassword: boolean = true;\n\n  constructor(\n    private readonly authenticationHttpService: AuthenticationHttpService,\n  ) {\n  }\n  \n  onLoginSubmit() {\n    this.authenticationHttpService.login(this.loginData.email, this.loginData.password).subscribe({\n      next: result => {\n        console.log(\"Success\");\n        localStorage.setItem(\"jwtToken\", result.token);\n      },\n      error: err => console.log(\"Error\")\n    });  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n}\n","<div class=\"login-container\">\n  <div class=\"login-card\">\n    <div class=\"login-header\">\n      <h3 class=\"login-title\">Login</h3>\n    </div>\n    <div class=\"login-body\">\n      <form (ngSubmit)=\"onLoginSubmit()\">\n        <div class=\"form-group\">\n          <mat-form-field appearance=\"outline\" class=\"w-100\">\n            <div class=\"input-with-icon\">\n              <mat-icon class=\"icon-align email-icon\">email</mat-icon>\n              <input matInput type=\"email\" name=\"email\" [(ngModel)]=\"loginData.email\" required placeholder=\"Email\">\n            </div>\n          </mat-form-field>\n        </div>\n        <div class=\"form-group\">\n          <mat-form-field appearance=\"outline\" class=\"w-100\">\n            <div class=\"input-with-icon\">\n              <mat-icon class=\"icon-align password-icon\">vpn_key</mat-icon>\n              <input matInput [type]=\"hidePassword ? 'password' : 'text'\" name=\"password\" [(ngModel)]=\"loginData.password\" required placeholder=\"Password\">\n              <button mat-icon-button type=\"button\" (click)=\"togglePasswordVisibility()\" class=\"eye-button\">\n                <mat-icon class=\"password-visibility-icon\">{{ hidePassword ? 'visibility_off' : 'visibility' }}</mat-icon>\n              </button>\n            </div>\n          </mat-form-field>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-block\">Login</button>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}