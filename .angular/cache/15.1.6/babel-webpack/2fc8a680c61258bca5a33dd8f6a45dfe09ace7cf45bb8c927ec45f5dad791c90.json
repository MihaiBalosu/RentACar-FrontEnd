{"ast":null,"code":"import { Car } from 'src/app/model/Car';\nimport { CarEditorComponent } from '../car-editor/car-editor.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/http-service/car-http.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nfunction CarListComponent_tr_15_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 6);\n  }\n  if (rf & 2) {\n    const car_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", car_r1.photoPath, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction CarListComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, CarListComponent_tr_15_img_4_Template, 1, 1, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CarListComponent_tr_15_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const car_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onEditCar(car_r1));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CarListComponent_tr_15_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const car_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onRemoveCar(car_r1));\n    });\n    i0.ɵɵtext(13, \"Remove\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const car_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(car_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", car_r1.photoPath);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(car_r1.carDealer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(car_r1.fuelType);\n  }\n}\nexport let CarListComponent = /*#__PURE__*/(() => {\n  class CarListComponent {\n    constructor(dialog, carHttpService) {\n      this.dialog = dialog;\n      this.carHttpService = carHttpService;\n      this.cars = [];\n    }\n    ngOnInit() {\n      this.getCars();\n    }\n    getCars() {\n      this.carHttpService.getAllCars().subscribe({\n        next: carsList => {\n          this.cars = carsList;\n          console.log(\"Success\");\n        },\n        error: () => console.log(\"Error\")\n      });\n    }\n    // Add methods for edit and remove functionalities\n    onEditCar(car) {\n      const dialogRef = this.dialog.open(CarEditorComponent, {\n        width: '600px',\n        data: {\n          car\n        } // Pass the car object to the CarEditorComponent through data\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        // The result contains the edited car or undefined if the dialog was closed without saving\n        if (result) {\n          // Update the car data in the list or perform any other action with the edited car\n          console.log('Edited Car:', result);\n        }\n      });\n    }\n    onCreateCar() {\n      const dialogRef = this.dialog.open(CarEditorComponent, {\n        width: '600px',\n        data: {\n          car: new Car()\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.cars.push(result);\n          console.log('Created Car:', result);\n        }\n      });\n    }\n    onRemoveCar(car) {\n      this.carHttpService.removeCar(car.id).subscribe({\n        next: () => {\n          console.log(\"Car removed\");\n          this.getCars();\n        },\n        error: () => console.log(\"Error\")\n      });\n    }\n  }\n  CarListComponent.ɵfac = function CarListComponent_Factory(t) {\n    return new (t || CarListComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.CarHttpService));\n  };\n  CarListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CarListComponent,\n    selectors: [[\"app-car-list\"]],\n    inputs: {\n      cars: \"cars\"\n    },\n    decls: 16,\n    vars: 1,\n    consts: [[1, \"button-container\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"car-table\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"Car Photo\", \"class\", \"car-photo\", 3, \"src\", 4, \"ngIf\"], [3, \"click\"], [\"alt\", \"Car Photo\", 1, \"car-photo\", 3, \"src\"]],\n    template: function CarListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CarListComponent_Template_button_click_1_listener() {\n          return ctx.onCreateCar();\n        });\n        i0.ɵɵtext(2, \"Create Car\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"table\", 2)(4, \"tr\")(5, \"th\");\n        i0.ɵɵtext(6, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\");\n        i0.ɵɵtext(8, \"Photo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Dealer Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Fuel Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"Actions\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, CarListComponent_tr_15_Template, 14, 4, \"tr\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cars);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.MatButton],\n    styles: [\".car-table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    border-collapse: collapse;\\n    margin-top: 20px;\\n  }\\n  \\n  .car-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .car-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    border: 1px solid #ddd;\\n    padding: 8px;\\n    text-align: left;\\n  }\\n  \\n  .car-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    background-color: #f2f2f2;\\n  }\\n  \\n  .car-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even) {\\n    background-color: #f2f2f2;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    margin-right: 5px;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FyL2Nhci1saXN0L2Nhci1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCOztBQUUzQjtJQUNJLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIsZ0JBQWdCO0VBQ2xCOztFQUVBOztJQUVFLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UsaUJBQWlCO0VBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLyogY2FyLWxpc3QuY29tcG9uZW50LmNzcyAqL1xuXG4uY2FyLXRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gIH1cbiAgXG4gIC5jYXItdGFibGUgdGgsXG4gIC5jYXItdGFibGUgdGQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gICAgcGFkZGluZzogOHB4O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbiAgXG4gIC5jYXItdGFibGUgdGgge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XG4gIH1cbiAgXG4gIC5jYXItdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xuICB9XG4gIFxuICBidXR0b24ge1xuICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n  return CarListComponent;\n})();","map":{"version":3,"mappings":"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","names":["Car","CarEditorComponent","i0","CarListComponent","constructor","dialog","carHttpService","ngOnInit","getCars","getAllCars","subscribe","next","carsList","cars","console","log","error","onEditCar","car","dialogRef","open","width","data","afterClosed","result","onCreateCar","push","onRemoveCar","removeCar","id","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/car/car-list/car-list.component.ts","/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/car/car-list/car-list.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Car } from 'src/app/model/Car';\nimport { CarEditorComponent } from '../car-editor/car-editor.component';\nimport { getLocaleFirstDayOfWeek } from '@angular/common';\nimport { AuthenticationHttpService } from 'src/app/http-service/authentication-http.service';\nimport { CarHttpService } from 'src/app/http-service/car-http.service';\nimport { FuelTypeEnum } from 'src/app/model/FuelTypeEnum';\n\n@Component({\n  selector: 'app-car-list',\n  templateUrl: './car-list.component.html',\n  styleUrls: ['./car-list.component.css'],\n})\nexport class CarListComponent implements OnInit{\n  @Input() cars: Car[] = [];\n\n  constructor(private dialog: MatDialog,\n    private readonly carHttpService: CarHttpService,\n    ) {}\n\n  ngOnInit(): void {\n    this.getCars();\n  }\n\n  getCars() {\n    this.carHttpService.getAllCars().subscribe({\n      next: carsList => {\n        this.cars = carsList;\n        console.log(\"Success\");\n      },\n      error: () => console.log(\"Error\")\n    });\n  }\n\n  // Add methods for edit and remove functionalities\n  onEditCar(car: Car): void {\n    const dialogRef = this.dialog.open(CarEditorComponent, {\n      width: '600px',\n      data: { car }, // Pass the car object to the CarEditorComponent through data\n    });\n\n    dialogRef.afterClosed().subscribe((result: Car) => {\n      // The result contains the edited car or undefined if the dialog was closed without saving\n      if (result) {\n        // Update the car data in the list or perform any other action with the edited car\n        console.log('Edited Car:', result);\n      }\n    });\n  }\n\n  onCreateCar(): void {\n    const dialogRef = this.dialog.open(CarEditorComponent, {\n      width: '600px',\n      data: { car: new Car() },\n    });\n\n    dialogRef.afterClosed().subscribe((result: Car) => {\n      if (result) {\n        this.cars.push(result);\n        console.log('Created Car:', result);\n      }\n    });\n  }\n\n  onRemoveCar(car: Car): void {\n    this.carHttpService.removeCar(car.id).subscribe({\n      next: () => {\n        console.log(\"Car removed\")\n        this.getCars();\n      },\n      error: () => console.log(\"Error\")\n    });\n  }\n}\n","<div class=\"button-container\">\n    <button mat-raised-button color=\"primary\" (click)=\"onCreateCar()\">Create Car</button>\n  </div>\n<table class=\"car-table\">\n    <tr>\n      <th>Name</th>\n      <th>Photo</th>\n      <th>Dealer Name</th>\n      <th>Fuel Type</th>\n      <th>Actions</th>\n    </tr>\n    <tr *ngFor=\"let car of cars\">\n      <td>{{ car.name }}</td>\n      <td>\n        <img\n          *ngIf=\"car.photoPath\"\n          [src]=\"car.photoPath\"\n          alt=\"Car Photo\"\n          class=\"car-photo\"\n        />\n      </td>\n      <td>{{ car.carDealer }}</td>\n      <td>{{ car.fuelType }}</td>\n      <td>\n        <button (click)=\"onEditCar(car)\">Edit</button>\n        <button (click)=\"onRemoveCar(car)\">Remove</button>\n      </td>\n    </tr>\n  </table>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}