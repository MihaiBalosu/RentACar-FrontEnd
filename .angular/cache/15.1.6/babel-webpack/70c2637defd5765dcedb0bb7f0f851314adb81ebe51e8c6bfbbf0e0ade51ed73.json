{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CarHttpService = /*#__PURE__*/(() => {\n  class CarHttpService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.baseUrl = \"http://localhost:8180/api\";\n      this.requestHeader = new HttpHeaders({\n        \"Authorization\": `Bearer ${localStorage.getItem(\"jwtToken\")}`\n      });\n    }\n    getAllCars() {\n      console.log(localStorage.getItem(\"jwtToken\"));\n      return this.httpClient.get(this.baseUrl + \"/car\", {\n        headers: this.requestHeader\n      });\n    }\n    removeCar(id) {\n      return this.httpClient.delete(`${this.baseUrl}/car/${id}`, {\n        headers: this.requestHeader\n      });\n    }\n    save(car) {\n      return this.httpClient.post(this.baseUrl + \"/car\", car, {\n        headers: this.requestHeader\n      });\n    }\n  }\n  CarHttpService.ɵfac = function CarHttpService_Factory(t) {\n    return new (t || CarHttpService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  CarHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CarHttpService,\n    factory: CarHttpService.ɵfac,\n    providedIn: 'root'\n  });\n  return CarHttpService;\n})();","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;AAO5D,WAAaC,cAAc;EAArB,MAAOA,cAAc;IAOvBC,YACYC,UAAsB;MAAtB,eAAU,GAAVA,UAAU;MAPtB,YAAO,GAAG,2BAA2B;MAErC,kBAAa,GAAG,IAAIH,WAAW,CAC3B;QAAC,eAAe,EAAE,UAAkBI,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAAE,CAAC,CACxE;IAIH;IAEOC,UAAU;MACbC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MAC7C,OAAO,IAAI,CAACF,UAAU,CAACM,GAAG,CAAM,IAAI,CAACC,OAAO,GAAG,MAAM,EAAE;QAACC,OAAO,EAAE,IAAI,CAACC;MAAa,CAAC,CAAC;IACzF;IAEOC,SAAS,CAACC,EAAU;MACvB,OAAO,IAAI,CAACX,UAAU,CACnBY,MAAM,CAAC,GAAG,IAAI,CAACL,OAAO,QAAQI,EAAE,EAAE,EAAE;QAACH,OAAO,EAAE,IAAI,CAACC;MAAa,CAAC,CAAC;IACzE;IAEOI,IAAI,CAACC,GAAQ;MAChB,OAAO,IAAI,CAACd,UAAU,CACnBe,IAAI,CAAC,IAAI,CAACR,OAAO,GAAG,MAAM,EAAEO,GAAG,EAAE;QAACN,OAAO,EAAE,IAAI,CAACC;MAAa,CAAC,CAAC;IACtE;;;qBAxBSX,cAAc;EAAA;;WAAdA,cAAc;IAAAkB,SAAdlB,cAAc;IAAAmB,YAFb;EAAM;EAAA,OAEPnB,cAAc;AAAA","names":["HttpHeaders","CarHttpService","constructor","httpClient","localStorage","getItem","getAllCars","console","log","get","baseUrl","headers","requestHeader","removeCar","id","delete","save","car","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/http-service/car-http.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport { User } from '../model/User';\nimport { Car } from '../model/Car';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarHttpService {\n    baseUrl = \"http://localhost:8180/api\";\n\n    requestHeader = new HttpHeaders(\n        {\"Authorization\": `Bearer ${<string>localStorage.getItem(\"jwtToken\")}`}\n      );  \n\n    constructor(\n        private httpClient: HttpClient) {\n    }\n\n    public getAllCars() {\n        console.log(localStorage.getItem(\"jwtToken\"))\n        return this.httpClient.get<any>(this.baseUrl + \"/car\", {headers: this.requestHeader})\n    }\n\n    public removeCar(id: number) {\n        return this.httpClient\n          .delete(`${this.baseUrl}/car/${id}`, {headers: this.requestHeader});\n    }\n\n    public save(car: Car){\n        return this.httpClient\n          .post(this.baseUrl + \"/car\", car, {headers: this.requestHeader});\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}