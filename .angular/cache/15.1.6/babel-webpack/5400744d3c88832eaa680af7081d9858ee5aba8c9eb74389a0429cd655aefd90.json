{"ast":null,"code":"import { User } from '../model/User';\nimport { RoleEnum } from '../model/RoleEnum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../http-service/authentication-http.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/icon\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(authenticationHttpService) {\n      this.authenticationHttpService = authenticationHttpService;\n      this.registerData = {\n        username: '',\n        email: '',\n        password: ''\n      };\n      this.hidePassword = true;\n    }\n    onRegisterSubmit() {\n      let registeredUser = new User(this.registerData.username, this.registerData.email, this.registerData.password, RoleEnum.USER);\n      this.authenticationHttpService.register(registeredUser).subscribe({\n        next: user => {\n          console.log(\"Success\");\n        },\n        error: err => console.log(\"Error\")\n      });\n    }\n    togglePasswordVisibility() {\n      this.hidePassword = !this.hidePassword;\n    }\n  }\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationHttpService));\n  };\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 30,\n    vars: 5,\n    consts: [[1, \"register-container\"], [1, \"register-card\"], [1, \"register-header\"], [1, \"register-title\"], [1, \"register-body\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"appearance\", \"outline\", 1, \"w-100\"], [1, \"input-with-icon\"], [1, \"icon-align\", \"email-icon\"], [\"matInput\", \"\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [1, \"icon-align\", \"username-icon\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"username\", \"required\", \"\", \"placeholder\", \"Username\", 3, \"ngModel\", \"ngModelChange\"], [1, \"icon-align\", \"password-icon\"], [\"matInput\", \"\", \"name\", \"password\", \"required\", \"\", \"placeholder\", \"Password\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"eye-button\", 3, \"click\"], [1, \"password-visibility-icon\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n        i0.ɵɵtext(4, \"Register\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onRegisterSubmit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"mat-form-field\", 7)(9, \"div\", 8)(10, \"mat-icon\", 9);\n        i0.ɵɵtext(11, \"email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.registerData.email = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(13, \"div\", 6)(14, \"mat-form-field\", 7)(15, \"div\", 8)(16, \"mat-icon\", 11);\n        i0.ɵɵtext(17, \"person\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.registerData.username = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"mat-form-field\", 7)(21, \"div\", 8)(22, \"mat-icon\", 13);\n        i0.ɵɵtext(23, \"vpn_key\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.registerData.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_25_listener() {\n          return ctx.togglePasswordVisibility();\n        });\n        i0.ɵɵelementStart(26, \"mat-icon\", 16);\n        i0.ɵɵtext(27);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(28, \"button\", 17);\n        i0.ɵɵtext(29, \"Register\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.registerData.email);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.registerData.username);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"type\", ctx.hidePassword ? \"password\" : \"text\")(\"ngModel\", ctx.registerData.password);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.hidePassword ? \"visibility_off\" : \"visibility\");\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i3.MatIconButton, i4.MatFormField, i5.MatInput, i6.MatIcon],\n    styles: [\".register-container[_ngcontent-%COMP%] {\\n    height: 100vh;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n  \\n  .register-card[_ngcontent-%COMP%] {\\n    width: 100%;\\n    max-width: 400px;\\n    background-color: #fff;\\n    border-radius: 8px;\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  .register-header[_ngcontent-%COMP%] {\\n    background-color: #007bff;\\n    color: #fff;\\n    text-align: center;\\n    padding: 20px;\\n    border-top-left-radius: 8px;\\n    border-top-right-radius: 8px;\\n  }\\n  \\n  .register-title[_ngcontent-%COMP%] {\\n    margin: 0;\\n    font-size: 24px;\\n  }\\n  \\n  .register-body[_ngcontent-%COMP%] {\\n    padding: 20px;\\n  }\\n  \\n  .mat-form-field[_ngcontent-%COMP%] {\\n    width: 100%;\\n    height: 64px;\\n  }\\n  \\n  .btn[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n    width: 100%;\\n  }\\n  \\n  .input-with-icon[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n    position: relative;\\n  }\\n  \\n  .icon-align[_ngcontent-%COMP%] {\\n    margin-right: 8px;\\n    font-size: 24px;\\n    height: 24px;\\n    width: 24px;\\n  }\\n  \\n  .email-icon[_ngcontent-%COMP%], .password-icon[_ngcontent-%COMP%], .username-icon[_ngcontent-%COMP%] {\\n    height: 24px;\\n    width: 24px;\\n  }\\n  \\n  .eye-button[_ngcontent-%COMP%] {\\n    height: 24px; \\n    width: 32px; \\n  }\\n\\n  .password-visibility-icon[_ngcontent-%COMP%] {\\n    position: absolute;\\n    top: 0px;\\n    left: 0px;\\n    height: 24px; \\n    width: 32px; \\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHVCQUF1QjtFQUN6Qjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQix3Q0FBd0M7RUFDMUM7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsV0FBVztJQUNYLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsMkJBQTJCO0lBQzNCLDRCQUE0QjtFQUM5Qjs7RUFFQTtJQUNFLFNBQVM7SUFDVCxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsYUFBYTtFQUNmOztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsWUFBWTtJQUNaLFdBQVc7RUFDYjs7RUFFQTs7O0lBR0UsWUFBWTtJQUNaLFdBQVc7RUFDYjs7RUFFQTtJQUNFLFlBQVk7SUFDWixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxZQUFZO0lBQ1osV0FBVztFQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLnJlZ2lzdGVyLWNvbnRhaW5lciB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH1cbiAgXG4gIC5yZWdpc3Rlci1jYXJkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGJveC1zaGFkb3c6IDAgNHB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIH1cbiAgXG4gIC5yZWdpc3Rlci1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogOHB4O1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA4cHg7XG4gIH1cbiAgXG4gIC5yZWdpc3Rlci10aXRsZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgfVxuICBcbiAgLnJlZ2lzdGVyLWJvZHkge1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gIH1cbiAgXG4gIC5tYXQtZm9ybS1maWVsZCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA2NHB4O1xuICB9XG4gIFxuICAuYnRuIHtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuaW5wdXQtd2l0aC1pY29uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIFxuICAuaWNvbi1hbGlnbiB7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGhlaWdodDogMjRweDtcbiAgICB3aWR0aDogMjRweDtcbiAgfVxuICBcbiAgLmVtYWlsLWljb24sXG4gIC5wYXNzd29yZC1pY29uLFxuICAudXNlcm5hbWUtaWNvbiB7XG4gICAgaGVpZ2h0OiAyNHB4O1xuICAgIHdpZHRoOiAyNHB4O1xuICB9XG4gIFxuICAuZXllLWJ1dHRvbiB7XG4gICAgaGVpZ2h0OiAyNHB4OyBcbiAgICB3aWR0aDogMzJweDsgXG4gIH1cblxuICAucGFzc3dvcmQtdmlzaWJpbGl0eS1pY29uIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwcHg7XG4gICAgbGVmdDogMHB4O1xuICAgIGhlaWdodDogMjRweDsgXG4gICAgd2lkdGg6IDMycHg7IFxuICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n  return RegisterComponent;\n})();","map":{"version":3,"mappings":"AAEA,SAASA,IAAI,QAAQ,eAAe;AACpC,SAASC,QAAQ,QAAQ,mBAAmB;;;;;;;;AAQ5C,WAAaC,iBAAiB;EAAxB,MAAOA,iBAAiB;IAS5BC,YACmBC,yBAAoD;MAApD,8BAAyB,GAAzBA,yBAAyB;MAT5C,iBAAY,GAAG;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;OACX;MAED,iBAAY,GAAG,IAAI;IAMnB;IAEAC,gBAAgB;MACd,IAAIC,cAAc,GAAS,IAAIT,IAAI,CACjC,IAAI,CAACU,YAAY,CAACL,QAAQ,EAC1B,IAAI,CAACK,YAAY,CAACJ,KAAK,EACvB,IAAI,CAACI,YAAY,CAACH,QAAQ,EAC1BN,QAAQ,CAACU,IAAI,CAAC;MAEd,IAAI,CAACP,yBAAyB,CAACQ,QAAQ,CAACH,cAAc,CAAC,CAACI,SAAS,CAAC;QAChEC,IAAI,EAAEC,IAAI,IAAG;UACXC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QACxB,CAAC;QACDC,KAAK,EAAEC,GAAG,IAAIH,OAAO,CAACC,GAAG,CAAC,OAAO;OAClC,CAAC;IACJ;IAEFG,wBAAwB;MACtB,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;IACxC;;;qBAhCWnB,iBAAiB;EAAA;;UAAjBA,iBAAiB;IAAAoB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCX9BC,8BAAgC;QAGGA,wBAAQ;QAAAA,iBAAK;QAE1CA,8BAA2B;QACnBA;UAAA,OAAYC,sBAAkB;QAAA,EAAC;QACnCD,8BAAwB;QAGsBA,sBAAK;QAAAA,iBAAW;QACxDA,kCAAwG;QAA9DA;UAAA;QAAA,EAAgC;QAA1EA,iBAAwG;QAI9GA,+BAAwB;QAGyBA,uBAAM;QAAAA,iBAAW;QAC5DA,kCAAgH;QAApEA;UAAA;QAAA,EAAmC;QAA/EA,iBAAgH;QAItHA,+BAAwB;QAGyBA,wBAAO;QAAAA,iBAAW;QAC7DA,kCAAgJ;QAApEA;UAAA;QAAA,EAAmC;QAA/GA,iBAAgJ;QAChJA,mCAA8F;QAAxDA;UAAA,OAASC,8BAA0B;QAAA,EAAC;QACxED,qCAA2C;QAAAA,aAAoD;QAAAA,iBAAW;QAKlHA,mCAAwD;QAAAA,yBAAQ;QAAAA,iBAAS;;;QAvBzBA,gBAAgC;QAAhCA,gDAAgC;QAQ9BA,eAAmC;QAAnCA,mDAAmC;QAQ/DA,eAA2C;QAA3CA,6DAA2C;QAEdA,eAAoD;QAApDA,wEAAoD;;;;;;SDlBpGzB,iBAAiB;AAAA","names":["User","RoleEnum","RegisterComponent","constructor","authenticationHttpService","username","email","password","onRegisterSubmit","registeredUser","registerData","USER","register","subscribe","next","user","console","log","error","err","togglePasswordVisibility","hidePassword","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/register/register.component.ts","/Users/balosumihai/Master II/RentACar/RentACar-FrontEnd/src/app/register/register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthenticationHttpService } from '../http-service/authentication-http.service';\nimport { User } from '../model/User';\nimport { RoleEnum } from '../model/RoleEnum';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  registerData = {\n    username: '',\n    email: '',\n    password: ''\n  };\n\n  hidePassword = true;\n\n  constructor(\n    private readonly authenticationHttpService: AuthenticationHttpService,\n    // private readonly toastr: ToastrService\n  ) {\n  }\n\n  onRegisterSubmit() {\n    let registeredUser: User = new User( \n      this.registerData.username, \n      this.registerData.email, \n      this.registerData.password, \n      RoleEnum.USER)\n\n      this.authenticationHttpService.register(registeredUser).subscribe({\n        next: user => {\n          console.log(\"Success\");\n        },\n        error: err => console.log(\"Error\")\n      });  \n    }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n}\n","<div class=\"register-container\">\n    <div class=\"register-card\">\n      <div class=\"register-header\">\n        <h3 class=\"register-title\">Register</h3>\n      </div>\n      <div class=\"register-body\">\n        <form (ngSubmit)=\"onRegisterSubmit()\">\n          <div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n              <div class=\"input-with-icon\">\n                <mat-icon class=\"icon-align email-icon\">email</mat-icon>\n                <input matInput type=\"email\" name=\"email\" [(ngModel)]=\"registerData.email\" required placeholder=\"Email\">\n              </div>\n            </mat-form-field>\n          </div>\n          <div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n              <div class=\"input-with-icon\">\n                <mat-icon class=\"icon-align username-icon\">person</mat-icon>\n                <input matInput type=\"text\" name=\"username\" [(ngModel)]=\"registerData.username\" required placeholder=\"Username\">\n              </div>\n            </mat-form-field>\n          </div>\n          <div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n              <div class=\"input-with-icon\">\n                <mat-icon class=\"icon-align password-icon\">vpn_key</mat-icon>\n                <input matInput [type]=\"hidePassword ? 'password' : 'text'\" name=\"password\" [(ngModel)]=\"registerData.password\" required placeholder=\"Password\">\n                <button mat-icon-button type=\"button\" (click)=\"togglePasswordVisibility()\" class=\"eye-button\">\n                  <mat-icon class=\"password-visibility-icon\">{{ hidePassword ? 'visibility_off' : 'visibility' }}</mat-icon>\n                </button>\n              </div>\n            </mat-form-field>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary btn-block\">Register</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}